<?xml version="1.0"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">

<channel>
	<title>Planet Eclipse</title>
	<link>http://planeteclipse.org/</link>
	<language>en</language>
	<description>Planet Eclipse - http://planeteclipse.org/</description>
	<atom:link rel="self" href="http://planeteclipse.org/rss20.xml" type="application/rss+xml"/>

<item>
	<title>Jonas, Maximilian and Philip: Eclipse GLSP 1.0: Leading-edge diagram editor support</title>
	<guid isPermaLink="false">https://eclipsesource.com/?p=46170</guid>
	<link>https://eclipsesource.com/blogs/2022/07/14/eclipse-glsp-1-0-leading-edge-diagram-editor-support/</link>
	<description>&lt;p&gt;In this article, we will highlight an area of improvement for the Eclipse GLSP 1.0 release: The leading edge support for...&lt;/p&gt;
&lt;p&gt;The post &lt;a href=&quot;https://eclipsesource.com/blogs/2022/07/14/eclipse-glsp-1-0-leading-edge-diagram-editor-support/&quot; rel=&quot;nofollow&quot;&gt;Eclipse GLSP 1.0: Leading-edge diagram editor support&lt;/a&gt; appeared first on &lt;a href=&quot;https://eclipsesource.com&quot; rel=&quot;nofollow&quot;&gt;EclipseSource&lt;/a&gt;.&lt;/p&gt;</description>
	<pubDate>Thu, 14 Jul 2022 07:05:28 +0000</pubDate>
</item>
<item>
	<title>Donald Raab: Sending the open source library I created off to college</title>
	<guid isPermaLink="false">https://medium.com/p/a398bba5e518</guid>
	<link>https://donraab.medium.com/sending-the-open-source-library-i-created-off-to-college-a398bba5e518?source=rss-df39b86e9f04------2</link>
	<description>&lt;p&gt;The future of the library no longer requires my continual presence.&lt;/p&gt;&lt;figure&gt;&lt;img alt=&quot;&quot; src=&quot;https://cdn-images-1.medium.com/max/1024/0*WXaKqnEzoEcrCnIm&quot; /&gt;&lt;figcaption&gt;Photo by &lt;a href=&quot;https://unsplash.com/@joannakosinska?utm_source=medium&amp;amp;utm_medium=referral&quot;&gt;Joanna Kosinska&lt;/a&gt; on &lt;a href=&quot;https://unsplash.com?utm_source=medium&amp;amp;utm_medium=referral&quot;&gt;Unsplash&lt;/a&gt;&lt;/figcaption&gt;&lt;/figure&gt;&lt;h3&gt;All grown up&lt;/h3&gt;&lt;p&gt;I’ve spent 18 years growing a Java collections library named &lt;a href=&quot;https://github.com/eclipse/eclipse-collections&quot;&gt;Eclipse Collections&lt;/a&gt;. I love this library. It is a great library, and has an amazing community of developers contributing to and supporting it. I will use this library for as long as I code in Java. This library has helped me achieve many things that the Java Collections framework could not.&lt;/p&gt;&lt;p&gt;I have been a doting parent for this library for over 18 years. It is time for this library to find its way.&lt;/p&gt;&lt;p&gt;The library enables developers to write better, more expressive and high performance code. Eclipse Collections helps produce better developers that care about their craft as software engineers. Productivity, readability, performance, efficiency… you name it, Eclipse Collections has it, and the library can help developers learn how to achieve these things in their daily Java application coding activities.&lt;/p&gt;&lt;p&gt;I could keep driving the library, but I don’t think it needs me to do this anymore. It is ready to go out and help the world as an adult library. It doesn’t require me to continue being a doting parent. I would just be holding it back. I created the library in 2004, and have helped maintain it for over a decade in open source. My son is a year younger than this library and we are preparing him for his senior year of high school and to go off to college and to grow up on his own. Eclipse Collections is a year older, and it is time for it to find its own way.&lt;/p&gt;&lt;h3&gt;I wrote it all down&lt;/h3&gt;&lt;p&gt;If you’ve been following my blogs here, I have been telling stories of the past 18, 20, 30, 40 years of my life as a developer. Almost everything you might want to know about the library has probably been told in a blog. I have left maps of all the places the library has been and some of places it might still go. I have explained how it evolved over time to solve challenging problems.&lt;/p&gt;&lt;p&gt;The library needs to meet new developers and find new friends who want to learn and contribute to it. There are many lessons this library has to offer the entire Java community. The open source Java developer community will be the future of Eclipse Collections.&lt;/p&gt;&lt;p&gt;Last year I wrote a blog series titled “The missing Java data structures no one ever told you about.” It has a lot of lesser known knowledge of how and why things were done in the framework.&lt;/p&gt;&lt;p&gt;&lt;a href=&quot;https://medium.com/javarevisited/blog-series-the-missing-java-data-structures-no-one-ever-told-you-about-17f34cc4b7e2&quot;&gt;Blog Series: The missing Java data structures no one ever told you about&lt;/a&gt;&lt;/p&gt;&lt;h3&gt;Graduation Ceremony&lt;/h3&gt;&lt;p&gt;I’ve been contemplating when and how to take a break from Eclipse Collections for a long time, and now is the time. I was waiting for the Eclipse Collections 11.1 release to make this decision. I want to focus more time with my family and on my health. Reaching 2K followers on GitHub felt like a good milestone to take a much needed break.&lt;/p&gt;&lt;p&gt;&lt;a href=&quot;https://medium.com/javarevisited/eclipse-collections-11-1-released-acca6905585a&quot;&gt;Eclipse Collections 11.1 Released&lt;/a&gt;&lt;/p&gt;&lt;h3&gt;What does it mean for the future of the library?&lt;/h3&gt;&lt;p&gt;Don’t worry, I’ll still be staying on as a committer for the library, and I will continue writing and sharing stories and lessons in blogs on occasion when I have time. I will also make code contributions if I find something that interests me. We have a great team of committers on the project. Based on the outcomes and some discussions that happened during the Eclipse Collections 11.1 release among the committer community, I think the future is fairly well defined for the library already. The part that is very clear — the library will baseline development on Java 11 in the next release.&lt;/p&gt;&lt;p&gt;&lt;strong&gt;&lt;em&gt;What will I not be doing?&lt;/em&gt;&lt;/strong&gt; I will not be actively driving the planning for the 12.0 or future releases. I will not be writing the release blogs after releases are completed. I will not be doing as many code reviews and merges, but I will do them for other committers on the project as needed. We are looking to promote more committers on the project, so this is a great time for contributors in the community who are interested in stepping up their game to get involved and hopefully go through the nomination and election process to committer once they have earned their way.&lt;/p&gt;&lt;p&gt;The future is not set and holds many possibilities. I hope this blog inspires and motivates others to get involved in shaping our collective future in the Java community.&lt;/p&gt;&lt;blockquote&gt;The future is up to you, the contributor&lt;/blockquote&gt;&lt;p&gt;&lt;a href=&quot;https://donraab.medium.com/the-next-5-years-for-eclipse-collections-a1f3ce896c2c&quot;&gt;The next 5 years for Eclipse Collections&lt;/a&gt;&lt;/p&gt;&lt;p&gt;Good luck and good health on your own journeys! Thank you!&lt;/p&gt;&lt;p&gt;&lt;em&gt;I am the creator of and a Committer for the &lt;/em&gt;&lt;a href=&quot;https://github.com/eclipse/eclipse-collections&quot;&gt;&lt;em&gt;Eclipse Collections&lt;/em&gt;&lt;/a&gt;&lt;em&gt; OSS project which is managed at the &lt;/em&gt;&lt;a href=&quot;https://projects.eclipse.org/projects/technology.collections&quot;&gt;&lt;em&gt;Eclipse Foundation&lt;/em&gt;&lt;/a&gt;&lt;em&gt;. &lt;/em&gt;&lt;a href=&quot;https://github.com/eclipse/eclipse-collections&quot;&gt;&lt;em&gt;Eclipse Collections&lt;/em&gt;&lt;/a&gt;&lt;em&gt; is open for &lt;/em&gt;&lt;a href=&quot;https://github.com/eclipse/eclipse-collections/blob/master/CONTRIBUTING.md&quot;&gt;&lt;em&gt;contributions&lt;/em&gt;&lt;/a&gt;&lt;em&gt;.&lt;/em&gt;&lt;/p&gt;&lt;img alt=&quot;&quot; height=&quot;1&quot; src=&quot;https://medium.com/_/stat?event=post.clientViewed&amp;amp;referrerSource=full_rss&amp;amp;postId=a398bba5e518&quot; width=&quot;1&quot; /&gt;</description>
	<pubDate>Wed, 13 Jul 2022 22:01:23 +0000</pubDate>
</item>
<item>
	<title>Eclipse Announcements: The Eclipse Foundation Announces the Release of Eclipse GLSP 1.0, an Open Source Diagram Framework for the Web</title>
	<guid isPermaLink="true">https://newsroom.eclipse.org/news/announcements/eclipse-foundation-announces-release-eclipse-glsp-10-open-source-diagram</guid>
	<link>https://newsroom.eclipse.org/news/announcements/eclipse-foundation-announces-release-eclipse-glsp-10-open-source-diagram</link>
	<description>&lt;p class=&quot;rtecenter&quot;&gt;&lt;em&gt;Eclipse GLSP adopters include AxonIvy, EclipseSource, Logi.cals, OpenBPMN and STMicroelectronics&lt;/em&gt;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;BRUSSELS, JULY 12, 2022 – &lt;/strong&gt;The&lt;a href=&quot;https://www.eclipse.org/&quot;&gt; Eclipse Foundation&lt;/a&gt;, one of the world’s largest open source software foundations, has announced the release of Eclipse GLSP 1.0, a fully open source solution for building web-based diagram editors.&lt;/p&gt;

&lt;p&gt;Eclipse GLSP is an extensible platform to develop diagramming solutions of all kinds. GLSP can be used in Eclipse Theia, in VS Code, in Eclipse desktop, or any kind of web application. Architecturally, Eclipse GLSP adopts the popular concept of language servers for diagram editors.&lt;/p&gt;

&lt;p&gt;“Diagram solutions such as GEF and GMF have always been essential to the Eclipse ecosystem” said Mike Milinkovich, executive director of the Eclipse Foundation. “With the advancements made in Eclipse Theia, Che and other technologies, the Eclipse Foundation’s developer tools ecosystem is rapidly becoming more cloud-focused. We are thrilled to see Eclipse GLSP achieve this important milestone that fills an important gap in existing web-based tool and IDE offerings.”&lt;/p&gt;

&lt;p&gt;Contributed to the Eclipse Foundation by EclipseSource in 2017, GLSP diagram editors have already become an integral part of web-based tool chains around the globe. Contributors and adopters span a broad variety of industries and applications, and include companies like AxonIvy, Logi.cals, OpenBPMN, and STMicroelectronics, in addition to EclipseSource. Eclipse GLSP is part of the Eclipse Cloud DevTools Working Group, an industry collaboration focused on delivering development tools for and in the cloud.&lt;/p&gt;

&lt;p&gt;To learn more about the Eclipse GLSP 1.0 release, its core features and the technology, please visit the &lt;a href=&quot;https://eclipsesource.com/blogs/2022/07/06/eclipse-glsp-1-0-release-is-here/&quot;&gt;release announcement&lt;/a&gt;. To get involved with the Eclipse GLSP Project and begin contributing, please visit&lt;a href=&quot;https://eclipse.org/glsp&quot;&gt; https://eclipse.org/glsp&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Eclipse GLSP Project Adopters and Quotes from contributors:&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;EclipseSource&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;“In our customer base, we observe a rapidly increasing interest in web-based tools that integrate Eclipse GLSP diagrams of all kinds,” said  Dr. Philip Langer, principal software architect and CEO at EclipseSource. “The 1.0 release reflects the stability and maturity of the platform. The flexibility of GLSP allows us to implement tailored and cutting edge diagram solutions for our clients.” &lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Logi.cals GmbH&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;“Eclipse GLSP is a key-enabler for us in efficiently making the diagram editors of our industrial automation engineering tool available in a cloud-based environment. GLSP not only provides the flexibility to address all our custom requirements and integrations, but is also the technological underpinning for achieving a great and modern UX,” said Heinrich Steininger, CTO, Logi.cals. “On top of that, this technology perfectly aligns with our development strategy facilitating single-sourcing of the business for our supported platforms, such as desktop and cloud.” &lt;/p&gt;

&lt;p&gt;&lt;strong&gt;OpenBPMN&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;“If you're planning to implement your own modeling tool, take a look at Eclipse GLSP,” said Ralph Soika, project lead for OpenBPMN. “This is an absolutely amazing new tool platform.&lt;/p&gt;

&lt;p&gt;&lt;br /&gt;
&lt;strong&gt;About the Eclipse Foundation&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;The Eclipse Foundation provides our global community of individuals and organizations with a mature, scalable, and business-friendly environment for open source software collaboration and innovation. The Foundation is home to the Eclipse IDE, Jakarta EE, and over 400 open source projects, including runtimes, tools, and frameworks for cloud and edge applications, IoT, AI, automotive, systems engineering, distributed ledger technologies, open processor designs, and many others. The Eclipse Foundation is an international non-profit association supported by over 330 members, including industry leaders who value open source as a key enabler for their business strategies. To learn more, follow us on Twitter&lt;a href=&quot;https://twitter.com/EclipseFdn&quot;&gt; @EclipseFdn&lt;/a&gt;,&lt;a href=&quot;https://linkedin.com/company/eclipse-foundation&quot;&gt; LinkedIn&lt;/a&gt; or visit&lt;a href=&quot;http://eclipse.org&quot;&gt; eclipse.org&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;Third-party trademarks mentioned are the property of their respective owners.&lt;/p&gt;

&lt;p&gt; &lt;/p&gt;

&lt;p&gt;###&lt;/p&gt;

&lt;p&gt; &lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Media contacts:&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;&lt;span style=&quot;text-decoration: underline;&quot;&gt;Schwartz Public Relations for the Eclipse Foundation, AISBL&lt;/span&gt;&lt;/p&gt;

&lt;p&gt;Stephanie Brüls / Susanne Pawlik&lt;/p&gt;

&lt;p&gt;Sendlinger Straße 42A&lt;/p&gt;

&lt;p&gt;80331 Munich&lt;/p&gt;

&lt;p&gt;EclipseFoundation@schwartzpr.de&lt;/p&gt;

&lt;p&gt;+49 (89) 211 871 – 64 / -35&lt;/p&gt;

&lt;p&gt; &lt;/p&gt;

&lt;p&gt;&lt;span style=&quot;text-decoration: underline;&quot;&gt;Nichols Communications for the Eclipse Foundation, AISBL&lt;/span&gt;&lt;/p&gt;

&lt;p&gt;Jay Nichols&lt;/p&gt;

&lt;p&gt;jay@nicholscomm.com&lt;/p&gt;

&lt;p&gt;+1 408-772-1551&lt;/p&gt;</description>
	<pubDate>Wed, 13 Jul 2022 11:00:00 +0000</pubDate>
</item>
<item>
	<title>Eclipse Ditto: Reactive MQTT Connectivity</title>
	<guid isPermaLink="true">https://www.eclipse.org/ditto/2022-07-12-reactive-mqtt.html</guid>
	<link>https://www.eclipse.org/ditto/2022-07-12-reactive-mqtt.html</link>
	<description>&lt;p&gt;The upcoming Eclipse Ditto version 3.0.0 will ship with a major refactoring of the MQTT
connectivity module.&lt;br /&gt;
In this post we want to highlight whatâ€™s new and why this could be interesting for you.&lt;/p&gt;

&lt;h2 id=&quot;backpressure-via-throttling&quot;&gt;Backpressure via throttling&lt;/h2&gt;
&lt;p&gt;The most noteworthy innovation is that Ditto now consumes incoming publish messages
by using the
&lt;a href=&quot;https://hivemq.github.io/hivemq-mqtt-client/docs/api-flavours/&quot;&gt;reactive API flavour of the HiveMQ client&lt;/a&gt;.&lt;br /&gt;
This, together with throttling, effectively enables &lt;em&gt;backpressure&lt;/em&gt; for inbound
MQTT publishes for protocol version 3.x and 5:&lt;/p&gt;

&lt;div class=&quot;language-config highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;n&quot;&gt;connectivity&lt;/span&gt;.&lt;span class=&quot;n&quot;&gt;conf&lt;/span&gt;

â€¦
&lt;span class=&quot;n&quot;&gt;throttling&lt;/span&gt; {
  &lt;span class=&quot;n&quot;&gt;enabled&lt;/span&gt; = &lt;span class=&quot;n&quot;&gt;true&lt;/span&gt; 
  &lt;span class=&quot;n&quot;&gt;enabled&lt;/span&gt; = ${?&lt;span class=&quot;n&quot;&gt;MQTT_CONSUMER_THROTTLING_ENABLED&lt;/span&gt;}

  &lt;span class=&quot;c&quot;&gt;# Interval at which the consumer is throttled. Must be &amp;gt; 0s.
&lt;/span&gt;  &lt;span class=&quot;n&quot;&gt;interval&lt;/span&gt; = &lt;span class=&quot;m&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;s&lt;/span&gt;
  &lt;span class=&quot;n&quot;&gt;interval&lt;/span&gt; = ${?&lt;span class=&quot;n&quot;&gt;MQTT_CONSUMER_THROTTLING_INTERVAL&lt;/span&gt;}

  &lt;span class=&quot;c&quot;&gt;# The maximum number of messages the consumer is allowed to receive
&lt;/span&gt;  &lt;span class=&quot;c&quot;&gt;# within the configured throttling interval e.g. 100 msgs/s.
&lt;/span&gt;  &lt;span class=&quot;c&quot;&gt;# Must be &amp;gt; 0.
&lt;/span&gt;  &lt;span class=&quot;n&quot;&gt;limit&lt;/span&gt; = &lt;span class=&quot;m&quot;&gt;100&lt;/span&gt;
  &lt;span class=&quot;n&quot;&gt;limit&lt;/span&gt; = ${?&lt;span class=&quot;n&quot;&gt;MQTT_CONSUMER_THROTTLING_LIMIT&lt;/span&gt;}
}
â€¦
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;
&lt;p&gt;This kind of throttling applies to all in-flight messages â€“ no matter what
their QoS is set to.&lt;br /&gt;
Backpressure protects Ditto from congestion caused by a too high amount of
incoming publishes.&lt;br /&gt;
Of course the broker has to deal with backpressure as well when throttling in
Ditto is enabled because the amount of unprocessed messages would pile up
at the broker.&lt;/p&gt;

&lt;h2 id=&quot;flow-control-with-receive-maximum-mqtt-5&quot;&gt;Flow Control with Receive Maximum (MQTT 5)&lt;/h2&gt;
&lt;p&gt;With MQTT 5 it is possible to specify a &lt;em&gt;Receive Maximum&lt;/em&gt; when the client
connects to the broker.&lt;br /&gt;
For QoS 1 or 2 this value determines how many unacknowledged incoming messages
the client accepts from the broker.&lt;br /&gt;
Apart from throttling this is an additional approach how Ditto can be protected
from excessive load â€“ at least for MQTT 5 connections.&lt;br /&gt;
The (client) Receive Maximum can be set for Ditto either in configuration or
via environment variable:&lt;/p&gt;

&lt;div class=&quot;language-config highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;n&quot;&gt;connectivity&lt;/span&gt;.&lt;span class=&quot;n&quot;&gt;conf&lt;/span&gt;

â€¦
&lt;span class=&quot;n&quot;&gt;receive&lt;/span&gt;-&lt;span class=&quot;n&quot;&gt;maximum&lt;/span&gt;-&lt;span class=&quot;n&quot;&gt;client&lt;/span&gt; = &lt;span class=&quot;m&quot;&gt;65535&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;receive&lt;/span&gt;-&lt;span class=&quot;n&quot;&gt;maximum&lt;/span&gt;-&lt;span class=&quot;n&quot;&gt;client&lt;/span&gt; = ${?&lt;span class=&quot;n&quot;&gt;CONNECTIVITY_MQTT_CLIENT_RECEIVE_MAXIMUM&lt;/span&gt;}
â€¦
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;For more details, please have a look at
&lt;a href=&quot;https://www.hivemq.com/blog/mqtt5-essentials-part12-flow-control/&quot;&gt;HiveMQâ€™s MQTT 5 Essentials, Part 12&lt;/a&gt;
that covers just this topic.&lt;/p&gt;

&lt;h2 id=&quot;unified-implementation&quot;&gt;Unified implementation&lt;/h2&gt;
&lt;p&gt;Under the hood, almost anything related to MQTT changed.
With the previous implementation most of the logic was divided into a common
base implementation and a concrete implementation for protocol version 3.1.1
and 5.&lt;br /&gt;
Obviously this worked.&lt;br /&gt;
However, the algorithms were scattered over multiple classes which made it
difficult to understand what is going on (hello, maintainability ðŸ˜‰).&lt;/p&gt;

&lt;p&gt;Now, the distinction between protocol version 3.x and 5 is made on the level
of data structures.&lt;br /&gt;
Luckily the evolution of the MQTT protocol from version 3.1.1 to version 5
as well as the design of HiveMQâ€™s client library made this very easy.&lt;br /&gt;
For example, instead of dealing with a &lt;code class=&quot;highlighter-rouge&quot;&gt;Mqtt3Publish&lt;/code&gt; and a &lt;code class=&quot;highlighter-rouge&quot;&gt;Mqtt5Publish&lt;/code&gt; in
parallel all the time we introduced  a &lt;code class=&quot;highlighter-rouge&quot;&gt;GenericMqttPublish&lt;/code&gt; which can be
converted from and to the specific types at the time when they come in
contact with the client.&lt;br /&gt;
The rest of the time Ditto can work with the generic representation.&lt;/p&gt;

&lt;figure&gt;&lt;img alt=&quot;Ditto&quot; class=&quot;docimage&quot; src=&quot;https://www.eclipse.org/ditto/images/ditto.svg&quot; /&gt;&lt;/figure&gt;

&lt;p&gt;â€“&lt;br /&gt;
The Eclipse Ditto team&lt;/p&gt;</description>
	<pubDate>Tue, 12 Jul 2022 00:00:00 +0000</pubDate>
</item>
<item>
	<title>Jonas, Maximilian and Philip: Eclipse Theia 1.27 Release: News and Noteworthy</title>
	<guid isPermaLink="false">https://eclipsesource.com/?p=46257</guid>
	<link>https://eclipsesource.com/blogs/2022/07/11/eclipse-theia-1-27-release-news-and-noteworthy/</link>
	<description>&lt;p&gt;We are happy to announce the Eclipse Theia 1.27 release! Just before summer, this is a big one again, the release...&lt;/p&gt;
&lt;p&gt;The post &lt;a href=&quot;https://eclipsesource.com/blogs/2022/07/11/eclipse-theia-1-27-release-news-and-noteworthy/&quot; rel=&quot;nofollow&quot;&gt;Eclipse Theia 1.27 Release: News and Noteworthy&lt;/a&gt; appeared first on &lt;a href=&quot;https://eclipsesource.com&quot; rel=&quot;nofollow&quot;&gt;EclipseSource&lt;/a&gt;.&lt;/p&gt;</description>
	<pubDate>Mon, 11 Jul 2022 10:16:58 +0000</pubDate>
</item>
<item>
	<title>InfoQ Eclipse feed: Java News Roundup: Eclipse Soteria 3.0, Log4j, Hibernate ORM, IntelliJ IDEA</title>
	<guid isPermaLink="true">https://www.infoq.com/news/2022/07/java-news-roundup-jul04-2022/?utm_campaign=infoq_content&amp;utm_source=infoq&amp;utm_medium=feed&amp;utm_term=Eclipse</guid>
	<link>https://www.infoq.com/news/2022/07/java-news-roundup-jul04-2022/?utm_campaign=infoq_content&amp;utm_source=infoq&amp;utm_medium=feed&amp;utm_term=Eclipse</link>
	<description>&lt;img src=&quot;https://res.infoq.com/news/2022/07/java-news-roundup-jul04-2022/en/headerimage/java-istock-image-01-1657488901338.jpg&quot; /&gt;&lt;p&gt;This week's Java roundup for July 4th, 2022, features news from JDK 19, JDK 20, Spring projects updates, Open Liberty 22.0.0.7 and 22.0.0.8-beta, Quarkus 2.10.2, Hibernate ORM 5.6.10, Hibernate Reactive 1.1.7, Eclipse Foundation projects updates, Apache Software Foundation projects updates, JDKMon 17.0.31 and 17.0.29 and JetBrains product updates.&lt;/p&gt; &lt;i&gt;By Michael Redlich&lt;/i&gt;</description>
	<pubDate>Mon, 11 Jul 2022 00:30:00 +0000</pubDate>
</item>
<item>
	<title>John Kellerman: Eclipse Cloud DevTools Digest - June, 2022</title>
	<guid isPermaLink="false">7193 at https://blogs.eclipse.org</guid>
	<link>https://blogs.eclipse.org/post/john-kellerman/eclipse-cloud-devtools-digest-june-2022</link>
	<description>&lt;div class=&quot;field field-name-body field-type-text-with-summary field-label-hidden&quot;&gt;&lt;div class=&quot;field-items&quot;&gt;&lt;div class=&quot;field-item even&quot;&gt;&lt;p&gt;Eclipse Cloud Dev Tools Working Group happenings for June, 2022; Obeo joins as strategic member, Q2 Community Update, Contributor Award to Theia Blueprint, and Theia 1.26&lt;/p&gt;

&lt;h3&gt;Obeo Joins as a Strategic Member and Suggest a Modeling SIG&lt;/h3&gt;

&lt;p&gt;&lt;img alt=&quot;&quot; class=&quot;center-block&quot; height=&quot;68&quot; src=&quot;https://blogs.eclipse.org/sites/default/files/users/user750/obeo.png&quot; width=&quot;272&quot; /&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;https://www.eclipse.org/membership/showMember.php?member_id=863&quot;&gt;Obeo&lt;/a&gt; has been a strategic member of the Eclipse Foundation since 2009, where they lead several projects such as &lt;a href=&quot;https://www.eclipse.org/acceleo/&quot;&gt;Acceleo&lt;/a&gt; and &lt;a href=&quot;https://www.eclipse.org/sirius/&quot;&gt;Sirius&lt;/a&gt; and participate in many other projects in order to enable efficient and seamless domain specific graphical modeling tools. In June they joined Cloud DevTools working group as a strategic member. They have begun socializing the concept of a special interest group (SIG) around modeling.&lt;/p&gt;

&lt;h3&gt;Eclipse Cloud DevTools Q2 Community Update&lt;/h3&gt;

&lt;p&gt;Thanks to all who participated in our Q2 update. A &lt;a href=&quot;https://www.youtube.com/watch?v=_EDmHmSsDeQ&quot;&gt;recording&lt;/a&gt; of all the sessions is available on the Eclipse YouTube channel and the update materials are available in the &lt;a href=&quot;https://www.eclipse.org/lists/ecd-tools-wg/msg00283.html&quot;&gt;ecd-tools-wg mailing list archive&lt;/a&gt;.&lt;/p&gt;

&lt;h3&gt;Eclipse Cloud DevTools Contributor Award: Eclipse Theia Blueprint&lt;/h3&gt;

&lt;p&gt;&lt;img alt=&quot;&quot; class=&quot;center-block&quot; height=&quot;75&quot; src=&quot;https://theia-ide.org/theia-logo-blueprint.png&quot; width=&quot;301&quot; /&gt;&lt;/p&gt;

&lt;p&gt;The &lt;a href=&quot;https://blogs.eclipse.org/post/john-kellerman/eclipse-cloud-devtools-contributor-award-eclipse-theia-blueprint&quot;&gt;Eclipse Cloud DevTools Contributor Award for June&lt;/a&gt; goes to all parties that contributed to Eclipse Theia Blueprint: &lt;a href=&quot;https://www.eclipse.org/membership/showMember.php?member_id=823&quot;&gt;Arm&lt;/a&gt;, &lt;a href=&quot;https://www.eclipse.org/membership/showMember.php?member_id=800&quot;&gt;STMicroelectronics&lt;/a&gt;, &lt;a href=&quot;https://www.eclipse.org/membership/showMember.php?member_id=690&quot;&gt;EclipseSource&lt;/a&gt; and &lt;a href=&quot;https://www.eclipse.org/membership/showMember.php?member_id=682&quot;&gt;Ericsson&lt;/a&gt;. Theia Blueprint was released last year and has been actively maintained with a new release every month since then.&lt;/p&gt;

&lt;h3&gt;Eclipse Theia 1.26 Release: News and Noteworthy&lt;/h3&gt;

&lt;p&gt;&lt;img alt=&quot;&quot; class=&quot;center-block&quot; height=&quot;51&quot; src=&quot;https://raw.githubusercontent.com/eclipse-theia/theia/master/logo/theia-logo-gray.svg&quot; width=&quot;317&quot; /&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;https://eclipsesource.com/blogs/author/helming_koegel/&quot;&gt;Jonas, Maximilian &amp;amp; Philip&lt;/a&gt; announced the &lt;a href=&quot;https://eclipsesource.com/blogs/2022/06/10/eclipse-theia-1-26-release-news-and-noteworthy/&quot;&gt;1.26 release of Theia&lt;/a&gt;. Notable improvements include proxy support, simultaneously editing linked values, multi-root workspaces, and navigating editor history.&lt;/p&gt;

&lt;h3&gt;Other New Releases&lt;/h3&gt;

&lt;ul&gt;
	&lt;li&gt;&lt;a href=&quot;https://projects.eclipse.org/projects/ecd.sprotty/releases/0.12.0&quot;&gt;Sprotty 0.12.0&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h3&gt;EclipseCon 2022 Accepted Talks&lt;/h3&gt;

&lt;p&gt;&lt;a href=&quot;https://www.eclipsecon.org/2022&quot;&gt;&lt;img alt=&quot;&quot; class=&quot;center-block&quot; height=&quot;172&quot; src=&quot;https://blogs.eclipse.org/sites/default/files/custom_uploads/Screen%20Shot%202022-05-04%20at%202.47.50%20PM.png&quot; width=&quot;383&quot; /&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;We are back in person in for &lt;a href=&quot;https://www.eclipsecon.org/2022&quot;&gt;EclipseCon 2022&lt;/a&gt; and &lt;a href=&quot;https://www.eclipsecon.org/2022/sessions&quot;&gt;accepted talks&lt;/a&gt; have been announced. Here's a sampling of sessions you may be interested in:&lt;/p&gt;

&lt;ul&gt;
	&lt;li&gt;&lt;a href=&quot;https://www.eclipsecon.org/2022/sessions/modern-language-engineering-langium&quot;&gt;Modern language engineering with Langium&lt;/a&gt;&lt;/li&gt;
	&lt;li&gt;&lt;a href=&quot;https://www.eclipsecon.org/2022/sessions/theia-architecture-overview&quot;&gt;Theia Architecture Overview&lt;/a&gt;&lt;/li&gt;
	&lt;li&gt;&lt;a href=&quot;https://www.eclipsecon.org/2022/sessions/eclipse-jkube-whats-doc&quot;&gt;Eclipse JKube - What's up, Doc?&lt;/a&gt;&lt;/li&gt;
	&lt;li&gt;&lt;a href=&quot;https://www.eclipsecon.org/2022/sessions/sirius-web-101-create-modeler-no-code&quot;&gt;Sirius Web 101 : Create a Modeler With No Code&lt;/a&gt;&lt;/li&gt;
	&lt;li&gt;&lt;a href=&quot;https://www.eclipsecon.org/2022/sessions/introducing-eclipse-cdtcloud-cc-tooling-web&quot;&gt;Introducing Eclipse CDT.cloud - C/C++ tooling in the web&lt;/a&gt;&lt;/li&gt;
	&lt;li&gt;&lt;a href=&quot;https://www.eclipsecon.org/2022/sessions/diagram-editors-glsp-why-flexibility-key&quot;&gt;Diagram Editors with GLSP: Why flexibility is key&lt;/a&gt;&lt;/li&gt;
	&lt;li&gt;&lt;a href=&quot;https://www.eclipsecon.org/2022/sessions/getting-started-theia-nextgen-eclipse-platform&quot;&gt;Getting started with Theia - The nextGen Eclipse Platform&lt;/a&gt;&lt;/li&gt;
	&lt;li&gt;&lt;a href=&quot;https://www.eclipsecon.org/2022/sessions/eclipse-jkube-drone-your-cloud-native-java-cicd&quot;&gt;Eclipse JKube the Drone to your Cloud Native Java CI/CD&lt;/a&gt;&lt;/li&gt;
	&lt;li&gt;&lt;a href=&quot;https://www.eclipsecon.org/2022/sessions/run-your-favorite-ide-kubernetes&quot;&gt;Run your favorite IDE on Kubernetes&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h3&gt;Eclipse Cloud DevTools Projects&lt;/h3&gt;

&lt;p&gt;&lt;img class=&quot;center-block&quot; src=&quot;https://lh4.googleusercontent.com/NF_blJTT1qIp49qCS68YUefG-Q6tjbtdanHV3cngR609-XKN63n6yIYFdcIhrPseyCPqoff4Qyu2Gakb3KQ1UwP9nxwbr4k0HS9DOOnntAAvABwDDU_wKNTr6PTriImESgtrB8J3&quot; style=&quot;height: 117px; width: 371px;&quot; /&gt;&lt;/p&gt;

&lt;p&gt;Explore the &lt;a href=&quot;https://ecdtools.eclipse.org/projects/&quot;&gt;Eclipse Cloud DevTools ecosystem&lt;/a&gt;! Check out our projects page to find out more about open source innovation for cloud IDEs, extension marketplaces, frameworks and more.&lt;/p&gt;

&lt;h3&gt;Getting Listed on the Cloud DevTools Blog&lt;/h3&gt;

&lt;p&gt;If you are working with, or on, anything in the Cloud DevTools space, &lt;a href=&quot;https://blogs.eclipse.org/post/brian-king/getting-listed-cloud-devtools-blog&quot;&gt;learn how to get your writings posted&lt;/a&gt; in our &lt;a href=&quot;https://ecdtools.eclipse.org/resources/blogs/&quot;&gt;blog section&lt;/a&gt;.&lt;/p&gt;
&lt;/div&gt;&lt;/div&gt;&lt;/div&gt;</description>
	<pubDate>Sun, 10 Jul 2022 18:45:28 +0000</pubDate>
</item>
<item>
	<title>Donald Raab: Eclipse Collections 11.1 Released</title>
	<guid isPermaLink="false">https://medium.com/p/acca6905585a</guid>
	<link>https://medium.com/javarevisited/eclipse-collections-11-1-released-acca6905585a?source=rss-df39b86e9f04------2</link>
	<description>&lt;p&gt;We passed 2,000 stars on GitHub! Thank you to all of our supporters!&lt;/p&gt;&lt;figure&gt;&lt;img alt=&quot;&quot; src=&quot;https://cdn-images-1.medium.com/max/1024/1*JwPhzIuyQE8lwILLWhQJXQ.png&quot; /&gt;&lt;figcaption&gt;&lt;a href=&quot;https://github.com/eclipse/eclipse-collections&quot;&gt;https://github.com/eclipse/eclipse-collections&lt;/a&gt;&lt;/figcaption&gt;&lt;/figure&gt;&lt;h3&gt;Eclipse Collections 11.1 is here!&lt;/h3&gt;&lt;figure&gt;&lt;img alt=&quot;&quot; src=&quot;https://cdn-images-1.medium.com/max/1024/1*R5EEIphNy63vY-qrneKJOg.png&quot; /&gt;&lt;figcaption&gt;&lt;a href=&quot;https://www.eclipse.org/collections/&quot;&gt;https://www.eclipse.org/collections/&lt;/a&gt;&lt;/figcaption&gt;&lt;/figure&gt;&lt;p&gt;I’m excited to share that the &lt;a href=&quot;https://github.com/eclipse/eclipse-collections/releases/tag/11.1.0&quot;&gt;Eclipse Collections 11.1 release&lt;/a&gt; is now available in Maven Central. It has been 8 months since we released &lt;a href=&quot;https://donraab.medium.com/eclipse-collections-11-0-released-d14df63f5d1d?source=friends_link&amp;amp;sk=74bad1fcf0f384fba241041c8383502b&quot;&gt;Eclipse Collections 11.0&lt;/a&gt; in November, 2021. Eclipse Collections continues to participate in the &lt;a href=&quot;https://wiki.openjdk.java.net/display/quality/Quality+Outreach&quot;&gt;OpenJDK Quality Outreach Program&lt;/a&gt; and tests against the latest releases of the JDK as they become available. We are currently building and testing actively against JDK 8, 11, 17, and 18.&lt;/p&gt;&lt;blockquote class=&quot;twitter-tweet&quot;&gt;&lt;p&gt; — &lt;a href=&quot;https://twitter.com/sirishapratha/status/1544757079231107072&quot;&gt;@sirishapratha&lt;/a&gt;&lt;/p&gt;&lt;/blockquote&gt;&lt;h3&gt;Thank you to Sirisha Pratha&lt;/h3&gt;&lt;p&gt;The Eclipse Collections 11.1 release would not have been possible without the extensive efforts of Eclipse Collections committer &lt;a href=&quot;https://medium.com/u/8fe7c47c374f&quot;&gt;Sirisha Pratha&lt;/a&gt;. There was a lot of important background work Sirisha completed and discussions she lead with the other Eclipse Collections committers and experts in the Java community like &lt;a href=&quot;https://medium.com/u/62d4a2cf0eec&quot;&gt;Nicolai Parlog&lt;/a&gt;. Sirisha did a lot of research into the benefits of migrating to Java 11 and how we might be able to leverage JPMS for Eclipse Collections 12.0 and beyond. There was a lot of work completed in Eclipse Collections 11.1 that will help enable the evolution of Eclipse Collections in a post Java 8 world.&lt;/p&gt;&lt;p&gt;Thank you, Sirisha, for all of your hard work planning the future of Eclipse Collections and for all of the effort delivering this release!&lt;/p&gt;&lt;h3&gt;Thank you to the community&lt;/h3&gt;&lt;p&gt;The 11.1 release has a lot of new features submitted by our outstanding community of contributors. Thank you so much to all of the contributors who donated their valuable time to making Eclipse Collections more feature rich and even higher quality. Your efforts are very much appreciated.&lt;/p&gt;&lt;h3&gt;New Features with Contributor Blogs&lt;/h3&gt;&lt;p&gt;I continue to encourage Eclipse Collections contributors to write blogs about the features they contribute to the project. I do my best to set a good example and try to regularly blog about any features I added to Eclipse Collections, or new katas I add to the Eclipse Collections Kata repository.&lt;/p&gt;&lt;p&gt;Following are a few of the blogs written by contributors about features they have contributed to the Eclipse Collections 11.1 release.&lt;/p&gt;&lt;ul&gt;&lt;li&gt;Added injectIntoKeyValue to MapIterable.&lt;br /&gt;Added injectIntoKeyValue to objectPrimitiveMap.&lt;br /&gt;Added injectIntoKeyValue to primitiveObjectMap.&lt;br /&gt;Added injectIntoKeyValue to primitivePrimitiveMap.&lt;/li&gt;&lt;/ul&gt;&lt;p&gt;&lt;a href=&quot;https://emilie-robichaud.medium.com/injectintokeyvalue-in-eclipse-collections-8b29c9a4830d&quot;&gt;InjectIntoKeyValue in Eclipse Collections&lt;/a&gt;&lt;/p&gt;&lt;p&gt;&lt;em&gt;Blog by &lt;/em&gt;&lt;a href=&quot;https://medium.com/u/b220de0951d0&quot;&gt;&lt;em&gt;Emilie Robichaud&lt;/em&gt;&lt;/a&gt;&lt;/p&gt;&lt;ul&gt;&lt;li&gt;Added factory for ObjectPrimitiveHashMapWithHashingStrategy.&lt;/li&gt;&lt;/ul&gt;&lt;p&gt;&lt;a href=&quot;https://medium.com/@aqsamalik70/factories-for-a-primitive-map-with-hashing-strategies-in-eclipse-collections-f4613ef2446c&quot;&gt;Factories for a Primitive Map with Hashing Strategies in Eclipse Collections&lt;/a&gt;&lt;/p&gt;&lt;p&gt;&lt;em&gt;Blog by &lt;/em&gt;&lt;a href=&quot;https://medium.com/u/aa39c8c851a0&quot;&gt;&lt;em&gt;Aqsa Malik&lt;/em&gt;&lt;/a&gt;&lt;/p&gt;&lt;ul&gt;&lt;li&gt;Added getAndPut to mutableObjectPrimitiveMap to retrieve the value associated with the key if one exists.&lt;/li&gt;&lt;/ul&gt;&lt;p&gt;&lt;a href=&quot;https://medium.com/@goldbal/ec-by-examples-getting-and-putting-values-in-the-primitive-map-api-d18cabbc67d3&quot;&gt;EC by Examples: Getting and Putting values in the Primitive Map API.&lt;/a&gt;&lt;/p&gt;&lt;p&gt;&lt;em&gt;Blog by &lt;/em&gt;&lt;a href=&quot;https://medium.com/u/da10a7c5350&quot;&gt;&lt;em&gt;Alex Goldberg&lt;/em&gt;&lt;/a&gt;&lt;/p&gt;&lt;h3&gt;Additional Blogs and Videos&lt;/h3&gt;&lt;p&gt;There were some additional Eclipse Collections blogs written since the 11.0 release.&lt;/p&gt;&lt;h4&gt;Eclipse Collections JSON Serialization Support&lt;/h4&gt;&lt;p&gt;If you’d like to learn about Jackson support for Eclipse Collections, check out the following blog and kata from &lt;a href=&quot;https://medium.com/u/da10a7c5350&quot;&gt;Alex Goldberg&lt;/a&gt;.&lt;/p&gt;&lt;p&gt;&lt;a href=&quot;https://medium.com/@goldbal/eclipse-collections-json-serialization-support-cd3c791d2046&quot;&gt;Eclipse Collections JSON Serialization Support&lt;/a&gt;&lt;/p&gt;&lt;h4&gt;Haiku for Java using Text Blocks&lt;/h4&gt;&lt;p&gt;In the following blog I show how Eclipse Collections solutions compares to Java Streams solutions using Java Text Blocks.&lt;/p&gt;&lt;p&gt;&lt;a href=&quot;https://medium.com/javarevisited/haiku-for-java-using-text-blocks-6b7862ccd067&quot;&gt;Haiku for Java using Text Blocks&lt;/a&gt;&lt;/p&gt;&lt;p&gt;There is also JEP Café episode number 9 that &lt;a href=&quot;https://medium.com/u/18673d5e2e01&quot;&gt;José Paumard&lt;/a&gt; recorded for the Java YouTube channel that compares solutions based on this blog and demonstrates nice ways to leverage Java Records.&lt;/p&gt;&lt;a href=&quot;https://medium.com/media/f0e5140c4e9161aeb189a84aee205ea5/href&quot;&gt;https://medium.com/media/f0e5140c4e9161aeb189a84aee205ea5/href&lt;/a&gt;&lt;h4&gt;A Wordle JLDD Kata Challenge&lt;/h4&gt;&lt;p&gt;Sometimes a little competition brings out the best opportunities to learn different ways of solving problems. JLDD is an acronym that stands for Jet Lag Driven Development. I describe JLDD in the following blog and responded to a JLDD challenge from &lt;a href=&quot;https://medium.com/u/18673d5e2e01&quot;&gt;José Paumard&lt;/a&gt; using Eclipse Collections to solve a Wordle Kata.&lt;/p&gt;&lt;p&gt;&lt;a href=&quot;https://medium.com/oracledevs/a-wordle-jldd-kata-challenge-b6fb1c89d8eb&quot;&gt;A Wordle JLDD Kata Challenge&lt;/a&gt;&lt;/p&gt;&lt;p&gt;José recorded another JEP Café episode for the Wordle JLDD Kata Challenge. It is a lot of fun to watch him live code his solutions while drinking coffee and explain new Java features like Records and Pattern Matching.&lt;/p&gt;&lt;a href=&quot;https://medium.com/media/ad36ec4c46cf8e872948e98a4fc646f1/href&quot;&gt;https://medium.com/media/ad36ec4c46cf8e872948e98a4fc646f1/href&lt;/a&gt;&lt;h3&gt;And there’s more!&lt;/h3&gt;&lt;p&gt;Please refer to the &lt;a href=&quot;https://github.com/eclipse/eclipse-collections/releases/tag/11.1.0&quot;&gt;11.1 release notes&lt;/a&gt; for a more comprehensive set of changes made available in the 11.1 release. In there you will find details of optimizations, tech debt reduction, removed functionality, and build changes.&lt;/p&gt;&lt;h3&gt;Thank you&lt;/h3&gt;&lt;p&gt;From all the contributors and committers to the entire Eclipse Collections community… thank you for using Eclipse Collections! We hope you enjoy all of the new features and improvements in the 11.1 release!&lt;/p&gt;&lt;h3&gt;Looking Forward to the Future&lt;/h3&gt;&lt;p&gt;Eclipse Collections 12.0 will be a major change for the framework. We will be baselining development for the library on Java 11 for the 12.0 release. The 11.1 release will be the last release to provide support for Java 8 through Java 10. The 11.x releases are extremely feature rich so applications still running on Java 8 will be able to use these and older versions for a long time.&lt;/p&gt;&lt;p&gt;&lt;em&gt;I am a Project Lead and Committer for the &lt;/em&gt;&lt;a href=&quot;https://github.com/eclipse/eclipse-collections&quot;&gt;&lt;em&gt;Eclipse Collections&lt;/em&gt;&lt;/a&gt;&lt;em&gt; OSS project at the &lt;/em&gt;&lt;a href=&quot;https://projects.eclipse.org/projects/technology.collections&quot;&gt;&lt;em&gt;Eclipse Foundation&lt;/em&gt;&lt;/a&gt;&lt;em&gt;. &lt;/em&gt;&lt;a href=&quot;https://github.com/eclipse/eclipse-collections&quot;&gt;&lt;em&gt;Eclipse Collections&lt;/em&gt;&lt;/a&gt;&lt;em&gt; is open for &lt;/em&gt;&lt;a href=&quot;https://github.com/eclipse/eclipse-collections/blob/master/CONTRIBUTING.md&quot;&gt;&lt;em&gt;contributions&lt;/em&gt;&lt;/a&gt;&lt;em&gt;. If you like the library, you can let us know by starring it on GitHub.&lt;/em&gt;&lt;/p&gt;&lt;p&gt;Other &lt;strong&gt;Java Articles&lt;/strong&gt; you may like&lt;/p&gt;&lt;ul&gt;&lt;li&gt;&lt;a href=&quot;https://medium.com/javarevisited/the-java-programmer-roadmap-f9db163ef2c2&quot;&gt;The 2022 Java Programmer RoadMap&lt;/a&gt;&lt;/li&gt;&lt;li&gt;&lt;a href=&quot;https://medium.com/javarevisited/top-22-skills-professional-java-programmers-can-learn-in-2022-to-upgrade-themselves-bc3da73d7491&quot;&gt;How to become a Java Programmer in 2022? All Tools, Skills, Frameworks, and Libraries You Need&lt;/a&gt;&lt;/li&gt;&lt;li&gt;&lt;a href=&quot;https://medium.com/javarevisited/20-essential-java-libraries-and-apis-every-programmer-should-learn-5ccd41812fc7&quot;&gt;Top 22 Java Libraries and APIs Every Programmer Should Learn in 2022&lt;/a&gt;&lt;/li&gt;&lt;/ul&gt;&lt;img alt=&quot;&quot; height=&quot;1&quot; src=&quot;https://medium.com/_/stat?event=post.clientViewed&amp;amp;referrerSource=full_rss&amp;amp;postId=acca6905585a&quot; width=&quot;1&quot; /&gt;&lt;hr /&gt;&lt;p&gt;&lt;a href=&quot;https://medium.com/javarevisited/eclipse-collections-11-1-released-acca6905585a&quot;&gt;Eclipse Collections 11.1 Released&lt;/a&gt; was originally published in &lt;a href=&quot;https://medium.com/javarevisited&quot;&gt;Javarevisited&lt;/a&gt; on Medium, where people are continuing the conversation by highlighting and responding to this story.&lt;/p&gt;</description>
	<pubDate>Sat, 09 Jul 2022 14:29:26 +0000</pubDate>
</item>
<item>
	<title>Tanja Obradovic: Jakarta EE 10: Getting So Close, But Not There Yet!</title>
	<guid isPermaLink="false">7194 at https://blogs.eclipse.org</guid>
	<link>https://blogs.eclipse.org/post/tanja-obradovic/jakarta-ee-10-getting-so-close-not-there-yet</link>
	<description>&lt;div class=&quot;field field-name-body field-type-text-with-summary field-label-hidden&quot;&gt;&lt;div class=&quot;field-items&quot;&gt;&lt;div class=&quot;field-item even&quot;&gt;&lt;p&gt;&lt;span style=&quot;font-size: 11pt; font-variant: normal; white-space: pre-wrap;&quot;&gt;&lt;span style=&quot;font-family: Arial;&quot;&gt;&lt;span style=&quot;color: #000000;&quot;&gt;&lt;span style=&quot;font-weight: 400;&quot;&gt;&lt;span style=&quot;font-style: normal;&quot;&gt;&lt;span style=&quot;text-decoration: none;&quot;&gt;While we are still looking into initiating ballots for the Jakarta EE Platform and the Profiles any day now, I wanted to let you know about the hold up!&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/p&gt;

&lt;p style=&quot;line-height: 1.38;&quot;&gt;&lt;span style=&quot;font-size: 11pt; font-variant: normal; white-space: pre-wrap;&quot;&gt;&lt;span style=&quot;font-family: Arial;&quot;&gt;&lt;span style=&quot;color: #000000;&quot;&gt;&lt;span style=&quot;font-weight: 400;&quot;&gt;&lt;span style=&quot;font-style: normal;&quot;&gt;&lt;span style=&quot;text-decoration: none;&quot;&gt;The issues we are facing are related to passing the TCK for the Compatible Implementation.&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt; &lt;span style=&quot;font-size: 11pt; font-variant: normal; white-space: pre-wrap;&quot;&gt;&lt;span style=&quot;font-family: Arial;&quot;&gt;&lt;span style=&quot;color: #000000;&quot;&gt;&lt;span style=&quot;font-weight: 400;&quot;&gt;&lt;span style=&quot;font-style: normal;&quot;&gt;&lt;span style=&quot;text-decoration: none;&quot;&gt;Here is the current status on the release!&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/p&gt;

&lt;p style=&quot;line-height: 1.38;&quot;&gt;&lt;span style=&quot;font-size: 11pt; font-variant: normal; white-space: pre-wrap;&quot;&gt;&lt;span style=&quot;font-family: Arial;&quot;&gt;&lt;span style=&quot;color: #000000;&quot;&gt;&lt;span style=&quot;font-weight: 400;&quot;&gt;&lt;span style=&quot;font-style: normal;&quot;&gt;&lt;span style=&quot;text-decoration: underline;&quot;&gt;&lt;span&gt;&lt;span&gt;Jakarta EE 10 Status &lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/p&gt;

&lt;ul&gt;
	&lt;li&gt;&lt;span style=&quot;font-size: 11pt; font-variant: normal; white-space: pre-wrap;&quot;&gt;&lt;span style=&quot;font-family: Arial;&quot;&gt;&lt;span style=&quot;color: #000000;&quot;&gt;&lt;span style=&quot;font-weight: 400;&quot;&gt;&lt;span style=&quot;font-style: normal;&quot;&gt;&lt;span style=&quot;text-decoration: none;&quot;&gt;CDI Language Model TCK&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;

	&lt;ul&gt;
		&lt;li&gt;&lt;span style=&quot;font-size: 11pt; font-variant: normal; white-space: pre-wrap;&quot;&gt;&lt;span style=&quot;font-family: Arial;&quot;&gt;&lt;span style=&quot;color: #000000;&quot;&gt;&lt;span style=&quot;font-weight: 400;&quot;&gt;&lt;span style=&quot;font-style: normal;&quot;&gt;&lt;span style=&quot;text-decoration: none;&quot;&gt;GlassFish hit a problem with the new tests added in the service release&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/li&gt;
		&lt;li&gt;&lt;span style=&quot;font-size: 11pt; font-variant: normal; white-space: pre-wrap;&quot;&gt;&lt;span style=&quot;font-family: Arial;&quot;&gt;&lt;span style=&quot;color: #000000;&quot;&gt;&lt;span style=&quot;font-weight: 400;&quot;&gt;&lt;span style=&quot;font-style: normal;&quot;&gt;&lt;span style=&quot;text-decoration: none;&quot;&gt;Need CDI team to respond&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/li&gt;
		&lt;li&gt;&lt;span style=&quot;font-size: 11pt; font-variant: normal; white-space: pre-wrap;&quot;&gt;&lt;span style=&quot;font-family: Arial;&quot;&gt;&lt;span style=&quot;color: #000000;&quot;&gt;&lt;span style=&quot;font-weight: 400;&quot;&gt;&lt;span style=&quot;font-style: normal;&quot;&gt;&lt;span style=&quot;text-decoration: none;&quot;&gt;Tracking issue is &lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;a href=&quot;https://github.com/jakartaee/cdi-tck/issues/392&quot; style=&quot;text-decoration: none;&quot;&gt;&lt;span style=&quot;font-size: 11pt; font-variant: normal; white-space: pre-wrap;&quot;&gt;&lt;span style=&quot;font-family: Arial;&quot;&gt;&lt;span style=&quot;color: #1155cc;&quot;&gt;&lt;span style=&quot;font-weight: 400;&quot;&gt;&lt;span style=&quot;font-style: normal;&quot;&gt;&lt;span style=&quot;text-decoration: underline;&quot;&gt;&lt;span&gt;&lt;span&gt;https://github.com/jakartaee/cdi-tck/issues/392&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/a&gt;&lt;/li&gt;
	&lt;/ul&gt;
	&lt;/li&gt;
	&lt;li&gt;&lt;span style=&quot;font-size: 11pt; font-variant: normal; white-space: pre-wrap;&quot;&gt;&lt;span style=&quot;font-family: Arial;&quot;&gt;&lt;span style=&quot;color: #000000;&quot;&gt;&lt;span style=&quot;font-weight: 400;&quot;&gt;&lt;span style=&quot;font-style: normal;&quot;&gt;&lt;span style=&quot;text-decoration: none;&quot;&gt;Platform&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;
	&lt;ul&gt;
		&lt;li&gt;&lt;span style=&quot;font-size: 11pt; font-variant: normal; white-space: pre-wrap;&quot;&gt;&lt;span style=&quot;font-family: Arial;&quot;&gt;&lt;span style=&quot;color: #000000;&quot;&gt;&lt;span style=&quot;font-weight: 400;&quot;&gt;&lt;span style=&quot;font-style: normal;&quot;&gt;&lt;span style=&quot;text-decoration: none;&quot;&gt;TCKs passed with GlassFish so far&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/li&gt;
		&lt;li&gt;&lt;span style=&quot;font-size: 11pt; font-variant: normal; white-space: pre-wrap;&quot;&gt;&lt;span style=&quot;font-family: Arial;&quot;&gt;&lt;span style=&quot;color: #000000;&quot;&gt;&lt;span style=&quot;font-weight: 400;&quot;&gt;&lt;span style=&quot;font-style: normal;&quot;&gt;&lt;span style=&quot;text-decoration: none;&quot;&gt;Concurrency TCK: with the &lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;a href=&quot;https://github.com/jakartaee/concurrency/pull/245&quot; style=&quot;text-decoration: none;&quot;&gt;&lt;span style=&quot;font-size: 11pt; font-variant: normal; white-space: pre-wrap;&quot;&gt;&lt;span style=&quot;font-family: Arial;&quot;&gt;&lt;span style=&quot;color: #1155cc;&quot;&gt;&lt;span style=&quot;font-weight: 400;&quot;&gt;&lt;span style=&quot;font-style: normal;&quot;&gt;&lt;span style=&quot;text-decoration: underline;&quot;&gt;&lt;span&gt;&lt;span&gt;new PR&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/a&gt;&lt;span style=&quot;font-size: 11pt; font-variant: normal; white-space: pre-wrap;&quot;&gt;&lt;span style=&quot;font-family: Arial;&quot;&gt;&lt;span style=&quot;color: #000000;&quot;&gt;&lt;span style=&quot;font-weight: 400;&quot;&gt;&lt;span style=&quot;font-style: normal;&quot;&gt;&lt;span style=&quot;text-decoration: none;&quot;&gt;, GlassFish will get 9 test failures&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/li&gt;
	&lt;/ul&gt;
	&lt;/li&gt;
	&lt;li&gt;&lt;span style=&quot;font-size: 11pt; font-variant: normal; white-space: pre-wrap;&quot;&gt;&lt;span style=&quot;font-family: Arial;&quot;&gt;&lt;span style=&quot;color: #000000;&quot;&gt;&lt;span style=&quot;font-weight: 400;&quot;&gt;&lt;span style=&quot;font-style: normal;&quot;&gt;&lt;span style=&quot;text-decoration: none;&quot;&gt;Web Profile&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;
	&lt;ul&gt;
		&lt;li&gt;&lt;span style=&quot;font-size: 11pt; font-variant: normal; white-space: pre-wrap;&quot;&gt;&lt;span style=&quot;font-family: Arial;&quot;&gt;&lt;span style=&quot;color: #000000;&quot;&gt;&lt;span style=&quot;font-weight: 400;&quot;&gt;&lt;span style=&quot;font-style: normal;&quot;&gt;&lt;span style=&quot;text-decoration: none;&quot;&gt;Failures with remote EJB, ear package &lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;
		&lt;ul&gt;
			&lt;li&gt;&lt;span style=&quot;font-size: 11pt; font-variant: normal; white-space: pre-wrap;&quot;&gt;&lt;span style=&quot;font-family: Arial;&quot;&gt;&lt;span style=&quot;color: #000000;&quot;&gt;&lt;span style=&quot;font-weight: 400;&quot;&gt;&lt;span style=&quot;font-style: normal;&quot;&gt;&lt;span style=&quot;text-decoration: none;&quot;&gt;Issue: &lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;a href=&quot;https://github.com/jakartaee/concurrency/issues/244&quot; style=&quot;text-decoration: none;&quot;&gt;&lt;span style=&quot;font-size: 11pt; font-variant: normal; white-space: pre-wrap;&quot;&gt;&lt;span style=&quot;font-family: Arial;&quot;&gt;&lt;span style=&quot;color: #1155cc;&quot;&gt;&lt;span style=&quot;font-weight: 400;&quot;&gt;&lt;span style=&quot;font-style: normal;&quot;&gt;&lt;span style=&quot;text-decoration: underline;&quot;&gt;&lt;span&gt;&lt;span&gt;https://github.com/jakartaee/concurrency/issues/244&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/a&gt;
			&lt;ul&gt;
				&lt;li&gt;&lt;span style=&quot;font-size: 11pt; font-variant: normal; white-space: pre-wrap;&quot;&gt;&lt;span style=&quot;font-family: Arial;&quot;&gt;&lt;span style=&quot;color: #000000;&quot;&gt;&lt;span style=&quot;font-weight: 400;&quot;&gt;&lt;span style=&quot;font-style: normal;&quot;&gt;&lt;span style=&quot;text-decoration: none;&quot;&gt;Change is not complete. The &lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;a href=&quot;https://github.com/jakartaee/concurrency/pull/245&quot; style=&quot;text-decoration: none;&quot;&gt;&lt;span style=&quot;font-size: 11pt; font-variant: normal; white-space: pre-wrap;&quot;&gt;&lt;span style=&quot;font-family: Arial;&quot;&gt;&lt;span style=&quot;color: #1155cc;&quot;&gt;&lt;span style=&quot;font-weight: 400;&quot;&gt;&lt;span style=&quot;font-style: normal;&quot;&gt;&lt;span style=&quot;text-decoration: underline;&quot;&gt;&lt;span&gt;&lt;span&gt;PR&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/a&gt;&lt;span style=&quot;font-size: 11pt; font-variant: normal; white-space: pre-wrap;&quot;&gt;&lt;span style=&quot;font-family: Arial;&quot;&gt;&lt;span style=&quot;color: #000000;&quot;&gt;&lt;span style=&quot;font-weight: 400;&quot;&gt;&lt;span style=&quot;font-style: normal;&quot;&gt;&lt;span style=&quot;text-decoration: none;&quot;&gt; will cause platform regression but the change is not complete yet.&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/li&gt;
				&lt;li&gt;&lt;span style=&quot;font-size: 11pt; font-variant: normal; white-space: pre-wrap;&quot;&gt;&lt;span style=&quot;font-family: Arial;&quot;&gt;&lt;span style=&quot;color: #000000;&quot;&gt;&lt;span style=&quot;font-weight: 400;&quot;&gt;&lt;span style=&quot;font-style: normal;&quot;&gt;&lt;span style=&quot;text-decoration: none;&quot;&gt;To be discussed on July 6th during the Platform TCK call&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/li&gt;
			&lt;/ul&gt;
			&lt;/li&gt;
		&lt;/ul&gt;
		&lt;/li&gt;
	&lt;/ul&gt;
	&lt;/li&gt;
	&lt;li&gt;&lt;span style=&quot;font-size: 11pt; font-variant: normal; white-space: pre-wrap;&quot;&gt;&lt;span style=&quot;font-family: Arial;&quot;&gt;&lt;span style=&quot;color: #000000;&quot;&gt;&lt;span style=&quot;font-weight: 400;&quot;&gt;&lt;span style=&quot;font-style: normal;&quot;&gt;&lt;span style=&quot;text-decoration: none;&quot;&gt;Core Profile&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;
	&lt;ul&gt;
		&lt;li&gt;&lt;span style=&quot;font-size: 11pt; font-variant: normal; white-space: pre-wrap;&quot;&gt;&lt;span style=&quot;font-family: Arial;&quot;&gt;&lt;span style=&quot;color: #000000;&quot;&gt;&lt;span style=&quot;font-weight: 400;&quot;&gt;&lt;span style=&quot;font-style: normal;&quot;&gt;&lt;span style=&quot;text-decoration: none;&quot;&gt;XML Binding use in Rest TCK &lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;a href=&quot;https://github.com/jakartaee/rest/issues/1109&quot; style=&quot;text-decoration: none;&quot;&gt;&lt;span style=&quot;font-size: 11pt; font-variant: normal; white-space: pre-wrap;&quot;&gt;&lt;span style=&quot;font-family: Arial;&quot;&gt;&lt;span style=&quot;color: #1155cc;&quot;&gt;&lt;span style=&quot;font-weight: 400;&quot;&gt;&lt;span style=&quot;font-style: normal;&quot;&gt;&lt;span style=&quot;text-decoration: underline;&quot;&gt;&lt;span&gt;&lt;span&gt;https://github.com/jakartaee/rest/issues/1109&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/a&gt;&lt;span style=&quot;font-size: 11pt; font-variant: normal; white-space: pre-wrap;&quot;&gt;&lt;span style=&quot;font-family: Arial;&quot;&gt;&lt;span style=&quot;color: #000000;&quot;&gt;&lt;span style=&quot;font-weight: 400;&quot;&gt;&lt;span style=&quot;font-style: normal;&quot;&gt;&lt;span style=&quot;text-decoration: none;&quot;&gt; (TCK challenge that applies to Web Profile)&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/li&gt;
	&lt;/ul&gt;
	&lt;/li&gt;
	&lt;li&gt;&lt;span style=&quot;font-size: 11pt; font-variant: normal; white-space: pre-wrap;&quot;&gt;&lt;span style=&quot;font-family: Arial;&quot;&gt;&lt;span style=&quot;color: #000000;&quot;&gt;&lt;span style=&quot;font-weight: 400;&quot;&gt;&lt;span style=&quot;font-style: normal;&quot;&gt;&lt;span style=&quot;text-decoration: none;&quot;&gt;XML Binding (TCK) is optional for Full Platform + Web Profile implementations as per &lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;a href=&quot;https://github.com/eclipse-ee4j/jakartaee-tck/blob/master/user_guides/jakartaee/src/main/jbake/content/intro.adoc&quot; style=&quot;text-decoration: none;&quot;&gt;&lt;span style=&quot;font-size: 11pt; font-variant: normal; white-space: pre-wrap;&quot;&gt;&lt;span style=&quot;font-family: Arial;&quot;&gt;&lt;span style=&quot;color: #1155cc;&quot;&gt;&lt;span style=&quot;font-weight: 400;&quot;&gt;&lt;span style=&quot;font-style: normal;&quot;&gt;&lt;span style=&quot;text-decoration: underline;&quot;&gt;&lt;span&gt;&lt;span&gt;https://github.com/eclipse-ee4j/jakartaee-tck/blob/master/user_guides/jakartaee/src/main/jbake/content/intro.adoc&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/a&gt;&lt;span style=&quot;font-size: 11pt; font-variant: normal; white-space: pre-wrap;&quot;&gt;&lt;span style=&quot;font-family: Arial;&quot;&gt;&lt;span style=&quot;color: #000000;&quot;&gt;&lt;span style=&quot;font-weight: 400;&quot;&gt;&lt;span style=&quot;font-style: normal;&quot;&gt;&lt;span style=&quot;text-decoration: none;&quot;&gt; (search for `Jakarta XML Binding`).&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p style=&quot;line-height: 1.38;&quot;&gt;&lt;span style=&quot;font-size: 11pt; font-variant: normal; white-space: pre-wrap;&quot;&gt;&lt;span style=&quot;font-family: Arial;&quot;&gt;&lt;span style=&quot;color: #000000;&quot;&gt;&lt;span style=&quot;font-weight: 400;&quot;&gt;&lt;span style=&quot;font-style: normal;&quot;&gt;&lt;span style=&quot;text-decoration: none;&quot;&gt; If you are interested in finding out more, please consider attending the Jakarta EE Platform Project calls (every Tuesday @11 am EST) published on the &lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;a href=&quot;https://calendar.google.com/calendar/embed?src=eclipse-foundation.org_e9ki8t2gc75sh07qdh95c8ofvc%40group.calendar.google.com&amp;amp;ctz=America%2FToronto&quot; style=&quot;text-decoration: none;&quot;&gt;&lt;span style=&quot;font-size: 11pt; font-variant: normal; white-space: pre-wrap;&quot;&gt;&lt;span style=&quot;font-family: Arial;&quot;&gt;&lt;span style=&quot;color: #1155cc;&quot;&gt;&lt;span style=&quot;font-weight: 400;&quot;&gt;&lt;span style=&quot;font-style: normal;&quot;&gt;&lt;span style=&quot;text-decoration: underline;&quot;&gt;&lt;span&gt;&lt;span&gt;Jakarta EE Specification Calendar&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/a&gt;&lt;span style=&quot;font-size: 11pt; font-variant: normal; white-space: pre-wrap;&quot;&gt;&lt;span style=&quot;font-family: Arial;&quot;&gt;&lt;span style=&quot;color: #000000;&quot;&gt;&lt;span style=&quot;font-weight: 400;&quot;&gt;&lt;span style=&quot;font-style: normal;&quot;&gt;&lt;span style=&quot;text-decoration: none;&quot;&gt;, or follow the &lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;a href=&quot;https://eclipse-ee4j.github.io/jakartaee-platform/minutes/minutes.html&quot; style=&quot;text-decoration: none;&quot;&gt;&lt;span style=&quot;font-size: 11pt; font-variant: normal; white-space: pre-wrap;&quot;&gt;&lt;span style=&quot;font-family: Arial;&quot;&gt;&lt;span style=&quot;color: #1155cc;&quot;&gt;&lt;span style=&quot;font-weight: 400;&quot;&gt;&lt;span style=&quot;font-style: normal;&quot;&gt;&lt;span style=&quot;text-decoration: underline;&quot;&gt;&lt;span&gt;&lt;span&gt;meeting minutes&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/a&gt;&lt;span style=&quot;font-size: 11pt; font-variant: normal; white-space: pre-wrap;&quot;&gt;&lt;span style=&quot;font-family: Arial;&quot;&gt;&lt;span style=&quot;color: #000000;&quot;&gt;&lt;span style=&quot;font-weight: 400;&quot;&gt;&lt;span style=&quot;font-style: normal;&quot;&gt;&lt;span style=&quot;text-decoration: none;&quot;&gt;!&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/p&gt;

&lt;p style=&quot;line-height: 1.38;&quot;&gt;&lt;span style=&quot;font-size: 11pt; font-variant: normal; white-space: pre-wrap;&quot;&gt;&lt;span style=&quot;font-family: Arial;&quot;&gt;&lt;span style=&quot;color: #000000;&quot;&gt;&lt;span style=&quot;font-weight: 400;&quot;&gt;&lt;span style=&quot;font-style: normal;&quot;&gt;&lt;span style=&quot;text-decoration: none;&quot;&gt;In any case, we are only a couple of weeks away! Ultimately all Release Review PRs are ready.&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/p&gt;

&lt;ul&gt;
	&lt;li&gt;&lt;span style=&quot;font-size: 11pt; font-variant: normal; white-space: pre-wrap;&quot;&gt;&lt;span style=&quot;font-family: Arial;&quot;&gt;&lt;span style=&quot;color: #000000;&quot;&gt;&lt;span style=&quot;font-weight: 400;&quot;&gt;&lt;span style=&quot;font-style: normal;&quot;&gt;&lt;span style=&quot;text-decoration: none;&quot;&gt;Jakarta EE Platform Specification 10 - &lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;a href=&quot;https://github.com/jakartaee/specifications/pull/498&quot; style=&quot;text-decoration: none;&quot;&gt;&lt;span style=&quot;font-size: 11pt; font-variant: normal; white-space: pre-wrap;&quot;&gt;&lt;span style=&quot;font-family: Arial;&quot;&gt;&lt;span style=&quot;color: #1155cc;&quot;&gt;&lt;span style=&quot;font-weight: 400;&quot;&gt;&lt;span style=&quot;font-style: normal;&quot;&gt;&lt;span style=&quot;text-decoration: underline;&quot;&gt;&lt;span&gt;&lt;span&gt;https://github.com/jakartaee/specifications/pull/498&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/a&gt;&lt;span style=&quot;font-size: 11pt; font-variant: normal; white-space: pre-wrap;&quot;&gt;&lt;span style=&quot;font-family: Arial;&quot;&gt;&lt;span style=&quot;color: #000000;&quot;&gt;&lt;span style=&quot;font-weight: 400;&quot;&gt;&lt;span style=&quot;font-style: normal;&quot;&gt;&lt;span style=&quot;text-decoration: none;&quot;&gt; &lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/li&gt;
	&lt;li&gt;&lt;span style=&quot;font-size: 11pt; font-variant: normal; white-space: pre-wrap;&quot;&gt;&lt;span style=&quot;font-family: Arial;&quot;&gt;&lt;span style=&quot;color: #000000;&quot;&gt;&lt;span style=&quot;font-weight: 400;&quot;&gt;&lt;span style=&quot;font-style: normal;&quot;&gt;&lt;span style=&quot;text-decoration: none;&quot;&gt;Jakarta EE Web Profile 10 - &lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;a href=&quot;https://github.com/jakartaee/specifications/pull/497&quot; style=&quot;text-decoration: none;&quot;&gt;&lt;span style=&quot;font-size: 11pt; font-variant: normal; white-space: pre-wrap;&quot;&gt;&lt;span style=&quot;font-family: Arial;&quot;&gt;&lt;span style=&quot;color: #1155cc;&quot;&gt;&lt;span style=&quot;font-weight: 400;&quot;&gt;&lt;span style=&quot;font-style: normal;&quot;&gt;&lt;span style=&quot;text-decoration: underline;&quot;&gt;&lt;span&gt;&lt;span&gt;https://github.com/jakartaee/specifications/pull/497&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/a&gt;&lt;span style=&quot;font-size: 11pt; font-variant: normal; white-space: pre-wrap;&quot;&gt;&lt;span style=&quot;font-family: Arial;&quot;&gt;&lt;span style=&quot;color: #000000;&quot;&gt;&lt;span style=&quot;font-weight: 400;&quot;&gt;&lt;span style=&quot;font-style: normal;&quot;&gt;&lt;span style=&quot;text-decoration: none;&quot;&gt; &lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/li&gt;
	&lt;li&gt;&lt;span style=&quot;font-size: 11pt; font-variant: normal; white-space: pre-wrap;&quot;&gt;&lt;span style=&quot;font-family: Arial;&quot;&gt;&lt;span style=&quot;color: #000000;&quot;&gt;&lt;span style=&quot;font-weight: 400;&quot;&gt;&lt;span style=&quot;font-style: normal;&quot;&gt;&lt;span style=&quot;text-decoration: none;&quot;&gt;Jakarta EE Core Profile 10 - &lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;a href=&quot;https://github.com/jakartaee/specifications/pull/495&quot; style=&quot;text-decoration: none;&quot;&gt;&lt;span style=&quot;font-size: 11pt; font-variant: normal; white-space: pre-wrap;&quot;&gt;&lt;span style=&quot;font-family: Arial;&quot;&gt;&lt;span style=&quot;color: #1155cc;&quot;&gt;&lt;span style=&quot;font-weight: 400;&quot;&gt;&lt;span style=&quot;font-style: normal;&quot;&gt;&lt;span style=&quot;text-decoration: underline;&quot;&gt;&lt;span&gt;&lt;span&gt;https://github.com/jakartaee/specifications/pull/495&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/a&gt;&lt;span style=&quot;font-size: 11pt; font-variant: normal; white-space: pre-wrap;&quot;&gt;&lt;span style=&quot;font-family: Arial;&quot;&gt;&lt;span style=&quot;color: #000000;&quot;&gt;&lt;span style=&quot;font-weight: 400;&quot;&gt;&lt;span style=&quot;font-style: normal;&quot;&gt;&lt;span style=&quot;text-decoration: none;&quot;&gt; &lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt; &lt;/p&gt;
&lt;/div&gt;&lt;/div&gt;&lt;/div&gt;</description>
	<pubDate>Wed, 06 Jul 2022 19:16:42 +0000</pubDate>
</item>
<item>
	<title>Eclipse Announcements: Momentum Building for Software Defined Vehicle Working Group</title>
	<guid isPermaLink="true">https://newsroom.eclipse.org/news/announcements/momentum-building-software-defined-vehicle-working-group</guid>
	<link>https://newsroom.eclipse.org/news/announcements/momentum-building-software-defined-vehicle-working-group</link>
	<description>Michael Plagge discusses our code-first approach to automotive software development and how it's brought in several new members and seven new projects under the Software Defined Vehicle (SDV) Working Group.</description>
	<pubDate>Wed, 06 Jul 2022 12:48:05 +0000</pubDate>
</item>
<item>
	<title>JBoss Tools Team: RHAMT Eclipse Plugin 4.0.0.Final has been released!</title>
	<guid isPermaLink="true">https://tools.jboss.org/blog/windup_4.0.0.ga_release.html</guid>
	<link>https://tools.jboss.org/blog/windup_4.0.0.ga_release.html</link>
	<description>&lt;div&gt;&lt;div id=&quot;preamble&quot;&gt;
      &lt;div class=&quot;sectionbody&quot;&gt;
      &lt;div class=&quot;paragraph&quot;&gt;
      &lt;p&gt;We are happy to announce the latest release of the Red Hat Application Migration Toolkit (RHAMT) Eclipse Plugin.&lt;/p&gt;
      &lt;/div&gt;
      &lt;/div&gt;
      &lt;/div&gt;
      &lt;div class=&quot;sect1&quot;&gt;
      &lt;h2 id=&quot;getting-started&quot;&gt;&lt;a class=&quot;anchor&quot; href=&quot;https://tools.jboss.org/blog/news.atom#getting-started&quot;&gt;&lt;/a&gt;Getting Started&lt;/h2&gt;
      &lt;div class=&quot;sectionbody&quot;&gt;
      &lt;div class=&quot;paragraph&quot;&gt;
      &lt;p&gt;It is now available through JBoss Central, and from the update site &lt;a href=&quot;http://download.jboss.org/jbosstools/oxygen/stable/updates/rhamt/&quot;&gt;here&lt;/a&gt;.&lt;/p&gt;
      &lt;/div&gt;
      &lt;/div&gt;
      &lt;/div&gt;
      &lt;div class=&quot;sect1&quot;&gt;
      &lt;h2 id=&quot;what-is-rhamt&quot;&gt;&lt;a class=&quot;anchor&quot; href=&quot;https://tools.jboss.org/blog/news.atom#what-is-rhamt&quot;&gt;&lt;/a&gt;What is RHAMT?&lt;/h2&gt;
      &lt;div class=&quot;sectionbody&quot;&gt;
      &lt;div class=&quot;paragraph&quot;&gt;
      &lt;p&gt;RHAMT is an automated application migration and assessment tool.&lt;/p&gt;
      &lt;/div&gt;
      &lt;div class=&quot;paragraph&quot;&gt;
      &lt;p&gt;Example ways to RHAMT up your code:&lt;/p&gt;
      &lt;/div&gt;
      &lt;div class=&quot;ulist&quot;&gt;
      &lt;ul&gt;
      &lt;li&gt;
      &lt;p&gt;Moving your application from WebLogic to EAP, or WebSphere to EAP&lt;/p&gt;
      &lt;/li&gt;
      &lt;li&gt;
      &lt;p&gt;Version upgrade from Hibernate 3 to Hibernate 4, or EAP 6 to EAP 7&lt;/p&gt;
      &lt;/li&gt;
      &lt;li&gt;
      &lt;p&gt;Change UI technologies from Seam 2 to pure JSF 2.&lt;/p&gt;
      &lt;/li&gt;
      &lt;/ul&gt;
      &lt;/div&gt;
      &lt;div class=&quot;paragraph&quot;&gt;
      &lt;p&gt;An example of how to run the RHAMT CLI:&lt;/p&gt;
      &lt;/div&gt;
      &lt;div class=&quot;paragraph&quot;&gt;
      &lt;p&gt;&lt;code&gt;$ ./rhamt-cli --input /path/to/jee-example-app-1.0.0.ear --output /path/to/output --source weblogic --target eap:7&lt;/code&gt;&lt;/p&gt;
      &lt;/div&gt;
      &lt;div class=&quot;paragraph&quot;&gt;
      &lt;p&gt;The output is a report used to assess and prioritize migration and modernization efforts.&lt;/p&gt;
      &lt;/div&gt;
      &lt;/div&gt;
      &lt;/div&gt;
      &lt;div class=&quot;sect1&quot;&gt;
      &lt;h2 id=&quot;the-rhamt-eclipse-plugin-what-does-it-do&quot;&gt;&lt;a class=&quot;anchor&quot; href=&quot;https://tools.jboss.org/blog/news.atom#the-rhamt-eclipse-plugin-what-does-it-do&quot;&gt;&lt;/a&gt;The RHAMT Eclipse Plugin - What does it do?&lt;/h2&gt;
      &lt;div class=&quot;sectionbody&quot;&gt;
      &lt;div class=&quot;paragraph&quot;&gt;
      &lt;p&gt;Consider an application migration comprised of thousands of files, with a myriad of small changes, not to mention the tediousness of switching between
       the report and your IDE. Who wants to be the engineer assigned to that task? :)
      Instead, this tooling marks the source files containing issues, making it easy to organize, search, and in many cases automatically fix issues using quick fixes.&lt;/p&gt;
      &lt;/div&gt;
      &lt;div class=&quot;paragraph&quot;&gt;
      &lt;p&gt;Let me give you a quick walkthrough.&lt;/p&gt;
      &lt;/div&gt;
      &lt;div class=&quot;sect2&quot;&gt;
      &lt;h3 id=&quot;ruleset-wizard&quot;&gt;&lt;a class=&quot;anchor&quot; href=&quot;https://tools.jboss.org/blog/news.atom#ruleset-wizard&quot;&gt;&lt;/a&gt;Ruleset Wizard&lt;/h3&gt;
      &lt;div class=&quot;paragraph&quot;&gt;
      &lt;p&gt;We now have quickstart template code generators.&lt;/p&gt;
      &lt;/div&gt;
      &lt;div class=&quot;imageblock&quot;&gt;
      &lt;div class=&quot;content&quot;&gt;
      &lt;img alt=&quot;Rueset Wizard&quot; src=&quot;https://tools.jboss.org/blog/images/rhamt/ruleset_wizard.gif&quot; /&gt;
      &lt;/div&gt;
      &lt;/div&gt;
      &lt;/div&gt;
      &lt;div class=&quot;sect2&quot;&gt;
      &lt;h3 id=&quot;rule-creation-from-code&quot;&gt;&lt;a class=&quot;anchor&quot; href=&quot;https://tools.jboss.org/blog/news.atom#rule-creation-from-code&quot;&gt;&lt;/a&gt;Rule Creation From Code&lt;/h3&gt;
      &lt;div class=&quot;paragraph&quot;&gt;
      &lt;p&gt;We have also added rule generators for selected snippets of code.&lt;/p&gt;
      &lt;/div&gt;
      &lt;div class=&quot;imageblock&quot;&gt;
      &lt;div class=&quot;content&quot;&gt;
      &lt;img alt=&quot;Rule Generation From Source&quot; src=&quot;https://tools.jboss.org/blog/images/rhamt/type_implements.gif&quot; /&gt;
      &lt;/div&gt;
      &lt;/div&gt;
      &lt;/div&gt;
      &lt;div class=&quot;sect2&quot;&gt;
      &lt;h3 id=&quot;ruleset-graphical-editor&quot;&gt;&lt;a class=&quot;anchor&quot; href=&quot;https://tools.jboss.org/blog/news.atom#ruleset-graphical-editor&quot;&gt;&lt;/a&gt;Ruleset Graphical Editor&lt;/h3&gt;
      &lt;div class=&quot;paragraph&quot;&gt;
      &lt;p&gt;Ruleset navigation and editing is faster and more intuitive thanks to the new graphical editor.&lt;/p&gt;
      &lt;/div&gt;
      &lt;div class=&quot;imageblock&quot;&gt;
      &lt;div class=&quot;content&quot;&gt;
      &lt;img alt=&quot;Graphical Editor&quot; src=&quot;https://tools.jboss.org/blog/images/rhamt/ruleset_editor.gif&quot; /&gt;
      &lt;/div&gt;
      &lt;/div&gt;
      &lt;/div&gt;
      &lt;div class=&quot;sect2&quot;&gt;
      &lt;h3 id=&quot;ruleset-view&quot;&gt;&lt;a class=&quot;anchor&quot; href=&quot;https://tools.jboss.org/blog/news.atom#ruleset-view&quot;&gt;&lt;/a&gt;Ruleset View&lt;/h3&gt;
      &lt;div class=&quot;paragraph&quot;&gt;
      &lt;p&gt;We have created a view dedicated to the management of rulesets. Default rulesets shipped with RHAMT can now be opened, edited, and referenced while authoring
      your own custom rulesets.&lt;/p&gt;
      &lt;/div&gt;
      &lt;div class=&quot;imageblock&quot;&gt;
      &lt;div class=&quot;content&quot;&gt;
      &lt;img alt=&quot;Ruleset View&quot; src=&quot;https://tools.jboss.org/blog/images/rhamt/ruleset_view.gif&quot; /&gt;
      &lt;/div&gt;
      &lt;/div&gt;
      &lt;/div&gt;
      &lt;div class=&quot;sect2&quot;&gt;
      &lt;h3 id=&quot;run-configuration&quot;&gt;&lt;a class=&quot;anchor&quot; href=&quot;https://tools.jboss.org/blog/news.atom#run-configuration&quot;&gt;&lt;/a&gt;Run Configuration&lt;/h3&gt;
      &lt;div class=&quot;paragraph&quot;&gt;
      &lt;p&gt;The Eclipse plugin interacts with the RHAMT CLI process, thereby making it possible to specify command line options and custom rulesets.&lt;/p&gt;
      &lt;/div&gt;
      &lt;div class=&quot;imageblock&quot;&gt;
      &lt;div class=&quot;content&quot;&gt;
      &lt;img alt=&quot;Run Configuration&quot; src=&quot;https://tools.jboss.org/blog/images/rhamt/run_configuration.gif&quot; /&gt;
      &lt;/div&gt;
      &lt;/div&gt;
      &lt;/div&gt;
      &lt;div class=&quot;sect2&quot;&gt;
      &lt;h3 id=&quot;ruleset-submission&quot;&gt;&lt;a class=&quot;anchor&quot; href=&quot;https://tools.jboss.org/blog/news.atom#ruleset-submission&quot;&gt;&lt;/a&gt;Ruleset Submission&lt;/h3&gt;
      &lt;div class=&quot;paragraph&quot;&gt;
      &lt;p&gt;Lastly, contribute your custom rulesets back to the community from within the IDE.&lt;/p&gt;
      &lt;/div&gt;
      &lt;div class=&quot;imageblock&quot;&gt;
      &lt;div class=&quot;content&quot;&gt;
      &lt;img alt=&quot;Ruleset Submission&quot; src=&quot;https://tools.jboss.org/blog/images/rhamt/ruleset_submission.png&quot; /&gt;
      &lt;/div&gt;
      &lt;/div&gt;
      &lt;div class=&quot;paragraph&quot;&gt;
      &lt;p&gt;&lt;br /&gt;&lt;/p&gt;
      &lt;/div&gt;
      &lt;div class=&quot;paragraph&quot;&gt;
      &lt;p&gt;You can find more detailed information &lt;a href=&quot;https://access.redhat.com/documentation/en-us/red_hat_application_migration_toolkit/&quot;&gt;here&lt;/a&gt;.&lt;/p&gt;
      &lt;/div&gt;
      &lt;div class=&quot;paragraph&quot;&gt;
      &lt;p&gt;Our goal is to make the RHAMT tooling easy to use. We look forward to your feedback and comments!&lt;br /&gt;&lt;/p&gt;
      &lt;/div&gt;
      &lt;div class=&quot;paragraph&quot;&gt;
      &lt;p&gt;Have fun!&lt;br /&gt;
      John Steele&lt;br /&gt;
      &lt;a href=&quot;https://github.com/johnsteele/&quot;&gt;github/johnsteele&lt;/a&gt;&lt;/p&gt;
      &lt;/div&gt;
      &lt;/div&gt;
      &lt;/div&gt;
      &lt;/div&gt;&lt;/div&gt;</description>
	<pubDate>Wed, 06 Jul 2022 12:07:23 +0000</pubDate>
</item>
<item>
	<title>JBoss Tools Team: We are hiring</title>
	<guid isPermaLink="true">https://tools.jboss.org/blog/we-are-hiring - again.html</guid>
	<link>https://tools.jboss.org/blog/we-are-hiring - again.html</link>
	<description>&lt;div&gt;&lt;div class=&quot;paragraph&quot;&gt;
      &lt;p&gt;The Developer Experience and Tooling group, of which JBoss Tools team is part,
      is looking for an awesome developer. We are looking to continue
      improving the usability for developers around various IDEs including Eclipse, VSCode and IntelliJ and around the Red Hat product line, including JBoss Middleware.&lt;/p&gt;
      &lt;/div&gt;
      &lt;div class=&quot;paragraph&quot;&gt;
      &lt;p&gt;Topics range from Java to JavaScript, application servers to containers, source code tinkering to full blown CI/CD setups.&lt;/p&gt;
      &lt;/div&gt;
      &lt;div class=&quot;paragraph&quot;&gt;
      &lt;p&gt;If you are into making developers life easier and like to be able to get involved in many different technologies and get them to work great together then do apply.&lt;/p&gt;
      &lt;/div&gt;
      &lt;div class=&quot;paragraph&quot;&gt;
      &lt;p&gt;You can also ping me (&lt;a href=&quot;mailto:jeffmaury@redhat.com&quot;&gt;jeffmaury@redhat.com&lt;/a&gt;) for questions.&lt;/p&gt;
      &lt;/div&gt;
      &lt;div class=&quot;paragraph&quot;&gt;
      &lt;p&gt;The current list of openings are:&lt;/p&gt;
      &lt;/div&gt;
      &lt;div class=&quot;ulist&quot;&gt;
      &lt;ul&gt;
      &lt;li&gt;
      &lt;p&gt;&lt;a href=&quot;https://global-redhat.icims.com/jobs/66514/software-engineer---jboss-and-openshift-tooling/job&quot;&gt;Sofware engineer&lt;/a&gt;&lt;/p&gt;
      &lt;/li&gt;
      &lt;/ul&gt;
      &lt;/div&gt;
      &lt;div class=&quot;paragraph&quot;&gt;
      &lt;p&gt;Note: the job postings do list a specific location, but for the right candidate we are happy to consider many locations worldwide (anywhere there is a Red Hat office), as well as working from home.&lt;/p&gt;
      &lt;/div&gt;
      &lt;div class=&quot;paragraph&quot;&gt;
      &lt;p&gt;Have fun!&lt;br /&gt;
      Jeff Maury&lt;br /&gt;
      &lt;a href=&quot;http://twitter.com/jeffmaury&quot;&gt;@jeffmaury&lt;/a&gt;
      &lt;a href=&quot;http://twitter.com/jbosstools&quot;&gt;@jbosstools&lt;/a&gt;&lt;/p&gt;
      &lt;/div&gt;&lt;/div&gt;</description>
	<pubDate>Wed, 06 Jul 2022 12:07:23 +0000</pubDate>
</item>
<item>
	<title>JBoss Tools Team: RHAMT Eclipse Plugin 4.1.0.Final has been released!</title>
	<guid isPermaLink="true">https://tools.jboss.org/blog/rhamt_4.1.0.Final_release.html</guid>
	<link>https://tools.jboss.org/blog/rhamt_4.1.0.Final_release.html</link>
	<description>&lt;div&gt;&lt;div id=&quot;preamble&quot;&gt;
      &lt;div class=&quot;sectionbody&quot;&gt;
      &lt;div class=&quot;paragraph&quot;&gt;
      &lt;p&gt;Happy to announce version 4.1.0.Final of the Red Hat Application Migration Toolkit (RHAMT) is now available.&lt;/p&gt;
      &lt;/div&gt;
      &lt;/div&gt;
      &lt;/div&gt;
      &lt;div class=&quot;sect1&quot;&gt;
      &lt;h2 id=&quot;getting-started&quot;&gt;&lt;a class=&quot;anchor&quot; href=&quot;https://tools.jboss.org/blog/news.atom#getting-started&quot;&gt;&lt;/a&gt;Getting Started&lt;/h2&gt;
      &lt;div class=&quot;sectionbody&quot;&gt;
      &lt;div class=&quot;paragraph&quot;&gt;
      &lt;p&gt;Downloads available through JBoss Central and from the &lt;a href=&quot;http://download.jboss.org/jbosstools/photon/stable/updates/rhamt/&quot;&gt;update site&lt;/a&gt;.&lt;/p&gt;
      &lt;/div&gt;
      &lt;/div&gt;
      &lt;/div&gt;
      &lt;div class=&quot;sect1&quot;&gt;
      &lt;h2 id=&quot;rhamt-in-a-nutshel&quot;&gt;&lt;a class=&quot;anchor&quot; href=&quot;https://tools.jboss.org/blog/news.atom#rhamt-in-a-nutshel&quot;&gt;&lt;/a&gt;RHAMT in a Nutshel&lt;/h2&gt;
      &lt;div class=&quot;sectionbody&quot;&gt;
      &lt;div class=&quot;paragraph&quot;&gt;
      &lt;p&gt;RHAMT is an application migration and assessment tool. The migrations supported include application platform upgrades,
      migrations to a cloud-native deployment environment, and also migrations from several commercial products to the
      Red Hat JBoss Enterprise Application Platform.&lt;/p&gt;
      &lt;/div&gt;
      &lt;/div&gt;
      &lt;/div&gt;
      &lt;div class=&quot;sect1&quot;&gt;
      &lt;h2 id=&quot;what-is-new&quot;&gt;&lt;a class=&quot;anchor&quot; href=&quot;https://tools.jboss.org/blog/news.atom#what-is-new&quot;&gt;&lt;/a&gt;What is New?&lt;/h2&gt;
      &lt;div class=&quot;sectionbody&quot;&gt;
      &lt;div class=&quot;sect3&quot;&gt;
      &lt;h4 id=&quot;eclipse-photon&quot;&gt;&lt;a class=&quot;anchor&quot; href=&quot;https://tools.jboss.org/blog/news.atom#eclipse-photon&quot;&gt;&lt;/a&gt;Eclipse Photon&lt;/h4&gt;
      &lt;div class=&quot;paragraph&quot;&gt;
      &lt;p&gt;The tooling now targets Eclipse Photon.&lt;/p&gt;
      &lt;/div&gt;
      &lt;div class=&quot;imageblock&quot;&gt;
      &lt;div class=&quot;content&quot;&gt;
      &lt;img alt=&quot;Photon&quot; src=&quot;https://tools.jboss.org/blog/images/rhamt/4_1_0_final/eclipse_photon.png&quot; /&gt;
      &lt;/div&gt;
      &lt;/div&gt;
      &lt;/div&gt;
      &lt;div class=&quot;sect3&quot;&gt;
      &lt;h4 id=&quot;ignoring-patterns&quot;&gt;&lt;a class=&quot;anchor&quot; href=&quot;https://tools.jboss.org/blog/news.atom#ignoring-patterns&quot;&gt;&lt;/a&gt;Ignoring Patterns&lt;/h4&gt;
      &lt;div class=&quot;paragraph&quot;&gt;
      &lt;p&gt;Specify locations of files to exclude from analysis (using regular expressions).&lt;/p&gt;
      &lt;/div&gt;
      &lt;div class=&quot;imageblock&quot;&gt;
      &lt;div class=&quot;content&quot;&gt;
      &lt;img alt=&quot;Ignore Patterns&quot; src=&quot;https://tools.jboss.org/blog/images/rhamt/4_1_0_final/ignore_pattern.png&quot; /&gt;
      &lt;/div&gt;
      &lt;/div&gt;
      &lt;/div&gt;
      &lt;div class=&quot;sect3&quot;&gt;
      &lt;h4 id=&quot;external-report&quot;&gt;&lt;a class=&quot;anchor&quot; href=&quot;https://tools.jboss.org/blog/news.atom#external-report&quot;&gt;&lt;/a&gt;External Report&lt;/h4&gt;
      &lt;div class=&quot;paragraph&quot;&gt;
      &lt;p&gt;The generated report has been moved out of Eclipse and into the browser.&lt;/p&gt;
      &lt;/div&gt;
      &lt;div class=&quot;imageblock&quot;&gt;
      &lt;div class=&quot;content&quot;&gt;
      &lt;img alt=&quot;Report View&quot; src=&quot;https://tools.jboss.org/blog/images/rhamt/4_1_0_final/report_browser.png&quot; /&gt;
      &lt;/div&gt;
      &lt;/div&gt;
      &lt;/div&gt;
      &lt;div class=&quot;sect3&quot;&gt;
      &lt;h4 id=&quot;improved-ruleset-schema&quot;&gt;&lt;a class=&quot;anchor&quot; href=&quot;https://tools.jboss.org/blog/news.atom#improved-ruleset-schema&quot;&gt;&lt;/a&gt;Improved Ruleset Schema&lt;/h4&gt;
      &lt;div class=&quot;paragraph&quot;&gt;
      &lt;p&gt;The XML ruleset schema has been relaxed providing flexible rule structures.&lt;/p&gt;
      &lt;/div&gt;
      &lt;div class=&quot;imageblock&quot;&gt;
      &lt;div class=&quot;content&quot;&gt;
      &lt;img alt=&quot;Schema&quot; src=&quot;https://tools.jboss.org/blog/images/rhamt/4_1_0_final/ruleset_source.png&quot; /&gt;
      &lt;/div&gt;
      &lt;/div&gt;
      &lt;/div&gt;
      &lt;div class=&quot;sect3&quot;&gt;
      &lt;h4 id=&quot;custom-severities&quot;&gt;&lt;a class=&quot;anchor&quot; href=&quot;https://tools.jboss.org/blog/news.atom#custom-severities&quot;&gt;&lt;/a&gt;Custom Severities&lt;/h4&gt;
      &lt;div class=&quot;paragraph&quot;&gt;
      &lt;p&gt;Custom severities are now included in the Issue Explorer.&lt;/p&gt;
      &lt;/div&gt;
      &lt;div class=&quot;imageblock&quot;&gt;
      &lt;div class=&quot;content&quot;&gt;
      &lt;img alt=&quot;Custom Category&quot; src=&quot;https://tools.jboss.org/blog/images/rhamt/4_1_0_final/custom_category.png&quot; /&gt;
      &lt;/div&gt;
      &lt;/div&gt;
      &lt;/div&gt;
      &lt;div class=&quot;sect3&quot;&gt;
      &lt;h4 id=&quot;stability&quot;&gt;&lt;a class=&quot;anchor&quot; href=&quot;https://tools.jboss.org/blog/news.atom#stability&quot;&gt;&lt;/a&gt;Stability&lt;/h4&gt;
      &lt;div class=&quot;paragraph&quot;&gt;
      &lt;p&gt;A good amount of time has been spent on ensuring the tooling functions consistently across Windows, OSX, and Linux.&lt;/p&gt;
      &lt;/div&gt;
      &lt;div class=&quot;paragraph&quot;&gt;
      &lt;p&gt;&lt;/p&gt;
      &lt;/div&gt;
      &lt;div class=&quot;paragraph&quot;&gt;
      &lt;p&gt;You can find more detailed information &lt;a href=&quot;https://access.redhat.com/documentation/en-us/red_hat_application_migration_toolkit/&quot;&gt;here&lt;/a&gt;.&lt;/p&gt;
      &lt;/div&gt;
      &lt;div class=&quot;paragraph&quot;&gt;
      &lt;p&gt;Our goal is to make the RHAMT tooling easy to use. We look forward to your feedback and comments!&lt;br /&gt;&lt;/p&gt;
      &lt;/div&gt;
      &lt;div class=&quot;paragraph&quot;&gt;
      &lt;p&gt;Have fun!&lt;br /&gt;
      John Steele&lt;br /&gt;
      &lt;a href=&quot;https://github.com/johnsteele/&quot;&gt;github/johnsteele&lt;/a&gt;&lt;/p&gt;
      &lt;/div&gt;
      &lt;/div&gt;
      &lt;/div&gt;
      &lt;/div&gt;&lt;/div&gt;</description>
	<pubDate>Wed, 06 Jul 2022 12:07:23 +0000</pubDate>
</item>
<item>
	<title>JBoss Tools Team: Quarkus</title>
	<guid isPermaLink="true">https://tools.jboss.org/blog/quarkus.html</guid>
	<link>https://tools.jboss.org/blog/quarkus.html</link>
	<description>&lt;div&gt;&lt;div class=&quot;paragraph&quot;&gt;
      &lt;p&gt;Youâ€™ve probably heard about &lt;a href=&quot;https://quarkus.io&quot;&gt;Quarkus&lt;/a&gt;, the Supersonic Subatomic Java framework tailored for Kubernetes and containers.&lt;/p&gt;
      &lt;/div&gt;
      &lt;div class=&quot;paragraph&quot;&gt;
      &lt;p&gt;We wrote an article on how to create your first Quarkus project in an Eclipse based IDE (like &lt;a href=&quot;https://developers.redhat.com/products/codeready-studio/overview&quot;&gt;Red Hat CodeReady Studio&lt;/a&gt;).&lt;/p&gt;
      &lt;/div&gt;
      &lt;div class=&quot;paragraph&quot;&gt;
      &lt;p&gt;You can read it at &lt;a class=&quot;bare&quot; href=&quot;https://developers.redhat.com/blog/2019/05/09/create-your-first-quarkus-project-with-eclipse-ide-red-hat-codeready-studio/&quot;&gt;https://developers.redhat.com/blog/2019/05/09/create-your-first-quarkus-project-with-eclipse-ide-red-hat-codeready-studio/&lt;/a&gt;&lt;/p&gt;
      &lt;/div&gt;&lt;/div&gt;</description>
	<pubDate>Wed, 06 Jul 2022 12:07:23 +0000</pubDate>
</item>
<item>
	<title>JBoss Tools Team: Integration Tooling for Eclipse Photon</title>
	<guid isPermaLink="true">https://tools.jboss.org/blog/integration-stack-4.6.0.Final.html</guid>
	<link>https://tools.jboss.org/blog/integration-stack-4.6.0.Final.html</link>
	<description>&lt;div&gt;&lt;div id=&quot;preamble&quot;&gt;
      &lt;div class=&quot;sectionbody&quot;&gt;
      &lt;div class=&quot;paragraph&quot;&gt;
      &lt;p&gt;&lt;strong&gt;Try our leaner, complete Eclipse Photon and Red Hat Developer Studio 12 compatible integration tooling.&lt;/strong&gt;&lt;/p&gt;
      &lt;/div&gt;
      &lt;div class=&quot;imageblock&quot;&gt;
      &lt;div class=&quot;content&quot;&gt;
      &lt;img alt=&quot;devstudio12&quot; src=&quot;https://tools.jboss.org/blog/images/devstudio12.png&quot; /&gt;
      &lt;/div&gt;
      &lt;/div&gt;
      &lt;div class=&quot;paragraph&quot;&gt;
      &lt;p&gt;&lt;strong&gt;JBoss Tools Integration Stack 4.6.0.Final / Red Hat Developer Studio Integration Stack 12.0.0.GA&lt;/strong&gt;&lt;/p&gt;
      &lt;/div&gt;
      &lt;div class=&quot;admonitionblock note&quot;&gt;
      &lt;table&gt;
      &lt;tbody&gt;&lt;tr&gt;
      &lt;td class=&quot;icon&quot;&gt;
      &lt;i class=&quot;fa icon-note&quot; title=&quot;Note&quot;&gt;&lt;/i&gt;
      &lt;/td&gt;
      &lt;td class=&quot;content&quot;&gt;
      All of the Integration Stack components have been verified to work with the same dependencies as JBoss Tools 4.6 and Red Hat Developer Studio 12.
      &lt;/td&gt;
      &lt;/tr&gt;
      &lt;/tbody&gt;&lt;/table&gt;
      &lt;/div&gt;
      &lt;/div&gt;
      &lt;/div&gt;
      &lt;div class=&quot;sect1&quot;&gt;
      &lt;h2 id=&quot;what-s-new-for-this-release&quot;&gt;&lt;a class=&quot;anchor&quot; href=&quot;https://tools.jboss.org/blog/news.atom#what-s-new-for-this-release&quot;&gt;&lt;/a&gt;What’s new for this release?&lt;/h2&gt;
      &lt;div class=&quot;sectionbody&quot;&gt;
      &lt;div class=&quot;paragraph&quot;&gt;
      &lt;p&gt;This is the initial release in support of Eclipse Photon.  It syncs up with Developer Studio 12.0.0, JBoss Tools 4.6.0 and Eclipse 4.8.0 (Photon).  It is also a maintenance release for Teiid Designer and BRMS tooling.&lt;/p&gt;
      &lt;/div&gt;
      &lt;div class=&quot;sect2&quot;&gt;
      &lt;h3 id=&quot;released-tooling-highlights&quot;&gt;&lt;a class=&quot;anchor&quot; href=&quot;https://tools.jboss.org/blog/news.atom#released-tooling-highlights&quot;&gt;&lt;/a&gt;Released Tooling Highlights&lt;/h3&gt;
      &lt;div class=&quot;sect3&quot;&gt;
      &lt;h4 id=&quot;business-process-and-rules-development&quot;&gt;&lt;a class=&quot;anchor&quot; href=&quot;https://tools.jboss.org/blog/news.atom#business-process-and-rules-development&quot;&gt;&lt;/a&gt;Business Process and Rules Development&lt;/h4&gt;
      &lt;div class=&quot;sect4&quot;&gt;
      &lt;h5 id=&quot;bpmn2-modeler-known-issues&quot;&gt;&lt;a class=&quot;anchor&quot; href=&quot;https://tools.jboss.org/blog/news.atom#bpmn2-modeler-known-issues&quot;&gt;&lt;/a&gt;BPMN2 Modeler Known Issues&lt;/h5&gt;
      &lt;div class=&quot;paragraph&quot;&gt;
      &lt;p&gt;See the &lt;a href=&quot;https://access.redhat.com/documentation/en-us/red_hat_jboss_developer_studio_integration_stack/12.0/html/12.0.0_release_notes_and_known_issues/resolved_issues#bpmn2_1_5_0_final&quot;&gt;BPMN2 1.5.0.Final Known Issues Section&lt;/a&gt; of the Integration Stack 12.0.0.GA release notes.&lt;/p&gt;
      &lt;/div&gt;
      &lt;/div&gt;
      &lt;div class=&quot;sect4&quot;&gt;
      &lt;h5 id=&quot;drools-jbpm6-known-issues&quot;&gt;&lt;a class=&quot;anchor&quot; href=&quot;https://tools.jboss.org/blog/news.atom#drools-jbpm6-known-issues&quot;&gt;&lt;/a&gt;Drools/jBPM6 Known Issues&lt;/h5&gt;
      &lt;div class=&quot;paragraph&quot;&gt;
      &lt;p&gt;See the &lt;a href=&quot;https://access.redhat.com/documentation/en-us/red_hat_jboss_developer_studio_integration_stack/12.0/html/12.0.0_release_notes_and_known_issues/resolved_issues#drools_7_8_0_final&quot;&gt;Drools 7.8.0.Final Known Issues Section&lt;/a&gt; of the Integration Stack 12.0.0.GA release notes.&lt;/p&gt;
      &lt;/div&gt;
      &lt;/div&gt;
      &lt;/div&gt;
      &lt;div class=&quot;sect3&quot;&gt;
      &lt;h4 id=&quot;data-virtualization-highlights&quot;&gt;&lt;a class=&quot;anchor&quot; href=&quot;https://tools.jboss.org/blog/news.atom#data-virtualization-highlights&quot;&gt;&lt;/a&gt;Data Virtualization Highlights&lt;/h4&gt;
      &lt;div class=&quot;sect4&quot;&gt;
      &lt;h5 id=&quot;teiid-designer&quot;&gt;&lt;a class=&quot;anchor&quot; href=&quot;https://tools.jboss.org/blog/news.atom#teiid-designer&quot;&gt;&lt;/a&gt;Teiid Designer&lt;/h5&gt;
      &lt;div class=&quot;paragraph&quot;&gt;
      &lt;p&gt;See the &lt;a href=&quot;https://access.redhat.com/documentation/en-us/red_hat_jboss_developer_studio_integration_stack/12.0/html/12.0.0_release_notes_and_known_issues/resolved_issues#teiid_designer_11_2_0_final&quot;&gt;Teiid Designer 11.2.0.Final Resolved Issues Section&lt;/a&gt; of the Integration Stack 12.0.0.GA release notes.&lt;/p&gt;
      &lt;/div&gt;
      &lt;/div&gt;
      &lt;/div&gt;
      &lt;/div&gt;
      &lt;/div&gt;
      &lt;/div&gt;
      &lt;div class=&quot;sect1&quot;&gt;
      &lt;h2 id=&quot;what-s-an-integration-stack&quot;&gt;&lt;a class=&quot;anchor&quot; href=&quot;https://tools.jboss.org/blog/news.atom#what-s-an-integration-stack&quot;&gt;&lt;/a&gt;What’s an Integration Stack?&lt;/h2&gt;
      &lt;div class=&quot;sectionbody&quot;&gt;
      &lt;div class=&quot;paragraph&quot;&gt;
      &lt;p&gt;Red Hat Developer Studio Integration Stack is a set of Eclipse-based development tools. It further enhances the IDE functionality provided by Developer Studio, with plug-ins specifically for use when developing for other Red Hat products.  It’s where DataVirt Tooling and BRMS tooling are aggregated.  The following frameworks are supported:&lt;/p&gt;
      &lt;/div&gt;
      &lt;div class=&quot;sect2&quot;&gt;
      &lt;h3 id=&quot;red-hat-business-process-and-rules-development&quot;&gt;&lt;a class=&quot;anchor&quot; href=&quot;https://tools.jboss.org/blog/news.atom#red-hat-business-process-and-rules-development&quot;&gt;&lt;/a&gt;Red Hat Business Process and Rules Development&lt;/h3&gt;
      &lt;div class=&quot;paragraph&quot;&gt;
      &lt;p&gt;Business Process and Rules Development plug-ins provide design, debug and testing tooling for developing business processes for Red Hat BRMS and Red Hat BPM Suite.&lt;/p&gt;
      &lt;/div&gt;
      &lt;div class=&quot;ulist&quot;&gt;
      &lt;ul&gt;
      &lt;li&gt;
      &lt;p&gt;&lt;a href=&quot;https://tools.jboss.org/features/bpel.html&quot;&gt;BPEL Designer&lt;/a&gt; - Orchestrating your business processes.&lt;/p&gt;
      &lt;/li&gt;
      &lt;li&gt;
      &lt;p&gt;&lt;a href=&quot;https://tools.jboss.org/features/bpmn2.html&quot;&gt;BPMN2 Modeler&lt;/a&gt; - A graphical modeling tool which allows creation and editing of Business Process Modeling Notation diagrams using graphiti.&lt;/p&gt;
      &lt;/li&gt;
      &lt;li&gt;
      &lt;p&gt;&lt;a href=&quot;https://tools.jboss.org/features/drools.html&quot;&gt;Drools&lt;/a&gt; - A Business Logic integration Platform which provides a unified and integrated platform for Rules, Workflow and Event Processing including KIE.&lt;/p&gt;
      &lt;/li&gt;
      &lt;li&gt;
      &lt;p&gt;&lt;a href=&quot;https://tools.jboss.org/features/jbpm.html&quot;&gt;jBPM&lt;/a&gt; - A flexible Business Process Management (BPM) suite.&lt;/p&gt;
      &lt;/li&gt;
      &lt;/ul&gt;
      &lt;/div&gt;
      &lt;/div&gt;
      &lt;div class=&quot;sect2&quot;&gt;
      &lt;h3 id=&quot;red-hat-data-virtualization-development&quot;&gt;&lt;a class=&quot;anchor&quot; href=&quot;https://tools.jboss.org/blog/news.atom#red-hat-data-virtualization-development&quot;&gt;&lt;/a&gt;Red Hat Data Virtualization Development&lt;/h3&gt;
      &lt;div class=&quot;paragraph&quot;&gt;
      &lt;p&gt;Red Hat Data Virtualization Development plug-ins provide a graphical interface to manage various aspects of Red Hat Data Virtualization instances, including the ability to design virtual databases and interact with associated governance repositories.&lt;/p&gt;
      &lt;/div&gt;
      &lt;div class=&quot;ulist&quot;&gt;
      &lt;ul&gt;
      &lt;li&gt;
      &lt;p&gt;&lt;a href=&quot;https://tools.jboss.org/features/teiiddesigner.html&quot;&gt;Teiid Designer&lt;/a&gt; - A visual tool that enables rapid, model-driven definition, integration, management and testing of data services without programming using the Teiid runtime framework.&lt;/p&gt;
      &lt;/li&gt;
      &lt;/ul&gt;
      &lt;/div&gt;
      &lt;/div&gt;
      &lt;div class=&quot;sect2&quot;&gt;
      &lt;h3 id=&quot;the-jboss-tools-website-features-tab&quot;&gt;&lt;a class=&quot;anchor&quot; href=&quot;https://tools.jboss.org/blog/news.atom#the-jboss-tools-website-features-tab&quot;&gt;&lt;/a&gt;The JBoss Tools website features tab&lt;/h3&gt;
      &lt;div class=&quot;paragraph&quot;&gt;
      &lt;p&gt;Don’t miss the &lt;a href=&quot;https://tools.jboss.org/features&quot;&gt;Features tab&lt;/a&gt; for up to date information on your favorite Integration Stack components.&lt;/p&gt;
      &lt;/div&gt;
      &lt;/div&gt;
      &lt;/div&gt;
      &lt;/div&gt;
      &lt;div class=&quot;sect1&quot;&gt;
      &lt;h2 id=&quot;installation&quot;&gt;&lt;a class=&quot;anchor&quot; href=&quot;https://tools.jboss.org/blog/news.atom#installation&quot;&gt;&lt;/a&gt;Installation&lt;/h2&gt;
      &lt;div class=&quot;sectionbody&quot;&gt;
      &lt;div class=&quot;paragraph&quot;&gt;
      &lt;p&gt;The easiest way to install the Integration Stack components is through the &lt;a href=&quot;https://access.redhat.com/jbossnetwork/restricted/listSoftware.html?downloadType=distributions&amp;amp;product=jbossdeveloperstudio&amp;amp;version=12.0.0&quot;&gt;stand-alone installer&lt;/a&gt; or through our &lt;a href=&quot;http://tools.jboss.org/downloads/overview.html&quot;&gt;JBoss Tools Download Site&lt;/a&gt;.&lt;/p&gt;
      &lt;/div&gt;
      &lt;div class=&quot;paragraph&quot;&gt;
      &lt;p&gt;For a complete set of Integration Stack installation instructions, see &lt;a href=&quot;https://access.redhat.com/documentation/en-us/red_hat_jboss_developer_studio_integration_stack/12.0/html/installation_guide/&quot;&gt;Integration Stack Installation Guide&lt;/a&gt;&lt;/p&gt;
      &lt;/div&gt;
      &lt;div class=&quot;paragraph&quot;&gt;
      &lt;p&gt;&lt;em&gt;Let us know how it goes!&lt;/em&gt;&lt;/p&gt;
      &lt;/div&gt;
      &lt;div class=&quot;paragraph&quot;&gt;
      &lt;p&gt;Paul Leacu.&lt;/p&gt;
      &lt;/div&gt;
      &lt;/div&gt;
      &lt;/div&gt;&lt;/div&gt;</description>
	<pubDate>Wed, 06 Jul 2022 12:07:23 +0000</pubDate>
</item>
<item>
	<title>JBoss Tools Team: Integration Tooling for Eclipse Oxygen</title>
	<guid isPermaLink="true">https://tools.jboss.org/blog/integration-stack-4.5.2.Final.html</guid>
	<link>https://tools.jboss.org/blog/integration-stack-4.5.2.Final.html</link>
	<description>&lt;div&gt;&lt;div id=&quot;preamble&quot;&gt;
      &lt;div class=&quot;sectionbody&quot;&gt;
      &lt;div class=&quot;paragraph&quot;&gt;
      &lt;p&gt;&lt;strong&gt;Try our complete Eclipse Oxygen and Red Hat JBoss Developer Studio 11 compatible integration tooling.&lt;/strong&gt;&lt;/p&gt;
      &lt;/div&gt;
      &lt;div class=&quot;imageblock&quot;&gt;
      &lt;div class=&quot;content&quot;&gt;
      &lt;img alt=&quot;jbosstools jbdevstudio blog header&quot; src=&quot;https://tools.jboss.org/blog/images/jbosstools-jbdevstudio-blog-header.png&quot; /&gt;
      &lt;/div&gt;
      &lt;/div&gt;
      &lt;div class=&quot;paragraph&quot;&gt;
      &lt;p&gt;&lt;strong&gt;JBoss Tools Integration Stack 4.5.2.Final / Developer Studio Integration Stack 11.2.0.GA&lt;/strong&gt;&lt;/p&gt;
      &lt;/div&gt;
      &lt;div class=&quot;admonitionblock note&quot;&gt;
      &lt;table&gt;
      &lt;tbody&gt;&lt;tr&gt;
      &lt;td class=&quot;icon&quot;&gt;
      &lt;i class=&quot;fa icon-note&quot; title=&quot;Note&quot;&gt;&lt;/i&gt;
      &lt;/td&gt;
      &lt;td class=&quot;content&quot;&gt;
      All of the Integration Stack components have been verified to work with the same dependencies as JBoss Tools 4.5 and Developer Studio 11.
      &lt;/td&gt;
      &lt;/tr&gt;
      &lt;/tbody&gt;&lt;/table&gt;
      &lt;/div&gt;
      &lt;/div&gt;
      &lt;/div&gt;
      &lt;div class=&quot;sect1&quot;&gt;
      &lt;h2 id=&quot;what-s-new-for-this-release&quot;&gt;&lt;a class=&quot;anchor&quot; href=&quot;https://tools.jboss.org/blog/news.atom#what-s-new-for-this-release&quot;&gt;&lt;/a&gt;What’s new for this release?&lt;/h2&gt;
      &lt;div class=&quot;sectionbody&quot;&gt;
      &lt;div class=&quot;paragraph&quot;&gt;
      &lt;p&gt;This release provides full Teiid Designer tooling support for JBoss Data Virtualization 6.4 runtime.  It provides an updated BPMN2 Modeler and jBPM/Drools for our Business Process Modeling friends.  It also provides full synchronization with Devstudio 11.2.0.GA, JBoss Tools 4.5.2.Final and Eclipse Oxygen.2.  Please note that SwitchYard is deprecated in this release.&lt;/p&gt;
      &lt;/div&gt;
      &lt;div class=&quot;sect2&quot;&gt;
      &lt;h3 id=&quot;released-tooling-highlights&quot;&gt;&lt;a class=&quot;anchor&quot; href=&quot;https://tools.jboss.org/blog/news.atom#released-tooling-highlights&quot;&gt;&lt;/a&gt;Released Tooling Highlights&lt;/h3&gt;
      &lt;div class=&quot;sect3&quot;&gt;
      &lt;h4 id=&quot;jboss-business-process-and-rules-development&quot;&gt;&lt;a class=&quot;anchor&quot; href=&quot;https://tools.jboss.org/blog/news.atom#jboss-business-process-and-rules-development&quot;&gt;&lt;/a&gt;JBoss Business Process and Rules Development&lt;/h4&gt;
      &lt;div class=&quot;sect4&quot;&gt;
      &lt;h5 id=&quot;bpmn2-modeler-known-issues&quot;&gt;&lt;a class=&quot;anchor&quot; href=&quot;https://tools.jboss.org/blog/news.atom#bpmn2-modeler-known-issues&quot;&gt;&lt;/a&gt;BPMN2 Modeler Known Issues&lt;/h5&gt;
      &lt;div class=&quot;paragraph&quot;&gt;
      &lt;p&gt;See the &lt;a href=&quot;https://access.redhat.com/documentation/en-us/red_hat_jboss_developer_studio_integration_stack/11.2/html/11.2.0_release_notes_and_known_issues/resolved_issues#bpmn2_1_4_2_final&quot;&gt;BPMN2 1.4.2.Final Known Issues Section&lt;/a&gt; of the Integration Stack 11.2.0.GA release notes.&lt;/p&gt;
      &lt;/div&gt;
      &lt;/div&gt;
      &lt;div class=&quot;sect4&quot;&gt;
      &lt;h5 id=&quot;drools-jbpm6-known-issues&quot;&gt;&lt;a class=&quot;anchor&quot; href=&quot;https://tools.jboss.org/blog/news.atom#drools-jbpm6-known-issues&quot;&gt;&lt;/a&gt;Drools/jBPM6 Known Issues&lt;/h5&gt;
      &lt;div class=&quot;paragraph&quot;&gt;
      &lt;p&gt;See the &lt;a href=&quot;https://access.redhat.com/documentation/en-us/red_hat_jboss_developer_studio_integration_stack/11.2/html/11.2.0_release_notes_and_known_issues/resolved_issues#drools_7_5_0_final&quot;&gt;Drools 7.5.0.Final Known Issues Section&lt;/a&gt; of the Integration Stack 11.2.0.GA release notes.&lt;/p&gt;
      &lt;/div&gt;
      &lt;/div&gt;
      &lt;div class=&quot;sect4&quot;&gt;
      &lt;h5 id=&quot;switchyard-highlights&quot;&gt;&lt;a class=&quot;anchor&quot; href=&quot;https://tools.jboss.org/blog/news.atom#switchyard-highlights&quot;&gt;&lt;/a&gt;SwitchYard Highlights&lt;/h5&gt;
      &lt;div class=&quot;paragraph&quot;&gt;
      &lt;p&gt;See the &lt;a href=&quot;https://access.redhat.com/documentation/en-us/red_hat_jboss_developer_studio_integration_stack/11.2/html/11.2.0_release_notes_and_known_issues/resolved_issues#switchyard_2_4_1_final&quot;&gt;SwitchYard 2.4.1.Final Resolved Issues Section&lt;/a&gt; of the Integration Stack 11.2.0.GA release notes.&lt;/p&gt;
      &lt;/div&gt;
      &lt;/div&gt;
      &lt;/div&gt;
      &lt;div class=&quot;sect3&quot;&gt;
      &lt;h4 id=&quot;data-virtualization-highlights&quot;&gt;&lt;a class=&quot;anchor&quot; href=&quot;https://tools.jboss.org/blog/news.atom#data-virtualization-highlights&quot;&gt;&lt;/a&gt;Data Virtualization Highlights&lt;/h4&gt;
      &lt;div class=&quot;sect4&quot;&gt;
      &lt;h5 id=&quot;teiid-designer&quot;&gt;&lt;a class=&quot;anchor&quot; href=&quot;https://tools.jboss.org/blog/news.atom#teiid-designer&quot;&gt;&lt;/a&gt;Teiid Designer&lt;/h5&gt;
      &lt;div class=&quot;paragraph&quot;&gt;
      &lt;p&gt;See the &lt;a href=&quot;https://access.redhat.com/documentation/en-us/red_hat_jboss_developer_studio_integration_stack/11.2/html/11.2.0_release_notes_and_known_issues/resolved_issues#teiid_designer_11_1_1_final&quot;&gt;Teiid Designer 11.1.1.Final Resolved Issues Section&lt;/a&gt; of the Integration Stack 11.2.0.GA release notes.&lt;/p&gt;
      &lt;/div&gt;
      &lt;/div&gt;
      &lt;/div&gt;
      &lt;/div&gt;
      &lt;/div&gt;
      &lt;/div&gt;
      &lt;div class=&quot;sect1&quot;&gt;
      &lt;h2 id=&quot;what-s-an-integration-stack&quot;&gt;&lt;a class=&quot;anchor&quot; href=&quot;https://tools.jboss.org/blog/news.atom#what-s-an-integration-stack&quot;&gt;&lt;/a&gt;What’s an Integration Stack?&lt;/h2&gt;
      &lt;div class=&quot;sectionbody&quot;&gt;
      &lt;div class=&quot;paragraph&quot;&gt;
      &lt;p&gt;Red Hat JBoss Developer Studio Integration Stack is a set of Eclipse-based development tools. It further enhances the IDE functionality provided by JBoss Developer Studio, with plug-ins specifically for use when developing for other Red Hat JBoss products.  It’s where DataVirt Tooling, SOA tooling and BRMS tooling are aggregated.  The following frameworks are supported:&lt;/p&gt;
      &lt;/div&gt;
      &lt;div class=&quot;sect2&quot;&gt;
      &lt;h3 id=&quot;jboss-business-process-and-rules-development-2&quot;&gt;&lt;a class=&quot;anchor&quot; href=&quot;https://tools.jboss.org/blog/news.atom#jboss-business-process-and-rules-development-2&quot;&gt;&lt;/a&gt;JBoss Business Process and Rules Development&lt;/h3&gt;
      &lt;div class=&quot;paragraph&quot;&gt;
      &lt;p&gt;JBoss Business Process and Rules Development plug-ins provide design, debug and testing tooling for developing business processes for Red Hat JBoss BRMS and Red Hat JBoss BPM Suite.&lt;/p&gt;
      &lt;/div&gt;
      &lt;div class=&quot;ulist&quot;&gt;
      &lt;ul&gt;
      &lt;li&gt;
      &lt;p&gt;&lt;a href=&quot;https://tools.jboss.org/features/bpel.html&quot;&gt;BPEL Designer&lt;/a&gt; - Orchestrating your business processes.&lt;/p&gt;
      &lt;/li&gt;
      &lt;li&gt;
      &lt;p&gt;&lt;a href=&quot;https://tools.jboss.org/features/bpmn2.html&quot;&gt;BPMN2 Modeler&lt;/a&gt; - A graphical modeling tool which allows creation and editing of Business Process Modeling Notation diagrams using graphiti.&lt;/p&gt;
      &lt;/li&gt;
      &lt;li&gt;
      &lt;p&gt;&lt;a href=&quot;https://tools.jboss.org/features/drools.html&quot;&gt;Drools&lt;/a&gt; - A Business Logic integration Platform which provides a unified and integrated platform for Rules, Workflow and Event Processing including KIE.&lt;/p&gt;
      &lt;/li&gt;
      &lt;li&gt;
      &lt;p&gt;&lt;a href=&quot;https://tools.jboss.org/features/jbpm.html&quot;&gt;jBPM&lt;/a&gt; - A flexible Business Process Management (BPM) suite.&lt;/p&gt;
      &lt;/li&gt;
      &lt;/ul&gt;
      &lt;/div&gt;
      &lt;/div&gt;
      &lt;div class=&quot;sect2&quot;&gt;
      &lt;h3 id=&quot;jboss-data-virtualization-development&quot;&gt;&lt;a class=&quot;anchor&quot; href=&quot;https://tools.jboss.org/blog/news.atom#jboss-data-virtualization-development&quot;&gt;&lt;/a&gt;JBoss Data Virtualization Development&lt;/h3&gt;
      &lt;div class=&quot;paragraph&quot;&gt;
      &lt;p&gt;JBoss Data Virtualization Development plug-ins provide a graphical interface to manage various aspects of Red Hat JBoss Data Virtualization instances, including the ability to design virtual databases and interact with associated governance repositories.&lt;/p&gt;
      &lt;/div&gt;
      &lt;div class=&quot;ulist&quot;&gt;
      &lt;ul&gt;
      &lt;li&gt;
      &lt;p&gt;&lt;a href=&quot;https://tools.jboss.org/features/teiiddesigner.html&quot;&gt;Teiid Designer&lt;/a&gt; - A visual tool that enables rapid, model-driven definition, integration, management and testing of data services without programming using the Teiid runtime framework.&lt;/p&gt;
      &lt;/li&gt;
      &lt;/ul&gt;
      &lt;/div&gt;
      &lt;/div&gt;
      &lt;div class=&quot;sect2&quot;&gt;
      &lt;h3 id=&quot;jboss-integration-and-soa-development&quot;&gt;&lt;a class=&quot;anchor&quot; href=&quot;https://tools.jboss.org/blog/news.atom#jboss-integration-and-soa-development&quot;&gt;&lt;/a&gt;JBoss Integration and SOA Development&lt;/h3&gt;
      &lt;div class=&quot;paragraph&quot;&gt;
      &lt;p&gt;JBoss Integration and SOA Development plug-ins provide tooling for developing, configuring and deploying BRMS and SwitchYard to Red Hat JBoss Fuse and Fuse Fabric containers.&lt;/p&gt;
      &lt;/div&gt;
      &lt;div class=&quot;ulist&quot;&gt;
      &lt;ul&gt;
      &lt;li&gt;
      &lt;p&gt;All of the Business Process and Rules Development plugins plus SwitchYard. Switchyard is deprecated as of this release.&lt;/p&gt;
      &lt;/li&gt;
      &lt;li&gt;
      &lt;p&gt;&lt;a href=&quot;https://tools.jboss.org/features/fusetools.html&quot;&gt;Fuse Tooling&lt;/a&gt; has moved out of the Integration Stack to be a core part of JBoss Tools and Developer Studio.&lt;/p&gt;
      &lt;/li&gt;
      &lt;/ul&gt;
      &lt;/div&gt;
      &lt;/div&gt;
      &lt;div class=&quot;sect2&quot;&gt;
      &lt;h3 id=&quot;the-jboss-tools-website-features-tab&quot;&gt;&lt;a class=&quot;anchor&quot; href=&quot;https://tools.jboss.org/blog/news.atom#the-jboss-tools-website-features-tab&quot;&gt;&lt;/a&gt;The JBoss Tools website features tab&lt;/h3&gt;
      &lt;div class=&quot;paragraph&quot;&gt;
      &lt;p&gt;Don’t miss the &lt;a href=&quot;https://tools.jboss.org/features&quot;&gt;Features tab&lt;/a&gt; for up to date information on your favorite Integration Stack components.&lt;/p&gt;
      &lt;/div&gt;
      &lt;/div&gt;
      &lt;/div&gt;
      &lt;/div&gt;
      &lt;div class=&quot;sect1&quot;&gt;
      &lt;h2 id=&quot;installation&quot;&gt;&lt;a class=&quot;anchor&quot; href=&quot;https://tools.jboss.org/blog/news.atom#installation&quot;&gt;&lt;/a&gt;Installation&lt;/h2&gt;
      &lt;div class=&quot;sectionbody&quot;&gt;
      &lt;div class=&quot;paragraph&quot;&gt;
      &lt;p&gt;The easiest way to install the Integration Stack components is through the &lt;a href=&quot;https://access.redhat.com/jbossnetwork/restricted/listSoftware.html?downloadType=distributions&amp;amp;product=jbossdeveloperstudio&amp;amp;version=11.2.0&quot;&gt;stand-alone installer&lt;/a&gt; or through our &lt;a href=&quot;http://tools.jboss.org/downloads/overview.html&quot;&gt;JBoss Tools Download Site&lt;/a&gt;.&lt;/p&gt;
      &lt;/div&gt;
      &lt;div class=&quot;paragraph&quot;&gt;
      &lt;p&gt;For a complete set of Integration Stack installation instructions, see &lt;a href=&quot;https://access.redhat.com/documentation/en-us/red_hat_jboss_developer_studio_integration_stack/11.2/html/installation_guide/&quot;&gt;Integration Stack Installation Guide&lt;/a&gt;&lt;/p&gt;
      &lt;/div&gt;
      &lt;div class=&quot;paragraph&quot;&gt;
      &lt;p&gt;&lt;em&gt;Let us know how it goes!&lt;/em&gt;&lt;/p&gt;
      &lt;/div&gt;
      &lt;div class=&quot;paragraph&quot;&gt;
      &lt;p&gt;Paul Leacu.&lt;/p&gt;
      &lt;/div&gt;
      &lt;/div&gt;
      &lt;/div&gt;&lt;/div&gt;</description>
	<pubDate>Wed, 06 Jul 2022 12:07:23 +0000</pubDate>
</item>
<item>
	<title>JBoss Tools Team: Integration Tooling for Eclipse 2019-03</title>
	<guid isPermaLink="true">https://tools.jboss.org/blog/integration-stack-4.11.0.Final.html</guid>
	<link>https://tools.jboss.org/blog/integration-stack-4.11.0.Final.html</link>
	<description>&lt;div&gt;&lt;div id=&quot;preamble&quot;&gt;
      &lt;div class=&quot;sectionbody&quot;&gt;
      &lt;div class=&quot;paragraph&quot;&gt;
      &lt;p&gt;&lt;strong&gt;Check out our new branding for Eclipse 2019-03.  We’re now Red Hat CodeReady Studio 12 Integration Stack.&lt;/strong&gt;&lt;/p&gt;
      &lt;/div&gt;
      &lt;div class=&quot;imageblock&quot;&gt;
      &lt;div class=&quot;content&quot;&gt;
      &lt;img alt=&quot;crstudio12&quot; src=&quot;https://tools.jboss.org/blog/images/crstudio12.png&quot; /&gt;
      &lt;/div&gt;
      &lt;/div&gt;
      &lt;div class=&quot;paragraph&quot;&gt;
      &lt;p&gt;&lt;strong&gt;JBoss Tools Integration Stack 4.11.0.Final / Red Hat CodeReady Studio Integration Stack 12.11.0.GA&lt;/strong&gt;&lt;/p&gt;
      &lt;/div&gt;
      &lt;div class=&quot;admonitionblock note&quot;&gt;
      &lt;table&gt;
      &lt;tbody&gt;&lt;tr&gt;
      &lt;td class=&quot;icon&quot;&gt;
      &lt;i class=&quot;fa icon-note&quot; title=&quot;Note&quot;&gt;&lt;/i&gt;
      &lt;/td&gt;
      &lt;td class=&quot;content&quot;&gt;
      All of the Integration Stack components have been verified to work with the same dependencies as JBoss Tools 4.11 and Red Hat CodeReady Studio 12.
      &lt;/td&gt;
      &lt;/tr&gt;
      &lt;/tbody&gt;&lt;/table&gt;
      &lt;/div&gt;
      &lt;/div&gt;
      &lt;/div&gt;
      &lt;div class=&quot;sect1&quot;&gt;
      &lt;h2 id=&quot;what-s-new-for-this-release&quot;&gt;&lt;a class=&quot;anchor&quot; href=&quot;https://tools.jboss.org/blog/news.atom#what-s-new-for-this-release&quot;&gt;&lt;/a&gt;What’s new for this release?&lt;/h2&gt;
      &lt;div class=&quot;sectionbody&quot;&gt;
      &lt;div class=&quot;paragraph&quot;&gt;
      &lt;p&gt;DataVirtualization support from Teiid Designer is no longer available through the Integration Stack.  It can be installed directly from &lt;a href=&quot;http://download.jboss.org/jbosstools/photon/stable/updates/integration-stack/teiiddesigner&quot;&gt;Teiid Designer&lt;/a&gt;&lt;/p&gt;
      &lt;/div&gt;
      &lt;div class=&quot;paragraph&quot;&gt;
      &lt;p&gt;This release has an updated BPMN2 Modeler and jBPM/Drools/KIE.&lt;/p&gt;
      &lt;/div&gt;
      &lt;div class=&quot;sect2&quot;&gt;
      &lt;h3 id=&quot;released-tooling-highlights&quot;&gt;&lt;a class=&quot;anchor&quot; href=&quot;https://tools.jboss.org/blog/news.atom#released-tooling-highlights&quot;&gt;&lt;/a&gt;Released Tooling Highlights&lt;/h3&gt;
      &lt;div class=&quot;sect3&quot;&gt;
      &lt;h4 id=&quot;business-process-and-rules-development&quot;&gt;&lt;a class=&quot;anchor&quot; href=&quot;https://tools.jboss.org/blog/news.atom#business-process-and-rules-development&quot;&gt;&lt;/a&gt;Business Process and Rules Development&lt;/h4&gt;
      &lt;div class=&quot;sect4&quot;&gt;
      &lt;h5 id=&quot;bpmn2-modeler-known-issues&quot;&gt;&lt;a class=&quot;anchor&quot; href=&quot;https://tools.jboss.org/blog/news.atom#bpmn2-modeler-known-issues&quot;&gt;&lt;/a&gt;BPMN2 Modeler Known Issues&lt;/h5&gt;
      &lt;div class=&quot;paragraph&quot;&gt;
      &lt;p&gt;See the &lt;a href=&quot;https://access.redhat.com/documentation/en-us/red_hat_codeready_studio_integration_stack/12.11/html/12.11.0_release_notes_and_known_issues/known_issues#bpmn2_1_5_1_final_2&quot;&gt;BPMN2 1.5.1.Final Known Issues Section&lt;/a&gt; of the Integration Stack 12.11.0.GA release notes.&lt;/p&gt;
      &lt;/div&gt;
      &lt;/div&gt;
      &lt;div class=&quot;sect4&quot;&gt;
      &lt;h5 id=&quot;drools-jbpm6-known-issues&quot;&gt;&lt;a class=&quot;anchor&quot; href=&quot;https://tools.jboss.org/blog/news.atom#drools-jbpm6-known-issues&quot;&gt;&lt;/a&gt;Drools/jBPM6 Known Issues&lt;/h5&gt;
      &lt;div class=&quot;paragraph&quot;&gt;
      &lt;p&gt;See the &lt;a href=&quot;https://access.redhat.com/documentation/en-us/red_hat_codeready_studio_integration_stack/12.11/html/12.11.0_release_notes_and_known_issues/resolved_issues#drools_7_21_0_final&quot;&gt;Drools 7.21.0.Final Known Issues Section&lt;/a&gt; of the Integration Stack 12.11.0.GA release notes.&lt;/p&gt;
      &lt;/div&gt;
      &lt;/div&gt;
      &lt;/div&gt;
      &lt;/div&gt;
      &lt;/div&gt;
      &lt;/div&gt;
      &lt;div class=&quot;sect1&quot;&gt;
      &lt;h2 id=&quot;what-s-an-integration-stack&quot;&gt;&lt;a class=&quot;anchor&quot; href=&quot;https://tools.jboss.org/blog/news.atom#what-s-an-integration-stack&quot;&gt;&lt;/a&gt;What’s an Integration Stack?&lt;/h2&gt;
      &lt;div class=&quot;sectionbody&quot;&gt;
      &lt;div class=&quot;paragraph&quot;&gt;
      &lt;p&gt;Red Hat CodeReady Studio Integration Stack is a set of Eclipse-based development tools. It further enhances the IDE functionality provided by Developer Studio, with plug-ins specifically for use when developing for other Red Hat products.  It’s where BRMS tooling is aggregated.  The following frameworks are supported:&lt;/p&gt;
      &lt;/div&gt;
      &lt;div class=&quot;sect2&quot;&gt;
      &lt;h3 id=&quot;red-hat-business-process-and-rules-development&quot;&gt;&lt;a class=&quot;anchor&quot; href=&quot;https://tools.jboss.org/blog/news.atom#red-hat-business-process-and-rules-development&quot;&gt;&lt;/a&gt;Red Hat Business Process and Rules Development&lt;/h3&gt;
      &lt;div class=&quot;paragraph&quot;&gt;
      &lt;p&gt;Business Process and Rules Development plug-ins provide design, debug and testing tooling for developing business processes for Red Hat BRMS and Red Hat BPM Suite.&lt;/p&gt;
      &lt;/div&gt;
      &lt;div class=&quot;ulist&quot;&gt;
      &lt;ul&gt;
      &lt;li&gt;
      &lt;p&gt;&lt;a href=&quot;https://tools.jboss.org/features/bpel.html&quot;&gt;BPEL Designer&lt;/a&gt; - Orchestrating your business processes.&lt;/p&gt;
      &lt;/li&gt;
      &lt;li&gt;
      &lt;p&gt;&lt;a href=&quot;https://tools.jboss.org/features/bpmn2.html&quot;&gt;BPMN2 Modeler&lt;/a&gt; - A graphical modeling tool which allows creation and editing of Business Process Modeling Notation diagrams using graphiti.&lt;/p&gt;
      &lt;/li&gt;
      &lt;li&gt;
      &lt;p&gt;&lt;a href=&quot;https://tools.jboss.org/features/drools.html&quot;&gt;Drools&lt;/a&gt; - A Business Logic integration Platform which provides a unified and integrated platform for Rules, Workflow and Event Processing including KIE.&lt;/p&gt;
      &lt;/li&gt;
      &lt;li&gt;
      &lt;p&gt;&lt;a href=&quot;https://tools.jboss.org/features/jbpm.html&quot;&gt;jBPM&lt;/a&gt; - A flexible Business Process Management (BPM) suite.&lt;/p&gt;
      &lt;/li&gt;
      &lt;/ul&gt;
      &lt;/div&gt;
      &lt;/div&gt;
      &lt;div class=&quot;sect2&quot;&gt;
      &lt;h3 id=&quot;the-jboss-tools-website-features-tab&quot;&gt;&lt;a class=&quot;anchor&quot; href=&quot;https://tools.jboss.org/blog/news.atom#the-jboss-tools-website-features-tab&quot;&gt;&lt;/a&gt;The JBoss Tools website features tab&lt;/h3&gt;
      &lt;div class=&quot;paragraph&quot;&gt;
      &lt;p&gt;Don’t miss the &lt;a href=&quot;https://tools.jboss.org/features&quot;&gt;Features tab&lt;/a&gt; for up to date information on your favorite Integration Stack components.&lt;/p&gt;
      &lt;/div&gt;
      &lt;/div&gt;
      &lt;/div&gt;
      &lt;/div&gt;
      &lt;div class=&quot;sect1&quot;&gt;
      &lt;h2 id=&quot;installation&quot;&gt;&lt;a class=&quot;anchor&quot; href=&quot;https://tools.jboss.org/blog/news.atom#installation&quot;&gt;&lt;/a&gt;Installation&lt;/h2&gt;
      &lt;div class=&quot;sectionbody&quot;&gt;
      &lt;div class=&quot;paragraph&quot;&gt;
      &lt;p&gt;The easiest way to install the Integration Stack components is through the &lt;a href=&quot;https://access.redhat.com/jbossnetwork/restricted/listSoftware.html?downloadType=distributions&amp;amp;product=jbossdeveloperstudio&amp;amp;version=12.11.0&quot;&gt;stand-alone installer&lt;/a&gt; or through our &lt;a href=&quot;http://tools.jboss.org/downloads/overview.html&quot;&gt;JBoss Tools Download Site&lt;/a&gt;.&lt;/p&gt;
      &lt;/div&gt;
      &lt;div class=&quot;paragraph&quot;&gt;
      &lt;p&gt;For a complete set of Integration Stack installation instructions, see &lt;a href=&quot;https://access.redhat.com/documentation/en-us/red_hat_jboss_developer_studio_integration_stack/12.0/html/installation_guide/&quot;&gt;Integration Stack Installation Guide&lt;/a&gt;&lt;/p&gt;
      &lt;/div&gt;
      &lt;div class=&quot;paragraph&quot;&gt;
      &lt;p&gt;&lt;em&gt;Let us know how it goes!&lt;/em&gt;&lt;/p&gt;
      &lt;/div&gt;
      &lt;div class=&quot;paragraph&quot;&gt;
      &lt;p&gt;Paul Leacu.&lt;/p&gt;
      &lt;/div&gt;
      &lt;/div&gt;
      &lt;/div&gt;&lt;/div&gt;</description>
	<pubDate>Wed, 06 Jul 2022 12:07:23 +0000</pubDate>
</item>
<item>
	<title>JBoss Tools Team: JBoss Tools 4.9.0.AM3 for Eclipse 2018-09 M2</title>
	<guid isPermaLink="true">https://tools.jboss.org/blog/4.9.0.am3.html</guid>
	<link>https://tools.jboss.org/blog/4.9.0.am3.html</link>
	<description>&lt;div&gt;&lt;div id=&quot;preamble&quot;&gt;
      &lt;div class=&quot;sectionbody&quot;&gt;
      &lt;div class=&quot;paragraph&quot;&gt;
      &lt;p&gt;Happy to announce 4.9.0.AM3 (Developer Milestone 3) build for Eclipse 2018-09 M2.&lt;/p&gt;
      &lt;/div&gt;
      &lt;div class=&quot;paragraph&quot;&gt;
      &lt;p&gt;Downloads available at &lt;a href=&quot;https://tools.jboss.org/downloads/jbosstools/2018-09/4.9.0.AM3.html&quot;&gt;JBoss Tools 4.9.0 AM3&lt;/a&gt;.&lt;/p&gt;
      &lt;/div&gt;
      &lt;/div&gt;
      &lt;/div&gt;
      &lt;div class=&quot;sect1&quot;&gt;
      &lt;h2 id=&quot;what-is-new&quot;&gt;&lt;a class=&quot;anchor&quot; href=&quot;https://tools.jboss.org/blog/news.atom#what-is-new&quot;&gt;&lt;/a&gt;What is New?&lt;/h2&gt;
      &lt;div class=&quot;sectionbody&quot;&gt;
      &lt;div class=&quot;paragraph&quot;&gt;
      &lt;p&gt;Full info is at &lt;a href=&quot;https://tools.jboss.org/documentation/whatsnew/jbosstools/4.9.0.AM3.html&quot;&gt;this page&lt;/a&gt;. Some highlights are below.&lt;/p&gt;
      &lt;/div&gt;
      &lt;div class=&quot;sect2&quot;&gt;
      &lt;h3 id=&quot;general&quot;&gt;&lt;a class=&quot;anchor&quot; href=&quot;https://tools.jboss.org/blog/news.atom#general&quot;&gt;&lt;/a&gt;General&lt;/h3&gt;
      
      &lt;/div&gt;
      &lt;div class=&quot;sect2&quot;&gt;
      &lt;h3 id=&quot;server-tools&quot;&gt;&lt;a class=&quot;anchor&quot; href=&quot;https://tools.jboss.org/blog/news.atom#server-tools&quot;&gt;&lt;/a&gt;Server Tools&lt;/h3&gt;
      &lt;div class=&quot;sect3&quot;&gt;
      &lt;h4 id=&quot;wildfly-14-server-adapter&quot;&gt;&lt;a class=&quot;anchor&quot; href=&quot;https://tools.jboss.org/blog/news.atom#wildfly-14-server-adapter&quot;&gt;&lt;/a&gt;Wildfly 14 Server Adapter&lt;/h4&gt;
      &lt;div class=&quot;paragraph&quot;&gt;
      &lt;p&gt;A server adapter has been added to work with Wildfly 14. It adds support for Java EE 8.&lt;/p&gt;
      &lt;/div&gt;
      &lt;/div&gt;
      &lt;/div&gt;
      &lt;div class=&quot;sect2&quot;&gt;
      &lt;h3 id=&quot;forge-tools&quot;&gt;&lt;a class=&quot;anchor&quot; href=&quot;https://tools.jboss.org/blog/news.atom#forge-tools&quot;&gt;&lt;/a&gt;Forge Tools&lt;/h3&gt;
      &lt;div class=&quot;sect3&quot;&gt;
      &lt;h4 id=&quot;forge-runtime-updated-to-3-9-1-final&quot;&gt;&lt;a class=&quot;anchor&quot; href=&quot;https://tools.jboss.org/blog/news.atom#forge-runtime-updated-to-3-9-1-final&quot;&gt;&lt;/a&gt;Forge Runtime updated to 3.9.1.Final&lt;/h4&gt;
      &lt;div class=&quot;paragraph&quot;&gt;
      &lt;p&gt;The included Forge runtime is now 3.9.1.Final. Read the official announcement &lt;a href=&quot;https://forge.jboss.org/news/jboss-forge-3.9.1.final-is-here&quot;&gt;here&lt;/a&gt;.&lt;/p&gt;
      &lt;/div&gt;
      &lt;/div&gt;
      &lt;/div&gt;
      &lt;div class=&quot;sect2&quot;&gt;
      &lt;h3 id=&quot;fuse-tooling&quot;&gt;&lt;a class=&quot;anchor&quot; href=&quot;https://tools.jboss.org/blog/news.atom#fuse-tooling&quot;&gt;&lt;/a&gt;Fuse Tooling&lt;/h3&gt;
      &lt;div class=&quot;sect3&quot;&gt;
      &lt;h4 id=&quot;know-issues&quot;&gt;&lt;a class=&quot;anchor&quot; href=&quot;https://tools.jboss.org/blog/news.atom#know-issues&quot;&gt;&lt;/a&gt;Know issues&lt;/h4&gt;
      &lt;div class=&quot;paragraph&quot;&gt;
      &lt;p&gt;A regression has been introduced touching all functionalities using Jaxb. It includes:&lt;/p&gt;
      &lt;/div&gt;
      &lt;div class=&quot;ulist&quot;&gt;
      &lt;ul&gt;
      &lt;li&gt;
      &lt;p&gt;Variable content display in debug&lt;/p&gt;
      &lt;/li&gt;
      &lt;li&gt;
      &lt;p&gt;Data Transformation wizard&lt;/p&gt;
      &lt;/li&gt;
      &lt;li&gt;
      &lt;p&gt;Tracing Camel route via Jolokia Connection&lt;/p&gt;
      &lt;/li&gt;
      &lt;/ul&gt;
      &lt;/div&gt;
      &lt;div class=&quot;paragraph&quot;&gt;
      &lt;p&gt;It may affect other functionalities. In this case, you will have this kind of error in log:&lt;/p&gt;
      &lt;/div&gt;
      &lt;div class=&quot;literalblock&quot;&gt;
      &lt;div class=&quot;content&quot;&gt;
      &lt;pre&gt;java.lang.NullPointerException
          at javax.xml.bind.ContextFinder.handleClassCastException(ContextFinder.java:95)&lt;/pre&gt;
      &lt;/div&gt;
      &lt;/div&gt;
      &lt;div class=&quot;paragraph&quot;&gt;
      &lt;p&gt;Please note that it has been already fixed on &lt;a href=&quot;http://tools.jboss.org/downloads/jbosstools/2018-09/4.9.x.Nightly.html&quot;&gt;nightly build&lt;/a&gt;&lt;/p&gt;
      &lt;/div&gt;
      &lt;div class=&quot;paragraph&quot;&gt;
      &lt;p&gt;Enjoy!&lt;/p&gt;
      &lt;/div&gt;
      &lt;div class=&quot;paragraph&quot;&gt;
      &lt;p&gt;Jeff Maury&lt;/p&gt;
      &lt;/div&gt;
      &lt;/div&gt;
      &lt;/div&gt;
      &lt;/div&gt;
      &lt;/div&gt;&lt;/div&gt;</description>
	<pubDate>Wed, 06 Jul 2022 12:07:23 +0000</pubDate>
</item>
<item>
	<title>JBoss Tools Team: JBoss Tools 4.9.0.AM2 for Eclipse 2018-09 M2</title>
	<guid isPermaLink="true">https://tools.jboss.org/blog/4.9.0.am2.html</guid>
	<link>https://tools.jboss.org/blog/4.9.0.am2.html</link>
	<description>&lt;div&gt;&lt;div id=&quot;preamble&quot;&gt;
      &lt;div class=&quot;sectionbody&quot;&gt;
      &lt;div class=&quot;paragraph&quot;&gt;
      &lt;p&gt;Happy to announce 4.9.0.AM2 (Developer Milestone 2) build for Eclipse 2018-09 M2.&lt;/p&gt;
      &lt;/div&gt;
      &lt;div class=&quot;paragraph&quot;&gt;
      &lt;p&gt;Downloads available at &lt;a href=&quot;https://tools.jboss.org/downloads/jbosstools/2018-09/4.9.0.AM2.html&quot;&gt;JBoss Tools 4.9.0 AM2&lt;/a&gt;.&lt;/p&gt;
      &lt;/div&gt;
      &lt;/div&gt;
      &lt;/div&gt;
      &lt;div class=&quot;sect1&quot;&gt;
      &lt;h2 id=&quot;what-is-new&quot;&gt;&lt;a class=&quot;anchor&quot; href=&quot;https://tools.jboss.org/blog/news.atom#what-is-new&quot;&gt;&lt;/a&gt;What is New?&lt;/h2&gt;
      &lt;div class=&quot;sectionbody&quot;&gt;
      &lt;div class=&quot;paragraph&quot;&gt;
      &lt;p&gt;Full info is at &lt;a href=&quot;https://tools.jboss.org/documentation/whatsnew/jbosstools/4.9.0.AM2.html&quot;&gt;this page&lt;/a&gt;. Some highlights are below.&lt;/p&gt;
      &lt;/div&gt;
      &lt;div class=&quot;sect2&quot;&gt;
      &lt;h3 id=&quot;general&quot;&gt;&lt;a class=&quot;anchor&quot; href=&quot;https://tools.jboss.org/blog/news.atom#general&quot;&gt;&lt;/a&gt;General&lt;/h3&gt;
      &lt;div class=&quot;sect3&quot;&gt;
      &lt;h4 id=&quot;eclipse-2018-09&quot;&gt;&lt;a class=&quot;anchor&quot; href=&quot;https://tools.jboss.org/blog/news.atom#eclipse-2018-09&quot;&gt;&lt;/a&gt;Eclipse 2018-09&lt;/h4&gt;
      &lt;div class=&quot;paragraph&quot;&gt;
      &lt;p&gt;JBoss Tools is now targeting Eclipse 2018-09 M2.&lt;/p&gt;
      &lt;/div&gt;
      &lt;/div&gt;
      &lt;/div&gt;
      &lt;div class=&quot;sect2&quot;&gt;
      &lt;h3 id=&quot;fuse-tooling&quot;&gt;&lt;a class=&quot;anchor&quot; href=&quot;https://tools.jboss.org/blog/news.atom#fuse-tooling&quot;&gt;&lt;/a&gt;Fuse Tooling&lt;/h3&gt;
      &lt;div class=&quot;sect3&quot;&gt;
      &lt;h4 id=&quot;wsdl-to-camel-rest-dsl-improvements&quot;&gt;&lt;a class=&quot;anchor&quot; href=&quot;https://tools.jboss.org/blog/news.atom#wsdl-to-camel-rest-dsl-improvements&quot;&gt;&lt;/a&gt;WSDL to Camel REST DSL improvements&lt;/h4&gt;
      &lt;div class=&quot;paragraph&quot;&gt;
      &lt;p&gt;The version of the library used to generate Camel REST DSL from WSDl files has been updated. It now covers more types of WSDL files. See &lt;a class=&quot;bare&quot; href=&quot;https://github.com/jboss-fuse/wsdl2rest/milestone/3?closed=1&quot;&gt;https://github.com/jboss-fuse/wsdl2rest/milestone/3?closed=1&lt;/a&gt; for the list of improvements.&lt;/p&gt;
      &lt;/div&gt;
      &lt;/div&gt;
      &lt;div class=&quot;sect3&quot;&gt;
      &lt;h4 id=&quot;rest-editor-tab-improvements&quot;&gt;&lt;a class=&quot;anchor&quot; href=&quot;https://tools.jboss.org/blog/news.atom#rest-editor-tab-improvements&quot;&gt;&lt;/a&gt;REST Editor tab improvements&lt;/h4&gt;
      &lt;div class=&quot;paragraph&quot;&gt;
      &lt;p&gt;In the last milestone we began adding editing capabilities to the read-only REST tab to the route editor we added in the previous release. Those efforts have continued and we now have a fully editable REST tab.&lt;/p&gt;
      &lt;/div&gt;
      &lt;div class=&quot;imageblock&quot;&gt;
      &lt;div class=&quot;content&quot;&gt;
      &lt;img alt=&quot;Fully Editable REST Editor&quot; src=&quot;https://tools.jboss.org/documentation/whatsnew/fusetools/images/fuse-editor-rest-tab-properties-11.1.0.am2.jpg&quot; /&gt;
      &lt;/div&gt;
      &lt;/div&gt;
      &lt;div class=&quot;paragraph&quot;&gt;
      &lt;p&gt;You can now:&lt;/p&gt;
      &lt;/div&gt;
      &lt;div class=&quot;ulist&quot;&gt;
      &lt;ul&gt;
      &lt;li&gt;
      &lt;p&gt;Create and delete REST Configurations&lt;/p&gt;
      &lt;/li&gt;
      &lt;li&gt;
      &lt;p&gt;Create and delete new REST Elements&lt;/p&gt;
      &lt;/li&gt;
      &lt;li&gt;
      &lt;p&gt;Create and delete new REST Operations&lt;/p&gt;
      &lt;/li&gt;
      &lt;li&gt;
      &lt;p&gt;Edit properties for a selected REST Element in the Properties view&lt;/p&gt;
      &lt;/li&gt;
      &lt;li&gt;
      &lt;p&gt;Edit properties for a selected REST Operation in the Properties view&lt;/p&gt;
      &lt;/li&gt;
      &lt;/ul&gt;
      &lt;/div&gt;
      &lt;div class=&quot;paragraph&quot;&gt;
      &lt;p&gt;In addition, weâ€™ve improved the look and feel by fixing the scrolling capabilities of the REST Element and REST Operations lists.&lt;/p&gt;
      &lt;/div&gt;
      &lt;div class=&quot;paragraph&quot;&gt;
      &lt;p&gt;Enjoy!&lt;/p&gt;
      &lt;/div&gt;
      &lt;div class=&quot;paragraph&quot;&gt;
      &lt;p&gt;Jeff Maury&lt;/p&gt;
      &lt;/div&gt;
      &lt;/div&gt;
      &lt;/div&gt;
      &lt;/div&gt;
      &lt;/div&gt;&lt;/div&gt;</description>
	<pubDate>Wed, 06 Jul 2022 12:07:23 +0000</pubDate>
</item>
<item>
	<title>JBoss Tools Team: JBoss Tools 4.6.0.AM3 for Eclipse Photon.0.RC3</title>
	<guid isPermaLink="true">https://tools.jboss.org/blog/4.6.0.am3-for-photon.0.rc3.html</guid>
	<link>https://tools.jboss.org/blog/4.6.0.am3-for-photon.0.rc3.html</link>
	<description>&lt;div&gt;&lt;div id=&quot;preamble&quot;&gt;
      &lt;div class=&quot;sectionbody&quot;&gt;
      &lt;div class=&quot;paragraph&quot;&gt;
      &lt;p&gt;Happy to announce 4.6.0.AM3 (Developer Milestone 3) build for Eclipse Photon.0.RC3.&lt;/p&gt;
      &lt;/div&gt;
      &lt;div class=&quot;paragraph&quot;&gt;
      &lt;p&gt;Downloads available at &lt;a href=&quot;https://tools.jboss.org/downloads/jbosstools/photon/4.6.0.AM3.html&quot;&gt;JBoss Tools 4.6.0 AM3&lt;/a&gt;.&lt;/p&gt;
      &lt;/div&gt;
      &lt;/div&gt;
      &lt;/div&gt;
      &lt;div class=&quot;sect1&quot;&gt;
      &lt;h2 id=&quot;what-is-new&quot;&gt;&lt;a class=&quot;anchor&quot; href=&quot;https://tools.jboss.org/blog/news.atom#what-is-new&quot;&gt;&lt;/a&gt;What is New?&lt;/h2&gt;
      &lt;div class=&quot;sectionbody&quot;&gt;
      &lt;div class=&quot;paragraph&quot;&gt;
      &lt;p&gt;Full info is at &lt;a href=&quot;https://tools.jboss.org/documentation/whatsnew/jbosstools/4.6.0.AM3.html&quot;&gt;this page&lt;/a&gt;. Some highlights are below.&lt;/p&gt;
      &lt;/div&gt;
      &lt;div class=&quot;sect2&quot;&gt;
      &lt;h3 id=&quot;general&quot;&gt;&lt;a class=&quot;anchor&quot; href=&quot;https://tools.jboss.org/blog/news.atom#general&quot;&gt;&lt;/a&gt;General&lt;/h3&gt;
      &lt;div class=&quot;sect3&quot;&gt;
      &lt;h4 id=&quot;eclipse-photon&quot;&gt;&lt;a class=&quot;anchor&quot; href=&quot;https://tools.jboss.org/blog/news.atom#eclipse-photon&quot;&gt;&lt;/a&gt;Eclipse Photon&lt;/h4&gt;
      &lt;div class=&quot;paragraph&quot;&gt;
      &lt;p&gt;JBoss Tools is now targeting Eclipse Photon RC3.&lt;/p&gt;
      &lt;/div&gt;
      &lt;/div&gt;
      &lt;/div&gt;
      &lt;div class=&quot;sect2&quot;&gt;
      &lt;h3 id=&quot;fuse-tooling&quot;&gt;&lt;a class=&quot;anchor&quot; href=&quot;https://tools.jboss.org/blog/news.atom#fuse-tooling&quot;&gt;&lt;/a&gt;Fuse Tooling&lt;/h3&gt;
      
      &lt;/div&gt;
      &lt;/div&gt;
      &lt;/div&gt;
      &lt;div class=&quot;sect1&quot;&gt;
      &lt;h2 id=&quot;camel-uri-completion-with-xml-dsl&quot;&gt;&lt;a class=&quot;anchor&quot; href=&quot;https://tools.jboss.org/blog/news.atom#camel-uri-completion-with-xml-dsl&quot;&gt;&lt;/a&gt;Camel URI completion with XML DSL&lt;/h2&gt;
      &lt;div class=&quot;sectionbody&quot;&gt;
      &lt;div class=&quot;paragraph&quot;&gt;
      &lt;p&gt;As announced &lt;a href=&quot;https://developers.redhat.com/blog/2018/01/31/apache-camel-uri-completion-eclipse-xml-editor/&quot;&gt;here&lt;/a&gt;, it was already possible to have Camel URI completion with XML DSL in the source tab of the Camel Route editor by installing the &lt;a href=&quot;https://github.com/camel-tooling/camel-lsp-client-eclipse&quot;&gt;Language Support for Apache Camel&lt;/a&gt; in your IDE.&lt;/p&gt;
      &lt;/div&gt;
      &lt;div class=&quot;paragraph&quot;&gt;
      &lt;p&gt;This feature is now installed by default with Fuse Tooling!&lt;/p&gt;
      &lt;/div&gt;
      &lt;div class=&quot;imageblock&quot;&gt;
      &lt;div class=&quot;content&quot;&gt;
      &lt;img alt=&quot;Camel URI completion in source tab of Camel Editor&quot; src=&quot;https://tools.jboss.org/documentation/whatsnew/fusetools/images/completionSourceEditor.gif&quot; /&gt;
      &lt;/div&gt;
      &lt;/div&gt;
      &lt;div class=&quot;paragraph&quot;&gt;
      &lt;p&gt;Now you have the choice to use the properties view with UI help to configure Camel components or to use the source editor and benefit from completion features. It all depends on your development preferences!&lt;/p&gt;
      &lt;/div&gt;
      &lt;div class=&quot;sect2&quot;&gt;
      &lt;h3 id=&quot;webservices-tooling&quot;&gt;&lt;a class=&quot;anchor&quot; href=&quot;https://tools.jboss.org/blog/news.atom#webservices-tooling&quot;&gt;&lt;/a&gt;Webservices Tooling&lt;/h3&gt;
      &lt;div class=&quot;sect3&quot;&gt;
      &lt;h4 id=&quot;jax-rs-2-1-support&quot;&gt;&lt;a class=&quot;anchor&quot; href=&quot;https://tools.jboss.org/blog/news.atom#jax-rs-2-1-support&quot;&gt;&lt;/a&gt;JAX-RS 2.1 Support&lt;/h4&gt;
      &lt;div class=&quot;paragraph&quot;&gt;
      &lt;p&gt;JAX-RS 2.1 is part of JavaEE8 and JBoss Tools now provides you with support for this update of the specification.&lt;/p&gt;
      &lt;/div&gt;
      &lt;div class=&quot;sect4&quot;&gt;
      &lt;h5 id=&quot;server-side-events&quot;&gt;&lt;a class=&quot;anchor&quot; href=&quot;https://tools.jboss.org/blog/news.atom#server-side-events&quot;&gt;&lt;/a&gt;Server side events&lt;/h5&gt;
      &lt;div class=&quot;paragraph&quot;&gt;
      &lt;p&gt;JAX-RS 2.1 brought support for server side events. The &lt;code&gt;Sse&lt;/code&gt; and &lt;code&gt;SseEventSink&lt;/code&gt; resources can now be injected into
      method arguments thanks to the @Context annotation.&lt;/p&gt;
      &lt;/div&gt;
      &lt;div class=&quot;paragraph&quot;&gt;
      &lt;p&gt;Enjoy!&lt;/p&gt;
      &lt;/div&gt;
      &lt;div class=&quot;paragraph&quot;&gt;
      &lt;p&gt;Jeff Maury&lt;/p&gt;
      &lt;/div&gt;
      &lt;/div&gt;
      &lt;/div&gt;
      &lt;/div&gt;
      &lt;/div&gt;
      &lt;/div&gt;&lt;/div&gt;</description>
	<pubDate>Wed, 06 Jul 2022 12:07:23 +0000</pubDate>
</item>
<item>
	<title>JBoss Tools Team: JBoss Tools 4.6.0.AM2 for Eclipse Photon.0.M7</title>
	<guid isPermaLink="true">https://tools.jboss.org/blog/4.6.0.am2-for-photon.0.m7.html</guid>
	<link>https://tools.jboss.org/blog/4.6.0.am2-for-photon.0.m7.html</link>
	<description>&lt;div&gt;&lt;div id=&quot;preamble&quot;&gt;
      &lt;div class=&quot;sectionbody&quot;&gt;
      &lt;div class=&quot;paragraph&quot;&gt;
      &lt;p&gt;Happy to announce 4.6.0.AM2 (Developer Milestone 2) build for Eclipse Photon.0.M7.&lt;/p&gt;
      &lt;/div&gt;
      &lt;div class=&quot;paragraph&quot;&gt;
      &lt;p&gt;Downloads available at &lt;a href=&quot;https://tools.jboss.org/downloads/jbosstools/photon/4.6.0.AM2.html&quot;&gt;JBoss Tools 4.6.0 AM2&lt;/a&gt;.&lt;/p&gt;
      &lt;/div&gt;
      &lt;/div&gt;
      &lt;/div&gt;
      &lt;div class=&quot;sect1&quot;&gt;
      &lt;h2 id=&quot;what-is-new&quot;&gt;&lt;a class=&quot;anchor&quot; href=&quot;https://tools.jboss.org/blog/news.atom#what-is-new&quot;&gt;&lt;/a&gt;What is New?&lt;/h2&gt;
      &lt;div class=&quot;sectionbody&quot;&gt;
      &lt;div class=&quot;paragraph&quot;&gt;
      &lt;p&gt;Full info is at &lt;a href=&quot;https://tools.jboss.org/documentation/whatsnew/jbosstools/4.6.0.AM2.html&quot;&gt;this page&lt;/a&gt;. Some highlights are below.&lt;/p&gt;
      &lt;/div&gt;
      &lt;div class=&quot;sect2&quot;&gt;
      &lt;h3 id=&quot;general&quot;&gt;&lt;a class=&quot;anchor&quot; href=&quot;https://tools.jboss.org/blog/news.atom#general&quot;&gt;&lt;/a&gt;General&lt;/h3&gt;
      &lt;div class=&quot;sect3&quot;&gt;
      &lt;h4 id=&quot;eclipse-photon&quot;&gt;&lt;a class=&quot;anchor&quot; href=&quot;https://tools.jboss.org/blog/news.atom#eclipse-photon&quot;&gt;&lt;/a&gt;Eclipse Photon&lt;/h4&gt;
      &lt;div class=&quot;paragraph&quot;&gt;
      &lt;p&gt;JBoss Tools is now targeting Eclipse Photon M7.&lt;/p&gt;
      &lt;/div&gt;
      &lt;/div&gt;
      &lt;/div&gt;
      &lt;div class=&quot;sect2&quot;&gt;
      &lt;h3 id=&quot;openshift&quot;&gt;&lt;a class=&quot;anchor&quot; href=&quot;https://tools.jboss.org/blog/news.atom#openshift&quot;&gt;&lt;/a&gt;OpenShift&lt;/h3&gt;
      &lt;div class=&quot;sect3&quot;&gt;
      &lt;h4 id=&quot;enhanced-spring-boot-support-for-server-adapter&quot;&gt;&lt;a class=&quot;anchor&quot; href=&quot;https://tools.jboss.org/blog/news.atom#enhanced-spring-boot-support-for-server-adapter&quot;&gt;&lt;/a&gt;Enhanced Spring Boot support for server adapter&lt;/h4&gt;
      &lt;div class=&quot;paragraph&quot;&gt;
      &lt;p&gt;Spring Boot runtime was already supported by the OpenShift server adapter. However, it has one major limitation: files and
      resources were synchronized between the local workstation and the remote pod(s) only for the main project. If your Spring Boot
      application had dependencies that were present in the local workspace, any change to a file or resource of one of these dependencies
      was not handled. This is not true anymore.&lt;/p&gt;
      &lt;/div&gt;
      &lt;/div&gt;
      &lt;/div&gt;
      &lt;div class=&quot;sect2&quot;&gt;
      &lt;h3 id=&quot;fuse-tooling&quot;&gt;&lt;a class=&quot;anchor&quot; href=&quot;https://tools.jboss.org/blog/news.atom#fuse-tooling&quot;&gt;&lt;/a&gt;Fuse Tooling&lt;/h3&gt;
      &lt;div class=&quot;sect3&quot;&gt;
      &lt;h4 id=&quot;camel-rest-dsl-from-wsdl-wizard&quot;&gt;&lt;a class=&quot;anchor&quot; href=&quot;https://tools.jboss.org/blog/news.atom#camel-rest-dsl-from-wsdl-wizard&quot;&gt;&lt;/a&gt;Camel Rest DSL from WSDL wizard&lt;/h4&gt;
      &lt;div class=&quot;paragraph&quot;&gt;
      &lt;p&gt;There is a new &lt;em&gt;&quot;Camel Rest DSL from WSDL&quot;&lt;/em&gt; wizard. This wizard wraps the &lt;a href=&quot;https://github.com/jboss-fuse/wsdl2rest&quot;&gt;wsdl2rest tool&lt;/a&gt; now included with the Fuse 7 distribution, which
      takes a WSDL file for a SOAP-based (JAX-WS) web service and generates a combination of CXF-generated code and a Camel REST DSL route to make it accessible using REST operations.&lt;/p&gt;
      &lt;/div&gt;
      &lt;div class=&quot;paragraph&quot;&gt;
      &lt;p&gt;To start, you need an existing Fuse Integration project in your workspace and access to the WSDL for the SOAP service. Then use
      &lt;em&gt;File→New→Other…​&lt;/em&gt; and select &lt;em&gt;Red Hat Fuse→Camel Rest DSL from WSDL&lt;/em&gt; wizard.&lt;/p&gt;
      &lt;/div&gt;
      &lt;div class=&quot;paragraph&quot;&gt;
      &lt;p&gt;On the first page of the wizard, select your WSDL and the Fuse Integration project in which to generate the Java code and Camel configuration.&lt;/p&gt;
      &lt;/div&gt;
      &lt;div class=&quot;imageblock&quot;&gt;
      &lt;div class=&quot;content&quot;&gt;
      &lt;img alt=&quot;SOAP to REST Wizard page 1&quot; src=&quot;https://tools.jboss.org/documentation/whatsnew/fusetools/images/wsdl2rest-wizard-page-one.jpg&quot; /&gt;
      &lt;/div&gt;
      &lt;/div&gt;
      &lt;div class=&quot;paragraph&quot;&gt;
      &lt;p&gt;On the second page, you can customize the Java folder path for your generated classes, the folder for the generated Camel file, plus any customization for the SOAP service
      address and destination REST service address.&lt;/p&gt;
      &lt;/div&gt;
      &lt;div class=&quot;imageblock&quot;&gt;
      &lt;div class=&quot;content&quot;&gt;
      &lt;img alt=&quot;SOAP to REST Wizard page 2&quot; src=&quot;https://tools.jboss.org/documentation/whatsnew/fusetools//images/wsdl2rest-wizard-page-two.jpg&quot; /&gt;
      &lt;/div&gt;
      &lt;/div&gt;
      &lt;div class=&quot;paragraph&quot;&gt;
      &lt;p&gt;Click &lt;em&gt;Finish&lt;/em&gt; and the new Camel configuration and associated Java code are generated in your project. The wizard determines whether your project is Blueprint,
      Spring, or Spring Boot based, and it creates the corresponding artifacts without requiring any additional input. When the wizard is finished, you can open your
      new Camel file in the Fuse Tooling Route Editor to view what it created.&lt;/p&gt;
      &lt;/div&gt;
      &lt;div class=&quot;imageblock&quot;&gt;
      &lt;div class=&quot;content&quot;&gt;
      &lt;img alt=&quot;Fuse Tooling editor Rest Tab&quot; src=&quot;https://tools.jboss.org/documentation/whatsnew/fusetools//images/fuse-editor-rest-tab-no-properties.jpg&quot; /&gt;
      &lt;/div&gt;
      &lt;/div&gt;
      &lt;div class=&quot;paragraph&quot;&gt;
      &lt;p&gt;That brings us to another new functionality, the REST tab in the Fuse Tooling Route Editor.&lt;/p&gt;
      &lt;/div&gt;
      &lt;/div&gt;
      &lt;div class=&quot;sect3&quot;&gt;
      &lt;h4 id=&quot;camel-editor-rest-tab&quot;&gt;&lt;a class=&quot;anchor&quot; href=&quot;https://tools.jboss.org/blog/news.atom#camel-editor-rest-tab&quot;&gt;&lt;/a&gt;Camel Editor REST tab&lt;/h4&gt;
      &lt;div class=&quot;paragraph&quot;&gt;
      &lt;p&gt;The Fuse Tooling Route Editor provides a new &lt;em&gt;REST&lt;/em&gt; tab. For this release, the contents of this tab is read-only and includes the following information:&lt;/p&gt;
      &lt;/div&gt;
      &lt;div class=&quot;ulist&quot;&gt;
      &lt;ul&gt;
      &lt;li&gt;
      &lt;p&gt;Details for the REST Configuration element including the component (jetty, netty, servlet, etc.), the context path, the port, binding mode (JSON, XML, etc.), and host. There is only one REST Configuration element.&lt;/p&gt;
      &lt;/li&gt;
      &lt;li&gt;
      &lt;p&gt;A list of REST elements that collect REST operations. A configuration can have more than one REST element. Each REST element has an associated property page that displays additional details such as the path and the data it consumes or produces.&lt;/p&gt;
      &lt;/li&gt;
      &lt;/ul&gt;
      &lt;/div&gt;
      &lt;div class=&quot;imageblock&quot;&gt;
      &lt;div class=&quot;content&quot;&gt;
      &lt;img alt=&quot;Fuse Tooling Rest Elements Properties View&quot; src=&quot;https://tools.jboss.org/documentation/whatsnew/fusetools//images/fuse-editor-rest-tab-rest-element-properties.jpg&quot; /&gt;
      &lt;/div&gt;
      &lt;/div&gt;
      &lt;div class=&quot;ulist&quot;&gt;
      &lt;ul&gt;
      &lt;li&gt;
      &lt;p&gt;A list of REST operations for the selected REST element. Each of the operations has an associated property page that provides details such as the URI and output type.&lt;/p&gt;
      &lt;/li&gt;
      &lt;/ul&gt;
      &lt;/div&gt;
      &lt;div class=&quot;imageblock&quot;&gt;
      &lt;div class=&quot;content&quot;&gt;
      &lt;img alt=&quot;Fuse Tooling Rest Operations Properties View&quot; src=&quot;https://tools.jboss.org/documentation/whatsnew/fusetools//images/fuse-editor-rest-tab-rest-operation-properties.jpg&quot; /&gt;
      &lt;/div&gt;
      &lt;/div&gt;
      &lt;div class=&quot;paragraph&quot;&gt;
      &lt;p&gt;For this release, the REST tab is read-only. If you want to edit the REST DSL, use the Route Editor Source tab. When you make changes and save them in the Source tab, the
      REST tab refreshes to show your updates.&lt;/p&gt;
      &lt;/div&gt;
      &lt;div class=&quot;paragraph&quot;&gt;
      &lt;p&gt;Enjoy!&lt;/p&gt;
      &lt;/div&gt;
      &lt;div class=&quot;paragraph&quot;&gt;
      &lt;p&gt;Jeff Maury&lt;/p&gt;
      &lt;/div&gt;
      &lt;/div&gt;
      &lt;/div&gt;
      &lt;/div&gt;
      &lt;/div&gt;&lt;/div&gt;</description>
	<pubDate>Wed, 06 Jul 2022 12:07:23 +0000</pubDate>
</item>
<item>
	<title>JBoss Tools Team: JBoss Tools 4.6.0.AM1 for Eclipse Photon.0.M6</title>
	<guid isPermaLink="true">https://tools.jboss.org/blog/4.6.0.am1-for-photon.0.m6.html</guid>
	<link>https://tools.jboss.org/blog/4.6.0.am1-for-photon.0.m6.html</link>
	<description>&lt;div&gt;&lt;div id=&quot;preamble&quot;&gt;
      &lt;div class=&quot;sectionbody&quot;&gt;
      &lt;div class=&quot;paragraph&quot;&gt;
      &lt;p&gt;Happy to announce 4.6.0.AM1 (Developer Milestone 1) build for Eclipse Photon.0.M6.&lt;/p&gt;
      &lt;/div&gt;
      &lt;div class=&quot;paragraph&quot;&gt;
      &lt;p&gt;Downloads available at &lt;a href=&quot;https://tools.jboss.org/downloads/jbosstools/photon/4.6.0.AM1.html&quot;&gt;JBoss Tools 4.6.0 AM1&lt;/a&gt;.&lt;/p&gt;
      &lt;/div&gt;
      &lt;/div&gt;
      &lt;/div&gt;
      &lt;div class=&quot;sect1&quot;&gt;
      &lt;h2 id=&quot;what-is-new&quot;&gt;&lt;a class=&quot;anchor&quot; href=&quot;https://tools.jboss.org/blog/news.atom#what-is-new&quot;&gt;&lt;/a&gt;What is New?&lt;/h2&gt;
      &lt;div class=&quot;sectionbody&quot;&gt;
      &lt;div class=&quot;paragraph&quot;&gt;
      &lt;p&gt;Full info is at &lt;a href=&quot;https://tools.jboss.org/documentation/whatsnew/jbosstools/4.6.0.AM1.html&quot;&gt;this page&lt;/a&gt;. Some highlights are below.&lt;/p&gt;
      &lt;/div&gt;
      &lt;div class=&quot;sect2&quot;&gt;
      &lt;h3 id=&quot;general&quot;&gt;&lt;a class=&quot;anchor&quot; href=&quot;https://tools.jboss.org/blog/news.atom#general&quot;&gt;&lt;/a&gt;General&lt;/h3&gt;
      &lt;div class=&quot;sect3&quot;&gt;
      &lt;h4 id=&quot;eclipse-photon&quot;&gt;&lt;a class=&quot;anchor&quot; href=&quot;https://tools.jboss.org/blog/news.atom#eclipse-photon&quot;&gt;&lt;/a&gt;Eclipse Photon&lt;/h4&gt;
      &lt;div class=&quot;paragraph&quot;&gt;
      &lt;p&gt;JBoss Tools is now targeting Eclipse Photon M6.&lt;/p&gt;
      &lt;/div&gt;
      &lt;/div&gt;
      &lt;/div&gt;
      &lt;div class=&quot;sect2&quot;&gt;
      &lt;h3 id=&quot;forge-tools&quot;&gt;&lt;a class=&quot;anchor&quot; href=&quot;https://tools.jboss.org/blog/news.atom#forge-tools&quot;&gt;&lt;/a&gt;Forge Tools&lt;/h3&gt;
      &lt;div class=&quot;sect3&quot;&gt;
      &lt;h4 id=&quot;forge-runtime-updated-to-3-9-0-final&quot;&gt;&lt;a class=&quot;anchor&quot; href=&quot;https://tools.jboss.org/blog/news.atom#forge-runtime-updated-to-3-9-0-final&quot;&gt;&lt;/a&gt;Forge Runtime updated to 3.9.0.Final&lt;/h4&gt;
      &lt;div class=&quot;paragraph&quot;&gt;
      &lt;p&gt;The included Forge runtime is now 3.9.0.Final. Read the official announcement &lt;a href=&quot;https://forge.jboss.org/news/jboss-forge-3.9.0.final-is-here&quot;&gt;here&lt;/a&gt;.&lt;/p&gt;
      &lt;/div&gt;
      &lt;div class=&quot;paragraph&quot;&gt;
      &lt;p&gt;Enjoy!&lt;/p&gt;
      &lt;/div&gt;
      &lt;div class=&quot;paragraph&quot;&gt;
      &lt;p&gt;Jeff Maury&lt;/p&gt;
      &lt;/div&gt;
      &lt;/div&gt;
      &lt;/div&gt;
      &lt;/div&gt;
      &lt;/div&gt;&lt;/div&gt;</description>
	<pubDate>Wed, 06 Jul 2022 12:07:23 +0000</pubDate>
</item>
<item>
	<title>JBoss Tools Team: JBoss Tools 4.5.3.AM3 for Eclipse Oxygen.3</title>
	<guid isPermaLink="true">https://tools.jboss.org/blog/4.5.3.am3-for-oxygen.3.html</guid>
	<link>https://tools.jboss.org/blog/4.5.3.am3-for-oxygen.3.html</link>
	<description>&lt;div&gt;&lt;div id=&quot;preamble&quot;&gt;
      &lt;div class=&quot;sectionbody&quot;&gt;
      &lt;div class=&quot;paragraph&quot;&gt;
      &lt;p&gt;Happy to announce 4.5.3.AM3 (Developer Milestone 3) build for Eclipse Oxygen.3.&lt;/p&gt;
      &lt;/div&gt;
      &lt;div class=&quot;paragraph&quot;&gt;
      &lt;p&gt;Downloads available at &lt;a href=&quot;https://tools.jboss.org/downloads/jbosstools/oxygen/4.5.3.AM3.html&quot;&gt;JBoss Tools 4.5.3 AM3&lt;/a&gt;.&lt;/p&gt;
      &lt;/div&gt;
      &lt;/div&gt;
      &lt;/div&gt;
      &lt;div class=&quot;sect1&quot;&gt;
      &lt;h2 id=&quot;what-is-new&quot;&gt;&lt;a class=&quot;anchor&quot; href=&quot;https://tools.jboss.org/blog/news.atom#what-is-new&quot;&gt;&lt;/a&gt;What is New?&lt;/h2&gt;
      &lt;div class=&quot;sectionbody&quot;&gt;
      &lt;div class=&quot;paragraph&quot;&gt;
      &lt;p&gt;Full info is at &lt;a href=&quot;https://tools.jboss.org/documentation/whatsnew/jbosstools/4.5.3.AM3.html&quot;&gt;this page&lt;/a&gt;. Some highlights are below.&lt;/p&gt;
      &lt;/div&gt;
      &lt;div class=&quot;sect2&quot;&gt;
      &lt;h3 id=&quot;openshift&quot;&gt;&lt;a class=&quot;anchor&quot; href=&quot;https://tools.jboss.org/blog/news.atom#openshift&quot;&gt;&lt;/a&gt;OpenShift&lt;/h3&gt;
      &lt;div class=&quot;sect3&quot;&gt;
      &lt;h4 id=&quot;cdk-and-minishift-server-adapter-runtime-download&quot;&gt;&lt;a class=&quot;anchor&quot; href=&quot;https://tools.jboss.org/blog/news.atom#cdk-and-minishift-server-adapter-runtime-download&quot;&gt;&lt;/a&gt;CDK and Minishift Server Adapter runtime download&lt;/h4&gt;
      &lt;div class=&quot;paragraph&quot;&gt;
      &lt;p&gt;When working with both CDK and upstream Minishift, you needed to have previously downloaded the CDK
      or Minishift binary. It is now possible to download the runtime to a specific folder when you create
      the server adapter.&lt;/p&gt;
      &lt;/div&gt;
      &lt;div class=&quot;paragraph&quot;&gt;
      &lt;p&gt;Let’s see an example with the CDK server adapter.&lt;/p&gt;
      &lt;/div&gt;
      &lt;div class=&quot;paragraph&quot;&gt;
      &lt;p&gt;From the &lt;strong&gt;Servers&lt;/strong&gt; view, select the new Server menu item and enter cdk in the filter:&lt;/p&gt;
      &lt;/div&gt;
      &lt;div class=&quot;imageblock&quot;&gt;
      &lt;div class=&quot;content&quot;&gt;
      &lt;img alt=&quot;cdk server adapter wizard&quot; src=&quot;https://tools.jboss.org/documentation/whatsnew/openshift/images/cdk-server-adapter-wizard.png&quot; width=&quot;600&quot; /&gt;
      &lt;/div&gt;
      &lt;/div&gt;
      &lt;div class=&quot;paragraph&quot;&gt;
      &lt;p&gt;Select Red Hat Container Development Kit 3.2+&lt;/p&gt;
      &lt;/div&gt;
      &lt;div class=&quot;imageblock&quot;&gt;
      &lt;div class=&quot;content&quot;&gt;
      &lt;img alt=&quot;cdk server adapter wizard1&quot; src=&quot;https://tools.jboss.org/documentation/whatsnew/openshift/images/cdk-server-adapter-wizard1.png&quot; width=&quot;600&quot; /&gt;
      &lt;/div&gt;
      &lt;/div&gt;
      &lt;div class=&quot;paragraph&quot;&gt;
      &lt;p&gt;Click the &lt;strong&gt;Next&lt;/strong&gt; button:&lt;/p&gt;
      &lt;/div&gt;
      &lt;div class=&quot;imageblock&quot;&gt;
      &lt;div class=&quot;content&quot;&gt;
      &lt;img alt=&quot;cdk server adapter wizard3&quot; src=&quot;https://tools.jboss.org/documentation/whatsnew/openshift/images/cdk-server-adapter-wizard3.png&quot; width=&quot;600&quot; /&gt;
      &lt;/div&gt;
      &lt;/div&gt;
      &lt;div class=&quot;paragraph&quot;&gt;
      &lt;p&gt;In order to download the runtime, click the &lt;strong&gt;Download and install runtime…​&lt;/strong&gt; link:&lt;/p&gt;
      &lt;/div&gt;
      &lt;div class=&quot;imageblock&quot;&gt;
      &lt;div class=&quot;content&quot;&gt;
      &lt;img alt=&quot;cdk server adapter wizard4&quot; src=&quot;https://tools.jboss.org/documentation/whatsnew/openshift/images/cdk-server-adapter-wizard4.png&quot; width=&quot;600&quot; /&gt;
      &lt;/div&gt;
      &lt;/div&gt;
      &lt;div class=&quot;paragraph&quot;&gt;
      &lt;p&gt;Select the version of the runtime you want to download&lt;/p&gt;
      &lt;/div&gt;
      &lt;div class=&quot;imageblock&quot;&gt;
      &lt;div class=&quot;content&quot;&gt;
      &lt;img alt=&quot;cdk server adapter wizard5&quot; src=&quot;https://tools.jboss.org/documentation/whatsnew/openshift/images/cdk-server-adapter-wizard5.png&quot; width=&quot;600&quot; /&gt;
      &lt;/div&gt;
      &lt;/div&gt;
      &lt;div class=&quot;paragraph&quot;&gt;
      &lt;p&gt;Click the &lt;strong&gt;Next&lt;/strong&gt; button:&lt;/p&gt;
      &lt;/div&gt;
      &lt;div class=&quot;imageblock&quot;&gt;
      &lt;div class=&quot;content&quot;&gt;
      &lt;img alt=&quot;cdk server adapter wizard6&quot; src=&quot;https://tools.jboss.org/documentation/whatsnew/openshift/images/cdk-server-adapter-wizard6.png&quot; width=&quot;600&quot; /&gt;
      &lt;/div&gt;
      &lt;/div&gt;
      &lt;div class=&quot;paragraph&quot;&gt;
      &lt;p&gt;You need an account to download the CDK. If you already had configured credentials, select the one you
      want to use. If you didn’t, click the &lt;strong&gt;Add&lt;/strong&gt; button to add your credentials.&lt;/p&gt;
      &lt;/div&gt;
      &lt;div class=&quot;imageblock&quot;&gt;
      &lt;div class=&quot;content&quot;&gt;
      &lt;img alt=&quot;cdk server adapter wizard7&quot; src=&quot;https://tools.jboss.org/documentation/whatsnew/openshift/images/cdk-server-adapter-wizard7.png&quot; width=&quot;600&quot; /&gt;
      &lt;/div&gt;
      &lt;/div&gt;
      &lt;div class=&quot;paragraph&quot;&gt;
      &lt;p&gt;Click the &lt;strong&gt;Next&lt;/strong&gt; button. Your credentials will be validated, and upon success, you must accept
      the license agreement:&lt;/p&gt;
      &lt;/div&gt;
      &lt;div class=&quot;imageblock&quot;&gt;
      &lt;div class=&quot;content&quot;&gt;
      &lt;img alt=&quot;cdk server adapter wizard8&quot; src=&quot;https://tools.jboss.org/documentation/whatsnew/openshift/images/cdk-server-adapter-wizard8.png&quot; width=&quot;600&quot; /&gt;
      &lt;/div&gt;
      &lt;/div&gt;
      &lt;div class=&quot;paragraph&quot;&gt;
      &lt;p&gt;Accept the license agreement and click the &lt;strong&gt;Next&lt;/strong&gt; button:&lt;/p&gt;
      &lt;/div&gt;
      &lt;div class=&quot;imageblock&quot;&gt;
      &lt;div class=&quot;content&quot;&gt;
      &lt;img alt=&quot;cdk server adapter wizard9&quot; src=&quot;https://tools.jboss.org/documentation/whatsnew/openshift/images/cdk-server-adapter-wizard9.png&quot; width=&quot;600&quot; /&gt;
      &lt;/div&gt;
      &lt;/div&gt;
      &lt;div class=&quot;paragraph&quot;&gt;
      &lt;p&gt;You can choose the folder where you want the runtime to be installed. Once you’ve set it,
      click the &lt;strong&gt;Finish&lt;/strong&gt; button:&lt;/p&gt;
      &lt;/div&gt;
      &lt;div class=&quot;paragraph&quot;&gt;
      &lt;p&gt;The download of the runtime will be started and you should see the progression on the server adapter
      wizard:&lt;/p&gt;
      &lt;/div&gt;
      &lt;div class=&quot;imageblock&quot;&gt;
      &lt;div class=&quot;content&quot;&gt;
      &lt;img alt=&quot;cdk server adapter wizard10&quot; src=&quot;https://tools.jboss.org/documentation/whatsnew/openshift/images/cdk-server-adapter-wizard10.png&quot; width=&quot;600&quot; /&gt;
      &lt;/div&gt;
      &lt;/div&gt;
      &lt;div class=&quot;paragraph&quot;&gt;
      &lt;p&gt;Once the download is completed, you will notice that the &lt;strong&gt;Minishift Binary&lt;/strong&gt; and &lt;strong&gt;Username&lt;/strong&gt; fields have been filled:&lt;/p&gt;
      &lt;/div&gt;
      &lt;div class=&quot;imageblock&quot;&gt;
      &lt;div class=&quot;content&quot;&gt;
      &lt;img alt=&quot;cdk server adapter wizard11&quot; src=&quot;https://tools.jboss.org/documentation/whatsnew/openshift/images/cdk-server-adapter-wizard11.png&quot; width=&quot;600&quot; /&gt;
      &lt;/div&gt;
      &lt;/div&gt;
      &lt;div class=&quot;paragraph&quot;&gt;
      &lt;p&gt;Click the &lt;strong&gt;Finish&lt;/strong&gt; button to create the server adapter.&lt;/p&gt;
      &lt;/div&gt;
      &lt;div class=&quot;paragraph&quot;&gt;
      &lt;p&gt;Please note that if it’s the first time you install CDK, you must perform an initialization. In the &lt;strong&gt;Servers&lt;/strong&gt; view, right click
      the server and select the &lt;strong&gt;Setup CDK&lt;/strong&gt; menu item:&lt;/p&gt;
      &lt;/div&gt;
      &lt;div class=&quot;imageblock&quot;&gt;
      &lt;div class=&quot;content&quot;&gt;
      &lt;img alt=&quot;cdk server adapter wizard12&quot; src=&quot;https://tools.jboss.org/documentation/whatsnew/openshift/images/cdk-server-adapter-wizard12.png&quot; width=&quot;600&quot; /&gt;
      &lt;/div&gt;
      &lt;/div&gt;
      &lt;div class=&quot;imageblock&quot;&gt;
      &lt;div class=&quot;content&quot;&gt;
      &lt;img alt=&quot;cdk server adapter wizard13&quot; src=&quot;https://tools.jboss.org/documentation/whatsnew/openshift/images/cdk-server-adapter-wizard13.png&quot; width=&quot;600&quot; /&gt;
      &lt;/div&gt;
      &lt;/div&gt;
      &lt;/div&gt;
      &lt;/div&gt;
      &lt;div class=&quot;sect2&quot;&gt;
      &lt;h3 id=&quot;hibernate-tools&quot;&gt;&lt;a class=&quot;anchor&quot; href=&quot;https://tools.jboss.org/blog/news.atom#hibernate-tools&quot;&gt;&lt;/a&gt;Hibernate Tools&lt;/h3&gt;
      &lt;div class=&quot;sect3&quot;&gt;
      &lt;h4 id=&quot;hibernate-runtime-provider-updates&quot;&gt;&lt;a class=&quot;anchor&quot; href=&quot;https://tools.jboss.org/blog/news.atom#hibernate-runtime-provider-updates&quot;&gt;&lt;/a&gt;Hibernate Runtime Provider Updates&lt;/h4&gt;
      &lt;div class=&quot;paragraph&quot;&gt;
      &lt;p&gt;A number of additions and updates have been performed on the available Hibernate runtime  providers.&lt;/p&gt;
      &lt;/div&gt;
      &lt;div class=&quot;sect4&quot;&gt;
      &lt;h5 id=&quot;new-hibernate-5-3-runtime-provider&quot;&gt;&lt;a class=&quot;anchor&quot; href=&quot;https://tools.jboss.org/blog/news.atom#new-hibernate-5-3-runtime-provider&quot;&gt;&lt;/a&gt;New Hibernate 5.3 Runtime Provider&lt;/h5&gt;
      &lt;div class=&quot;paragraph&quot;&gt;
      &lt;p&gt;With beta releases available in the Hibernate 5.3 stream, the time was right to make available a corresponding Hibernate 5.3 runtime provider. This runtime provider incorporates Hibernate Core version 5.3.0.Beta2 and Hibernate Tools version 5.3.0.Beta1.&lt;/p&gt;
      &lt;/div&gt;
      &lt;div class=&quot;imageblock&quot; style=&quot;text-align: center;&quot;&gt;
      &lt;div class=&quot;content&quot;&gt;
      &lt;img alt=&quot;hibernate 5 3&quot; src=&quot;https://tools.jboss.org/documentation/whatsnew/hibernate/images/4.5.3.AM3/hibernate_5_3.png&quot; width=&quot;381&quot; /&gt;
      &lt;/div&gt;
      &lt;div class=&quot;title&quot;&gt;Figure 1. Hibernate 5.3 is available&lt;/div&gt;
      &lt;/div&gt;
      &lt;/div&gt;
      &lt;div class=&quot;sect4&quot;&gt;
      &lt;h5 id=&quot;other-runtime-provider-updates&quot;&gt;&lt;a class=&quot;anchor&quot; href=&quot;https://tools.jboss.org/blog/news.atom#other-runtime-provider-updates&quot;&gt;&lt;/a&gt;Other Runtime Provider Updates&lt;/h5&gt;
      &lt;div class=&quot;paragraph&quot;&gt;
      &lt;p&gt;The Hibernate 5.0 runtime provider now incorporates Hibernate Core version 5.0.12.Final and Hibernate Tools version 5.0.6.Final.&lt;/p&gt;
      &lt;/div&gt;
      &lt;div class=&quot;paragraph&quot;&gt;
      &lt;p&gt;The Hibernate 5.1 runtime provider now incorporates Hibernate Core version 5.1.12.Final and Hibernate Tools version 5.1.7.Final.&lt;/p&gt;
      &lt;/div&gt;
      &lt;div class=&quot;paragraph&quot;&gt;
      &lt;p&gt;The Hibernate 5.2 runtime provider now incorporates Hibernate Core version 5.2.15.Final and Hibernate Tools version 5.2.10.Final.&lt;/p&gt;
      &lt;/div&gt;
      &lt;/div&gt;
      &lt;/div&gt;
      &lt;/div&gt;
      &lt;div class=&quot;sect2&quot;&gt;
      &lt;h3 id=&quot;fuse-tooling&quot;&gt;&lt;a class=&quot;anchor&quot; href=&quot;https://tools.jboss.org/blog/news.atom#fuse-tooling&quot;&gt;&lt;/a&gt;Fuse Tooling&lt;/h3&gt;
      &lt;div class=&quot;sect3&quot;&gt;
      &lt;h4 id=&quot;fuse-ignite-technical-extension-templates&quot;&gt;&lt;a class=&quot;anchor&quot; href=&quot;https://tools.jboss.org/blog/news.atom#fuse-ignite-technical-extension-templates&quot;&gt;&lt;/a&gt;Fuse Ignite Technical Extension templates&lt;/h4&gt;
      &lt;div class=&quot;paragraph&quot;&gt;
      &lt;p&gt;The existing template for &quot;Custom step using a Camel Route&quot; has been updated to work with Fuse 7 Tech Preview 4.&lt;/p&gt;
      &lt;/div&gt;
      &lt;div class=&quot;paragraph&quot;&gt;
      &lt;p&gt;Two new templates have been added:
      - Custom step using Java Bean
      - Custom connector&lt;/p&gt;
      &lt;/div&gt;
      &lt;div class=&quot;imageblock&quot;&gt;
      &lt;div class=&quot;content&quot;&gt;
      &lt;img alt=&quot;New Fuse Ignite wizard with 3 options&quot; src=&quot;https://tools.jboss.org/documentation/whatsnew/fusetools/images/igniteExtensionWizard10.3.0.AM3.png&quot; /&gt;
      &lt;/div&gt;
      &lt;/div&gt;
      &lt;/div&gt;
      &lt;div class=&quot;sect3&quot;&gt;
      &lt;h4 id=&quot;improvements-of-the-wizard-to-create-a-fuse-integration-project&quot;&gt;&lt;a class=&quot;anchor&quot; href=&quot;https://tools.jboss.org/blog/news.atom#improvements-of-the-wizard-to-create-a-fuse-integration-project&quot;&gt;&lt;/a&gt;Improvements of the wizard to create a Fuse Integration project&lt;/h4&gt;
      &lt;div class=&quot;paragraph&quot;&gt;
      &lt;p&gt;The creation wizard provides better guidance for the targeted deployment environment:&lt;/p&gt;
      &lt;/div&gt;
      &lt;div class=&quot;imageblock&quot;&gt;
      &lt;div class=&quot;content&quot;&gt;
      &lt;img alt=&quot;New Fuse Integration Project wizard page to select environment&quot; src=&quot;https://tools.jboss.org/documentation/whatsnew/fusetools/images/newFuseIntegrationWizard-environment.png&quot; /&gt;
      &lt;/div&gt;
      &lt;/div&gt;
      &lt;div class=&quot;paragraph&quot;&gt;
      &lt;p&gt;More place is available to choose the templates and they are now filtered based on the targeted environment:&lt;/p&gt;
      &lt;/div&gt;
      &lt;div class=&quot;imageblock&quot;&gt;
      &lt;div class=&quot;content&quot;&gt;
      &lt;img alt=&quot;New Fuse Integration Project wizard page to select templates&quot; src=&quot;https://tools.jboss.org/documentation/whatsnew/fusetools/images/newFuseIntegrationWizard-templates.png&quot; /&gt;
      &lt;/div&gt;
      &lt;/div&gt;
      &lt;div class=&quot;paragraph&quot;&gt;
      &lt;p&gt;It also points out to other places to find different examples for advanced users (see the link at the bottom of the previous screenshot).&lt;/p&gt;
      &lt;/div&gt;
      &lt;/div&gt;
      &lt;div class=&quot;sect3&quot;&gt;
      &lt;h4 id=&quot;camel-rest-dsl-editor-technical-preview&quot;&gt;&lt;a class=&quot;anchor&quot; href=&quot;https://tools.jboss.org/blog/news.atom#camel-rest-dsl-editor-technical-preview&quot;&gt;&lt;/a&gt;Camel Rest DSL editor (Technical preview)&lt;/h4&gt;
      &lt;div class=&quot;paragraph&quot;&gt;
      &lt;p&gt;Camel is providing a Rest DSL to help the integration through Rest endpoints. Fuse Tooling is now providing a new tab in read-only mode to visualize the Rest endpoints defined.&lt;/p&gt;
      &lt;/div&gt;
      &lt;div class=&quot;imageblock&quot;&gt;
      &lt;div class=&quot;content&quot;&gt;
      &lt;img alt=&quot;Rest DSL editor tab in read-only mode&quot; src=&quot;https://tools.jboss.org/documentation/whatsnew/fusetools/images/restViewer.png&quot; /&gt;
      &lt;/div&gt;
      &lt;/div&gt;
      &lt;div class=&quot;paragraph&quot;&gt;
      &lt;p&gt;It is currently in Tech Preview and needs to be activated in Window → Preferences → Fuse Tooling → Editor → Enable Read Only Tech preview REST DSL tab.&lt;/p&gt;
      &lt;/div&gt;
      &lt;div class=&quot;paragraph&quot;&gt;
      &lt;p&gt;Work is still ongoing and feedback is very welcome on this new feature, you can comment on &lt;a href=&quot;https://issues.jboss.org/browse/FUSETOOLS-1287&quot;&gt;this JIRA epic&lt;/a&gt;.&lt;/p&gt;
      &lt;/div&gt;
      &lt;/div&gt;
      &lt;div class=&quot;sect3&quot;&gt;
      &lt;h4 id=&quot;dozer-upgrade-and-migration&quot;&gt;&lt;a class=&quot;anchor&quot; href=&quot;https://tools.jboss.org/blog/news.atom#dozer-upgrade-and-migration&quot;&gt;&lt;/a&gt;Dozer upgrade and migration&lt;/h4&gt;
      &lt;div class=&quot;paragraph&quot;&gt;
      &lt;p&gt;When upgrading from Camel &amp;lt; 2.20 to Camel &amp;gt; 2.20, the Dozer dependency has been upgraded to a version not backward-compatible
      If you open a Data transformation based on Dozer in Fuse Tooling, it will propose to migrate the file used for the transformation (technically changing the namespace). It allow to continue to use the Data Transformation editor and have - in most cases - the Data Transformation working at runtime with Camel &amp;gt; 2.20.&lt;/p&gt;
      &lt;/div&gt;
      &lt;div class=&quot;paragraph&quot;&gt;
      &lt;p&gt;Enjoy!&lt;/p&gt;
      &lt;/div&gt;
      &lt;div class=&quot;paragraph&quot;&gt;
      &lt;p&gt;Jeff Maury&lt;/p&gt;
      &lt;/div&gt;
      &lt;/div&gt;
      &lt;/div&gt;
      &lt;/div&gt;
      &lt;/div&gt;&lt;/div&gt;</description>
	<pubDate>Wed, 06 Jul 2022 12:07:23 +0000</pubDate>
</item>
<item>
	<title>JBoss Tools Team: JBoss Tools 4.5.3.AM2 for Eclipse Oxygen.3</title>
	<guid isPermaLink="true">https://tools.jboss.org/blog/4.5.3.am2-for-oxygen.3.html</guid>
	<link>https://tools.jboss.org/blog/4.5.3.am2-for-oxygen.3.html</link>
	<description>&lt;div&gt;&lt;div id=&quot;preamble&quot;&gt;
      &lt;div class=&quot;sectionbody&quot;&gt;
      &lt;div class=&quot;paragraph&quot;&gt;
      &lt;p&gt;Happy to announce 4.5.3.AM2 (Developer Milestone 2) build for Eclipse Oxygen.3.&lt;/p&gt;
      &lt;/div&gt;
      &lt;div class=&quot;paragraph&quot;&gt;
      &lt;p&gt;Downloads available at &lt;a href=&quot;https://tools.jboss.org/downloads/jbosstools/oxygen/4.5.3.AM2.html&quot;&gt;JBoss Tools 4.5.3 AM2&lt;/a&gt;.&lt;/p&gt;
      &lt;/div&gt;
      &lt;/div&gt;
      &lt;/div&gt;
      &lt;div class=&quot;sect1&quot;&gt;
      &lt;h2 id=&quot;what-is-new&quot;&gt;&lt;a class=&quot;anchor&quot; href=&quot;https://tools.jboss.org/blog/news.atom#what-is-new&quot;&gt;&lt;/a&gt;What is New?&lt;/h2&gt;
      &lt;div class=&quot;sectionbody&quot;&gt;
      &lt;div class=&quot;paragraph&quot;&gt;
      &lt;p&gt;Full info is at &lt;a href=&quot;https://tools.jboss.org/documentation/whatsnew/jbosstools/4.5.3.AM2.html&quot;&gt;this page&lt;/a&gt;. Some highlights are below.&lt;/p&gt;
      &lt;/div&gt;
      &lt;div class=&quot;sect2&quot;&gt;
      &lt;h3 id=&quot;openshift&quot;&gt;&lt;a class=&quot;anchor&quot; href=&quot;https://tools.jboss.org/blog/news.atom#openshift&quot;&gt;&lt;/a&gt;OpenShift&lt;/h3&gt;
      &lt;div class=&quot;sect3&quot;&gt;
      &lt;h4 id=&quot;cdk-and-minishift-server-adapter-better-developer-experience&quot;&gt;&lt;a class=&quot;anchor&quot; href=&quot;https://tools.jboss.org/blog/news.atom#cdk-and-minishift-server-adapter-better-developer-experience&quot;&gt;&lt;/a&gt;CDK and Minishift Server Adapter better developer experience&lt;/h4&gt;
      &lt;div class=&quot;paragraph&quot;&gt;
      &lt;p&gt;When working with both CDK and upstream Minishift, it is recommanded to distinguish environments through the MINISHIFT_HOME variable.
      It was possible before to use this parameter but it requires a two steps process:&lt;/p&gt;
      &lt;/div&gt;
      &lt;div class=&quot;ulist&quot;&gt;
      &lt;ul&gt;
      &lt;li&gt;
      &lt;p&gt;first create the server adapter (through the wizard)&lt;/p&gt;
      &lt;/li&gt;
      &lt;li&gt;
      &lt;p&gt;then change the MINISHIFT_HOME in the server adapter editor&lt;/p&gt;
      &lt;/li&gt;
      &lt;/ul&gt;
      &lt;/div&gt;
      &lt;div class=&quot;paragraph&quot;&gt;
      &lt;p&gt;It is now possible to set this parameter from the server adapter wizard. So now, everything is correctly setup when you create the
      server adapter.&lt;/p&gt;
      &lt;/div&gt;
      &lt;div class=&quot;paragraph&quot;&gt;
      &lt;p&gt;Let’s see an example with the CDK server adapter.&lt;/p&gt;
      &lt;/div&gt;
      &lt;div class=&quot;paragraph&quot;&gt;
      &lt;p&gt;From the &lt;strong&gt;Servers&lt;/strong&gt; view, select the new Server menu item and enter cdk in the filter:&lt;/p&gt;
      &lt;/div&gt;
      &lt;div class=&quot;imageblock&quot;&gt;
      &lt;div class=&quot;content&quot;&gt;
      &lt;img alt=&quot;cdk server adapter wizard&quot; src=&quot;https://tools.jboss.org/documentation/whatsnew/openshift/images/cdk-server-adapter-wizard.png&quot; width=&quot;600&quot; /&gt;
      &lt;/div&gt;
      &lt;/div&gt;
      &lt;div class=&quot;paragraph&quot;&gt;
      &lt;p&gt;Select Red Hat Container Development Kit 3.2+&lt;/p&gt;
      &lt;/div&gt;
      &lt;div class=&quot;imageblock&quot;&gt;
      &lt;div class=&quot;content&quot;&gt;
      &lt;img alt=&quot;cdk server adapter wizard1&quot; src=&quot;https://tools.jboss.org/documentation/whatsnew/openshift/images/cdk-server-adapter-wizard1.png&quot; width=&quot;600&quot; /&gt;
      &lt;/div&gt;
      &lt;/div&gt;
      &lt;div class=&quot;paragraph&quot;&gt;
      &lt;p&gt;Click the &lt;strong&gt;Next&lt;/strong&gt; button:&lt;/p&gt;
      &lt;/div&gt;
      &lt;div class=&quot;imageblock&quot;&gt;
      &lt;div class=&quot;content&quot;&gt;
      &lt;img alt=&quot;cdk server adapter wizard2&quot; src=&quot;https://tools.jboss.org/documentation/whatsnew/openshift/images/cdk-server-adapter-wizard2.png&quot; width=&quot;600&quot; /&gt;
      &lt;/div&gt;
      &lt;/div&gt;
      &lt;div class=&quot;paragraph&quot;&gt;
      &lt;p&gt;The MINISHIFT_HOME parameter can be set here and is defaulted.&lt;/p&gt;
      &lt;/div&gt;
      &lt;/div&gt;
      &lt;/div&gt;
      &lt;div class=&quot;sect2&quot;&gt;
      &lt;h3 id=&quot;fuse-tooling&quot;&gt;&lt;a class=&quot;anchor&quot; href=&quot;https://tools.jboss.org/blog/news.atom#fuse-tooling&quot;&gt;&lt;/a&gt;Fuse Tooling&lt;/h3&gt;
      &lt;div class=&quot;sect3&quot;&gt;
      &lt;h4 id=&quot;display-fuse-version-corresponding-to-camel-version-proposed&quot;&gt;&lt;a class=&quot;anchor&quot; href=&quot;https://tools.jboss.org/blog/news.atom#display-fuse-version-corresponding-to-camel-version-proposed&quot;&gt;&lt;/a&gt;Display Fuse version corresponding to Camel version proposed&lt;/h4&gt;
      &lt;div class=&quot;paragraph&quot;&gt;
      &lt;p&gt;When you create a new project, you select the Camel version from a list. Now, the list of Camel versions includes the Fuse version to help you choose the version that corresponds to your production version.&lt;/p&gt;
      &lt;/div&gt;
      &lt;div class=&quot;imageblock&quot;&gt;
      &lt;div class=&quot;content&quot;&gt;
      &lt;img alt=&quot;Fuse Version also displayed in drop-down list close to Camel version&quot; src=&quot;https://tools.jboss.org/documentation/whatsnew/fusetools/images/listOfFuseVersion.png&quot; /&gt;
      &lt;/div&gt;
      &lt;/div&gt;
      &lt;/div&gt;
      &lt;div class=&quot;sect3&quot;&gt;
      &lt;h4 id=&quot;update-validation-for-similar-ids-between-a-component-and-its-definition&quot;&gt;&lt;a class=&quot;anchor&quot; href=&quot;https://tools.jboss.org/blog/news.atom#update-validation-for-similar-ids-between-a-component-and-its-definition&quot;&gt;&lt;/a&gt;Update validation for similar IDs between a component and its definition&lt;/h4&gt;
      &lt;div class=&quot;paragraph&quot;&gt;
      &lt;p&gt;Starting with Camel 2.20, you can use similar IDs for the component name and its definition unless the specific property &quot;registerEndpointIdsFromRoute&quot; is provided.
      The validation process checks the Camel version and the value of the &quot;registerEndpointIdsFromRoute&quot; property.&lt;/p&gt;
      &lt;/div&gt;
      &lt;div class=&quot;paragraph&quot;&gt;
      &lt;p&gt;For example:&lt;/p&gt;
      &lt;/div&gt;
      &lt;div class=&quot;listingblock&quot;&gt;
      &lt;div class=&quot;content&quot;&gt;
      &lt;pre class=&quot;prettyprint highlight&quot;&gt;&lt;code class=&quot;language-xml&quot;&gt;&amp;lt;from id=&quot;timer&quot; uri=&quot;timer:timerName&quot;/&amp;gt;&lt;/code&gt;&lt;/pre&gt;
      &lt;/div&gt;
      &lt;/div&gt;
      &lt;/div&gt;
      &lt;div class=&quot;sect3&quot;&gt;
      &lt;h4 id=&quot;improved-guidance-in-method-selection-for-factory-methods-on-global-bean&quot;&gt;&lt;a class=&quot;anchor&quot; href=&quot;https://tools.jboss.org/blog/news.atom#improved-guidance-in-method-selection-for-factory-methods-on-global-bean&quot;&gt;&lt;/a&gt;Improved guidance in method selection for factory methods on Global Bean&lt;/h4&gt;
      &lt;div class=&quot;paragraph&quot;&gt;
      &lt;p&gt;When selecting factory method on a Global bean, a lot of possibilities were proposed in the user interface. The list of factory methods for a global bean is now limited to only those methods that match the constraints of the bean’s global definition type (bean or bean factory).&lt;/p&gt;
      &lt;/div&gt;
      &lt;/div&gt;
      &lt;div class=&quot;sect3&quot;&gt;
      &lt;h4 id=&quot;customize-eip-labels-in-the-diagram&quot;&gt;&lt;a class=&quot;anchor&quot; href=&quot;https://tools.jboss.org/blog/news.atom#customize-eip-labels-in-the-diagram&quot;&gt;&lt;/a&gt;Customize EIP labels in the diagram&lt;/h4&gt;
      &lt;div class=&quot;paragraph&quot;&gt;
      &lt;p&gt;The Fuse Tooling preferences page for the Editor view includes a new &quot;Preferred Labels&quot; option.&lt;/p&gt;
      &lt;/div&gt;
      &lt;div class=&quot;imageblock&quot;&gt;
      &lt;div class=&quot;content&quot;&gt;
      &lt;img alt=&quot;Fuse Tooling editor preference page&quot; src=&quot;https://tools.jboss.org/documentation/whatsnew/fusetools/images/prefEIPLabels.png&quot; /&gt;
      &lt;/div&gt;
      &lt;/div&gt;
      &lt;div class=&quot;paragraph&quot;&gt;
      &lt;p&gt;Use this option to define the label of EIP components (except endpoints) shown in the Editor’s Design view.&lt;/p&gt;
      &lt;/div&gt;
      &lt;div class=&quot;imageblock&quot;&gt;
      &lt;div class=&quot;content&quot;&gt;
      &lt;img alt=&quot;Dialog for defining the display text for an EIP&quot; src=&quot;https://tools.jboss.org/documentation/whatsnew/fusetools/images/prefEIPLabelsResult.png&quot; /&gt;
      &lt;/div&gt;
      &lt;/div&gt;
      &lt;/div&gt;
      &lt;/div&gt;
      &lt;div class=&quot;sect2&quot;&gt;
      &lt;h3 id=&quot;general&quot;&gt;&lt;a class=&quot;anchor&quot; href=&quot;https://tools.jboss.org/blog/news.atom#general&quot;&gt;&lt;/a&gt;General&lt;/h3&gt;
      &lt;div class=&quot;sect3&quot;&gt;
      &lt;h4 id=&quot;credentials-framework&quot;&gt;&lt;a class=&quot;anchor&quot; href=&quot;https://tools.jboss.org/blog/news.atom#credentials-framework&quot;&gt;&lt;/a&gt;Credentials Framework&lt;/h4&gt;
      &lt;div class=&quot;sect4&quot;&gt;
      &lt;h5 id=&quot;sunsetting-jboss-org-credentials&quot;&gt;&lt;a class=&quot;anchor&quot; href=&quot;https://tools.jboss.org/blog/news.atom#sunsetting-jboss-org-credentials&quot;&gt;&lt;/a&gt;Sunsetting jboss.org credentials&lt;/h5&gt;
      &lt;div class=&quot;paragraph&quot;&gt;
      &lt;p&gt;&lt;code&gt;Download Runtimes&lt;/code&gt; and &lt;code&gt;CDK Server Adapter&lt;/code&gt; used the credentials framework to manage credentials. However, the JBoss.org credentials cannot be used any more
      as the underlying service used by these components does not support these credentials.&lt;/p&gt;
      &lt;/div&gt;
      &lt;div class=&quot;paragraph&quot;&gt;
      &lt;p&gt;The credentials framework still supports the JBoss.org credentials in case other services / components require or use this credentials domain.&lt;/p&gt;
      &lt;/div&gt;
      &lt;/div&gt;
      &lt;/div&gt;
      &lt;/div&gt;
      &lt;div class=&quot;sect2&quot;&gt;
      &lt;h3 id=&quot;aerogear&quot;&gt;&lt;a class=&quot;anchor&quot; href=&quot;https://tools.jboss.org/blog/news.atom#aerogear&quot;&gt;&lt;/a&gt;Aerogear&lt;/h3&gt;
      &lt;div class=&quot;sect3&quot;&gt;
      &lt;h4 id=&quot;aerogear-component-deprecation&quot;&gt;&lt;a class=&quot;anchor&quot; href=&quot;https://tools.jboss.org/blog/news.atom#aerogear-component-deprecation&quot;&gt;&lt;/a&gt;Aerogear component deprecation&lt;/h4&gt;
      &lt;div class=&quot;paragraph&quot;&gt;
      &lt;p&gt;The Aerogear component has been marked deprecated as there is no more maintenance on the source code. It is still available in Red Hat Central
      and may be removed in the future.&lt;/p&gt;
      &lt;/div&gt;
      &lt;/div&gt;
      &lt;/div&gt;
      &lt;div class=&quot;sect2&quot;&gt;
      &lt;h3 id=&quot;arquillian&quot;&gt;&lt;a class=&quot;anchor&quot; href=&quot;https://tools.jboss.org/blog/news.atom#arquillian&quot;&gt;&lt;/a&gt;Arquillian&lt;/h3&gt;
      &lt;div class=&quot;sect3&quot;&gt;
      &lt;h4 id=&quot;arquillian-component-removal&quot;&gt;&lt;a class=&quot;anchor&quot; href=&quot;https://tools.jboss.org/blog/news.atom#arquillian-component-removal&quot;&gt;&lt;/a&gt;Arquillian component removal&lt;/h4&gt;
      &lt;div class=&quot;paragraph&quot;&gt;
      &lt;p&gt;The Arquillian component has been removed from Red Hat Central as it has been deprecated a while ago.&lt;/p&gt;
      &lt;/div&gt;
      &lt;/div&gt;
      &lt;/div&gt;
      &lt;div class=&quot;sect2&quot;&gt;
      &lt;h3 id=&quot;browsersim&quot;&gt;&lt;a class=&quot;anchor&quot; href=&quot;https://tools.jboss.org/blog/news.atom#browsersim&quot;&gt;&lt;/a&gt;BrowserSim&lt;/h3&gt;
      &lt;div class=&quot;sect3&quot;&gt;
      &lt;h4 id=&quot;browsersim-component-deprecation&quot;&gt;&lt;a class=&quot;anchor&quot; href=&quot;https://tools.jboss.org/blog/news.atom#browsersim-component-deprecation&quot;&gt;&lt;/a&gt;BrowserSim component deprecation&lt;/h4&gt;
      &lt;div class=&quot;paragraph&quot;&gt;
      &lt;p&gt;The BrowserSim component has been marked deprecated as there is no more maintenance on the source code. It is still available in Red Hat Central
      and may be removed in the future.&lt;/p&gt;
      &lt;/div&gt;
      &lt;/div&gt;
      &lt;/div&gt;
      &lt;div class=&quot;sect2&quot;&gt;
      &lt;h3 id=&quot;freemarker&quot;&gt;&lt;a class=&quot;anchor&quot; href=&quot;https://tools.jboss.org/blog/news.atom#freemarker&quot;&gt;&lt;/a&gt;Freemarker&lt;/h3&gt;
      &lt;div class=&quot;sect3&quot;&gt;
      &lt;h4 id=&quot;freemarker-component-removal&quot;&gt;&lt;a class=&quot;anchor&quot; href=&quot;https://tools.jboss.org/blog/news.atom#freemarker-component-removal&quot;&gt;&lt;/a&gt;Freemarker component removal&lt;/h4&gt;
      &lt;div class=&quot;paragraph&quot;&gt;
      &lt;p&gt;The Freemarker component has been removed from Red Hat Central as it has been deprecated a while ago.&lt;/p&gt;
      &lt;/div&gt;
      &lt;/div&gt;
      &lt;/div&gt;
      &lt;div class=&quot;sect2&quot;&gt;
      &lt;h3 id=&quot;livereload&quot;&gt;&lt;a class=&quot;anchor&quot; href=&quot;https://tools.jboss.org/blog/news.atom#livereload&quot;&gt;&lt;/a&gt;LiveReload&lt;/h3&gt;
      &lt;div class=&quot;sect3&quot;&gt;
      &lt;h4 id=&quot;livereload-component-deprecation&quot;&gt;&lt;a class=&quot;anchor&quot; href=&quot;https://tools.jboss.org/blog/news.atom#livereload-component-deprecation&quot;&gt;&lt;/a&gt;LiveReload component deprecation&lt;/h4&gt;
      &lt;div class=&quot;paragraph&quot;&gt;
      &lt;p&gt;The LiveReload component has been marked deprecated as there is no more maintenance on the source code. It is still available in Red Hat Central
      and may be removed in the future.&lt;/p&gt;
      &lt;/div&gt;
      &lt;div class=&quot;paragraph&quot;&gt;
      &lt;p&gt;Enjoy!&lt;/p&gt;
      &lt;/div&gt;
      &lt;div class=&quot;paragraph&quot;&gt;
      &lt;p&gt;Jeff Maury&lt;/p&gt;
      &lt;/div&gt;
      &lt;/div&gt;
      &lt;/div&gt;
      &lt;/div&gt;
      &lt;/div&gt;&lt;/div&gt;</description>
	<pubDate>Wed, 06 Jul 2022 12:07:23 +0000</pubDate>
</item>
<item>
	<title>JBoss Tools Team: JBoss Tools 4.5.3.AM1 for Eclipse Oxygen.2</title>
	<guid isPermaLink="true">https://tools.jboss.org/blog/4.5.3.am1-for-oxygen.2.html</guid>
	<link>https://tools.jboss.org/blog/4.5.3.am1-for-oxygen.2.html</link>
	<description>&lt;div&gt;&lt;div id=&quot;preamble&quot;&gt;
      &lt;div class=&quot;sectionbody&quot;&gt;
      &lt;div class=&quot;paragraph&quot;&gt;
      &lt;p&gt;Happy to announce 4.5.3.AM1 (Developer Milestone 1) build for Eclipse Oxygen.2.&lt;/p&gt;
      &lt;/div&gt;
      &lt;div class=&quot;paragraph&quot;&gt;
      &lt;p&gt;Downloads available at &lt;a href=&quot;https://tools.jboss.org/downloads/jbosstools/oxygen/4.5.3.AM1.html&quot;&gt;JBoss Tools 4.5.3 AM1&lt;/a&gt;.&lt;/p&gt;
      &lt;/div&gt;
      &lt;/div&gt;
      &lt;/div&gt;
      &lt;div class=&quot;sect1&quot;&gt;
      &lt;h2 id=&quot;what-is-new&quot;&gt;&lt;a class=&quot;anchor&quot; href=&quot;https://tools.jboss.org/blog/news.atom#what-is-new&quot;&gt;&lt;/a&gt;What is New?&lt;/h2&gt;
      &lt;div class=&quot;sectionbody&quot;&gt;
      &lt;div class=&quot;paragraph&quot;&gt;
      &lt;p&gt;Full info is at &lt;a href=&quot;https://tools.jboss.org/documentation/whatsnew/jbosstools/4.5.3.AM1.html&quot;&gt;this page&lt;/a&gt;. Some highlights are below.&lt;/p&gt;
      &lt;/div&gt;
      &lt;div class=&quot;sect2&quot;&gt;
      &lt;h3 id=&quot;openshift&quot;&gt;&lt;a class=&quot;anchor&quot; href=&quot;https://tools.jboss.org/blog/news.atom#openshift&quot;&gt;&lt;/a&gt;OpenShift&lt;/h3&gt;
      &lt;div class=&quot;sect3&quot;&gt;
      &lt;h4 id=&quot;minishift-server-adapter&quot;&gt;&lt;a class=&quot;anchor&quot; href=&quot;https://tools.jboss.org/blog/news.atom#minishift-server-adapter&quot;&gt;&lt;/a&gt;Minishift Server Adapter&lt;/h4&gt;
      &lt;div class=&quot;paragraph&quot;&gt;
      &lt;p&gt;A new server adapter has been added to support upstream Minishift.
      While the server adapter itself has limited functionality, it is able to start and stop the Minishift virtual machine via its minishift binary.
      From the Servers view, click &lt;strong&gt;New&lt;/strong&gt; and then type minishift, that will bring up a command to setup and/or launch the Minishift server adapter.&lt;/p&gt;
      &lt;/div&gt;
      &lt;div class=&quot;imageblock&quot;&gt;
      &lt;div class=&quot;content&quot;&gt;
      &lt;img alt=&quot;minishift server adapter&quot; src=&quot;https://tools.jboss.org/documentation/whatsnew/openshift/images/minishift-server-adapter.png&quot; width=&quot;600&quot; /&gt;
      &lt;/div&gt;
      &lt;/div&gt;
      &lt;div class=&quot;paragraph&quot;&gt;
      &lt;p&gt;All you have to do is set the location of the minishift binary file, the type of virtualization hypervisor
      and an optional Minishift profile name.&lt;/p&gt;
      &lt;/div&gt;
      &lt;div class=&quot;imageblock&quot;&gt;
      &lt;div class=&quot;content&quot;&gt;
      &lt;img alt=&quot;minishift server adapter1&quot; src=&quot;https://tools.jboss.org/documentation/whatsnew/openshift/images/minishift-server-adapter1.png&quot; width=&quot;600&quot; /&gt;
      &lt;/div&gt;
      &lt;/div&gt;
      &lt;div class=&quot;paragraph&quot;&gt;
      &lt;p&gt;Once youâ€™re finished, a new Minishift Server adapter will then be created and visible in the Servers view.&lt;/p&gt;
      &lt;/div&gt;
      &lt;div class=&quot;imageblock&quot;&gt;
      &lt;div class=&quot;content&quot;&gt;
      &lt;img alt=&quot;minishift server adapter2&quot; src=&quot;https://tools.jboss.org/documentation/whatsnew/openshift/images/minishift-server-adapter2.png&quot; width=&quot;600&quot; /&gt;
      &lt;/div&gt;
      &lt;/div&gt;
      &lt;div class=&quot;paragraph&quot;&gt;
      &lt;p&gt;Once the server is started, Docker and OpenShift connections should appear in their respective views, allowing the user to quickly create a new Openshift application and begin developing their AwesomeApp in a highly-replicatable environment.&lt;/p&gt;
      &lt;/div&gt;
      &lt;div class=&quot;imageblock&quot;&gt;
      &lt;div class=&quot;content&quot;&gt;
      &lt;img alt=&quot;minishift server adapter3&quot; src=&quot;https://tools.jboss.org/documentation/whatsnew/openshift/images/minishift-server-adapter3.png&quot; width=&quot;600&quot; /&gt;
      &lt;/div&gt;
      &lt;/div&gt;
      &lt;div class=&quot;imageblock&quot;&gt;
      &lt;div class=&quot;content&quot;&gt;
      &lt;img alt=&quot;minishift server adapter4&quot; src=&quot;https://tools.jboss.org/documentation/whatsnew/openshift/images/minishift-server-adapter4.png&quot; width=&quot;600&quot; /&gt;
      &lt;/div&gt;
      &lt;/div&gt;
      &lt;/div&gt;
      &lt;/div&gt;
      &lt;div class=&quot;sect2&quot;&gt;
      &lt;h3 id=&quot;fuse-tooling&quot;&gt;&lt;a class=&quot;anchor&quot; href=&quot;https://tools.jboss.org/blog/news.atom#fuse-tooling&quot;&gt;&lt;/a&gt;Fuse Tooling&lt;/h3&gt;
      &lt;div class=&quot;sect3&quot;&gt;
      &lt;h4 id=&quot;new-shortcuts-in-fuse-integration-perspective&quot;&gt;&lt;a class=&quot;anchor&quot; href=&quot;https://tools.jboss.org/blog/news.atom#new-shortcuts-in-fuse-integration-perspective&quot;&gt;&lt;/a&gt;New shortcuts in Fuse Integration perspective&lt;/h4&gt;
      &lt;div class=&quot;paragraph&quot;&gt;
      &lt;p&gt;Shortcuts for the Java, Launch, and Debug perspectives and basic navigation operations are now provided within the Fuse Integration perspective.&lt;/p&gt;
      &lt;/div&gt;
      &lt;div class=&quot;paragraph&quot;&gt;
      &lt;p&gt;The result is a set of buttons in the Toolbar:&lt;/p&gt;
      &lt;/div&gt;
      &lt;div class=&quot;imageblock&quot;&gt;
      &lt;div class=&quot;content&quot;&gt;
      &lt;img alt=&quot;New Toolbar action&quot; src=&quot;https://tools.jboss.org/documentation/whatsnew/fusetools/images/newToolbarAction.png&quot; /&gt;
      &lt;/div&gt;
      &lt;/div&gt;
      &lt;div class=&quot;paragraph&quot;&gt;
      &lt;p&gt;All of the associated keyboard shortcuts are also available, such as Ctrl+Shift+T to open a Java Type.&lt;/p&gt;
      &lt;/div&gt;
      &lt;/div&gt;
      &lt;div class=&quot;sect3&quot;&gt;
      &lt;h4 id=&quot;performance-improvement-loading-advanced-tab-for-camel-endpoints&quot;&gt;&lt;a class=&quot;anchor&quot; href=&quot;https://tools.jboss.org/blog/news.atom#performance-improvement-loading-advanced-tab-for-camel-endpoints&quot;&gt;&lt;/a&gt;Performance improvement: Loading Advanced tab for Camel Endpoints&lt;/h4&gt;
      &lt;div class=&quot;paragraph&quot;&gt;
      &lt;p&gt;The loading time of the &quot;Advanced&quot; tab in the Properties view for Camel Endpoints is greatly improved.&lt;/p&gt;
      &lt;/div&gt;
      &lt;div class=&quot;imageblock&quot;&gt;
      &lt;div class=&quot;content&quot;&gt;
      &lt;img alt=&quot;Advanced Tab in Properties view&quot; src=&quot;https://tools.jboss.org/documentation/whatsnew/fusetools/images/advancedTab.png&quot; /&gt;
      &lt;/div&gt;
      &lt;/div&gt;
      &lt;div class=&quot;paragraph&quot;&gt;
      &lt;p&gt;Previously, in the case of Camel Components that have a lot of parameters, it took several seconds to load the Advanced tab. For example, for the File component, it would take ~3.5s. It now takes ~350ms. The load time has been reduced by a factor of 10. (See this interesting &lt;a href=&quot;https://www.nngroup.com/articles/response-times-3-important-limits/&quot;&gt;article on response time&lt;/a&gt;)&lt;/p&gt;
      &lt;/div&gt;
      &lt;div class=&quot;paragraph&quot;&gt;
      &lt;p&gt;If you notice other places showing slow performance, you can file a report by using the &lt;a href=&quot;https://issues.jboss.org/browse/FUSETOOLS&quot;&gt;Fuse Tooling issue tracker&lt;/a&gt;. The Fuse Tooling team really appreciates your help. Your feedback contributes to our development priorities and improves the Fuse Tooling user experience.&lt;/p&gt;
      &lt;/div&gt;
      &lt;div class=&quot;paragraph&quot;&gt;
      &lt;p&gt;Enjoy!&lt;/p&gt;
      &lt;/div&gt;
      &lt;div class=&quot;paragraph&quot;&gt;
      &lt;p&gt;Jeff Maury&lt;/p&gt;
      &lt;/div&gt;
      &lt;/div&gt;
      &lt;/div&gt;
      &lt;/div&gt;
      &lt;/div&gt;&lt;/div&gt;</description>
	<pubDate>Wed, 06 Jul 2022 12:07:23 +0000</pubDate>
</item>
<item>
	<title>JBoss Tools Team: JBoss Tools for Eclipse 2022-06</title>
	<guid isPermaLink="true">https://tools.jboss.org/blog/4.24.0.final.html</guid>
	<link>https://tools.jboss.org/blog/4.24.0.final.html</link>
	<description>&lt;div&gt;&lt;div id=&quot;preamble&quot;&gt;
      &lt;div class=&quot;sectionbody&quot;&gt;
      &lt;div class=&quot;paragraph&quot;&gt;
      &lt;p&gt;Happy to announce 4.24.0.Final build for Eclipse 2022-06.&lt;/p&gt;
      &lt;/div&gt;
      &lt;div class=&quot;paragraph&quot;&gt;
      &lt;p&gt;Downloads available at &lt;a href=&quot;https://tools.jboss.org/downloads/jbosstools/2022-06/4.24.0.Final.html&quot;&gt;JBoss Tools 4.24.0.Final&lt;/a&gt;.&lt;/p&gt;
      &lt;/div&gt;
      &lt;/div&gt;
      &lt;/div&gt;
      &lt;div class=&quot;sect1&quot;&gt;
      &lt;h2 id=&quot;what-is-new&quot;&gt;&lt;a class=&quot;anchor&quot; href=&quot;https://tools.jboss.org/blog/news.atom#what-is-new&quot;&gt;&lt;/a&gt;What is New?&lt;/h2&gt;
      &lt;div class=&quot;sectionbody&quot;&gt;
      &lt;div class=&quot;paragraph&quot;&gt;
      &lt;p&gt;Full info is at &lt;a href=&quot;https://tools.jboss.org/documentation/whatsnew/jbosstools/4.24.0.Final.html&quot;&gt;this page&lt;/a&gt;. Some highlights are below.&lt;/p&gt;
      &lt;/div&gt;
      &lt;div class=&quot;sect2&quot;&gt;
      &lt;h3 id=&quot;quarkus-tools&quot;&gt;&lt;a class=&quot;anchor&quot; href=&quot;https://tools.jboss.org/blog/news.atom#quarkus-tools&quot;&gt;&lt;/a&gt;Quarkus Tools&lt;/h3&gt;
      &lt;div class=&quot;sect3&quot;&gt;
      &lt;h4 id=&quot;improvement-to-the-new-quarkus-project-wizard&quot;&gt;&lt;a class=&quot;anchor&quot; href=&quot;https://tools.jboss.org/blog/news.atom#improvement-to-the-new-quarkus-project-wizard&quot;&gt;&lt;/a&gt;Improvement to the new Quarkus project wizard&lt;/h4&gt;
      &lt;div class=&quot;paragraph&quot;&gt;
      &lt;p&gt;When the new Quarkus project wizard was initially design, there were a few Quarkus extensions so it was not difficult to find one from the
      total list. Now that the Quarkus ecosystem is growing fast, it was difficult even of the extensions were grouped into categories.&lt;/p&gt;
      &lt;/div&gt;
      &lt;div class=&quot;paragraph&quot;&gt;
      &lt;p&gt;In order to cope with this issue, the extensions and categories are now displayed in a tree (first level is categories, second level is
      extensions).&lt;/p&gt;
      &lt;/div&gt;
      &lt;div class=&quot;paragraph&quot;&gt;
      &lt;p&gt;This new tree can now be filtered through a text field. If user enter some characters, only extensions matching this filter will be displayed
      in the tree.&lt;/p&gt;
      &lt;/div&gt;
      &lt;div class=&quot;imageblock&quot;&gt;
      &lt;div class=&quot;content&quot;&gt;
      &lt;img alt=&quot;quarkus45&quot; src=&quot;https://tools.jboss.org/documentation/whatsnew/quarkus/images/quarkus45.gif&quot; /&gt;
      &lt;/div&gt;
      &lt;/div&gt;
      &lt;/div&gt;
      &lt;/div&gt;
      &lt;div class=&quot;sect2&quot;&gt;
      &lt;h3 id=&quot;hibernate-tools&quot;&gt;&lt;a class=&quot;anchor&quot; href=&quot;https://tools.jboss.org/blog/news.atom#hibernate-tools&quot;&gt;&lt;/a&gt;Hibernate Tools&lt;/h3&gt;
      &lt;div class=&quot;sect3&quot;&gt;
      &lt;h4 id=&quot;hibernate-runtime-provider-updates&quot;&gt;&lt;a class=&quot;anchor&quot; href=&quot;https://tools.jboss.org/blog/news.atom#hibernate-runtime-provider-updates&quot;&gt;&lt;/a&gt;Hibernate Runtime Provider Updates&lt;/h4&gt;
      &lt;div class=&quot;paragraph&quot;&gt;
      &lt;p&gt;A number of additions and updates have been performed on the available Hibernate runtime  providers.&lt;/p&gt;
      &lt;/div&gt;
      &lt;div class=&quot;sect4&quot;&gt;
      &lt;h5 id=&quot;runtime-provider-updates&quot;&gt;&lt;a class=&quot;anchor&quot; href=&quot;https://tools.jboss.org/blog/news.atom#runtime-provider-updates&quot;&gt;&lt;/a&gt;Runtime Provider Updates&lt;/h5&gt;
      &lt;div class=&quot;paragraph&quot;&gt;
      &lt;p&gt;The Hibernate 6.0 runtime provider (Preview) now incorporates Hibernate Core version 6.0.2.Final and Hibernate Tools version 6.0.2.Final.&lt;/p&gt;
      &lt;/div&gt;
      &lt;div class=&quot;paragraph&quot;&gt;
      &lt;p&gt;The Hibernate 5.6 runtime provider now incorporates Hibernate Core version 5.6.9.Final and Hibernate Tools version 5.6.9.Final.&lt;/p&gt;
      &lt;/div&gt;
      &lt;div class=&quot;paragraph&quot;&gt;
      &lt;p&gt;The Hibernate 5.3 runtime provider now incorporates Hibernate Core version 5.3.27.Final and Hibernate Tools version 5.3.27.Final.&lt;/p&gt;
      &lt;/div&gt;
      &lt;/div&gt;
      &lt;/div&gt;
      &lt;/div&gt;
      &lt;div class=&quot;sect2&quot;&gt;
      &lt;h3 id=&quot;and-more&quot;&gt;&lt;a class=&quot;anchor&quot; href=&quot;https://tools.jboss.org/blog/news.atom#and-more&quot;&gt;&lt;/a&gt;And more…​&lt;/h3&gt;
      &lt;div class=&quot;paragraph&quot;&gt;
      &lt;p&gt;You can find more noteworthy updates in on &lt;a href=&quot;https://tools.jboss.org/documentation/whatsnew/jbosstools/4.24.0.Final.html&quot;&gt;this page&lt;/a&gt;.&lt;/p&gt;
      &lt;/div&gt;
      &lt;div class=&quot;paragraph&quot;&gt;
      &lt;p&gt;Enjoy!&lt;/p&gt;
      &lt;/div&gt;
      &lt;div class=&quot;paragraph&quot;&gt;
      &lt;p&gt;Jeff Maury&lt;/p&gt;
      &lt;/div&gt;
      &lt;/div&gt;
      &lt;/div&gt;
      &lt;/div&gt;&lt;/div&gt;</description>
	<pubDate>Wed, 06 Jul 2022 12:07:23 +0000</pubDate>
</item>
<item>
	<title>JBoss Tools Team: JBoss Tools for Eclipse 2022-06M2</title>
	<guid isPermaLink="true">https://tools.jboss.org/blog/4.24.0.am1.html</guid>
	<link>https://tools.jboss.org/blog/4.24.0.am1.html</link>
	<description>&lt;div&gt;&lt;div id=&quot;preamble&quot;&gt;
      &lt;div class=&quot;sectionbody&quot;&gt;
      &lt;div class=&quot;paragraph&quot;&gt;
      &lt;p&gt;Happy to announce 4.24.0.AM1 (Developer Milestone 1) build for Eclipse 2022-06M2.&lt;/p&gt;
      &lt;/div&gt;
      &lt;div class=&quot;paragraph&quot;&gt;
      &lt;p&gt;Downloads available at &lt;a href=&quot;https://tools.jboss.org/downloads/jbosstools/2022-06/4.24.0.AM1.html&quot;&gt;JBoss Tools 4.24.0 AM1&lt;/a&gt;.&lt;/p&gt;
      &lt;/div&gt;
      &lt;/div&gt;
      &lt;/div&gt;
      &lt;div class=&quot;sect1&quot;&gt;
      &lt;h2 id=&quot;what-is-new&quot;&gt;&lt;a class=&quot;anchor&quot; href=&quot;https://tools.jboss.org/blog/news.atom#what-is-new&quot;&gt;&lt;/a&gt;What is New?&lt;/h2&gt;
      &lt;div class=&quot;sectionbody&quot;&gt;
      &lt;div class=&quot;paragraph&quot;&gt;
      &lt;p&gt;Full info is at &lt;a href=&quot;https://tools.jboss.org/documentation/whatsnew/jbosstools/4.24.0.AM1.html&quot;&gt;this page&lt;/a&gt;. Some highlights are below.&lt;/p&gt;
      &lt;/div&gt;
      &lt;div class=&quot;sect2&quot;&gt;
      &lt;h3 id=&quot;quarkus-tools&quot;&gt;&lt;a class=&quot;anchor&quot; href=&quot;https://tools.jboss.org/blog/news.atom#quarkus-tools&quot;&gt;&lt;/a&gt;Quarkus Tools&lt;/h3&gt;
      &lt;div class=&quot;sect3&quot;&gt;
      &lt;h4 id=&quot;improvement-to-the-new-quarkus-project-wizard&quot;&gt;&lt;a class=&quot;anchor&quot; href=&quot;https://tools.jboss.org/blog/news.atom#improvement-to-the-new-quarkus-project-wizard&quot;&gt;&lt;/a&gt;Improvement to the new Quarkus project wizard&lt;/h4&gt;
      &lt;div class=&quot;paragraph&quot;&gt;
      &lt;p&gt;When the new Quarkus project wizard was initially design, there were a few Quarkus extensions so it was not difficult to find one from the
      total list. Now that the Quarkus ecosystem is growing fast, it was difficult even of the extensions were grouped into categories.&lt;/p&gt;
      &lt;/div&gt;
      &lt;div class=&quot;paragraph&quot;&gt;
      &lt;p&gt;In order to cope with this issue, the extensions and categories are now displayed in a tree (first level is categories, second level is
      extensions).&lt;/p&gt;
      &lt;/div&gt;
      &lt;div class=&quot;paragraph&quot;&gt;
      &lt;p&gt;This new tree can now be filtered through a text field. If user enter some characters, only extensions matching this filter will be displayed
      in the tree.&lt;/p&gt;
      &lt;/div&gt;
      &lt;div class=&quot;imageblock&quot;&gt;
      &lt;div class=&quot;content&quot;&gt;
      &lt;img alt=&quot;quarkus45&quot; src=&quot;https://tools.jboss.org/documentation/whatsnew/quarkus/images/quarkus45.gif&quot; /&gt;
      &lt;/div&gt;
      &lt;/div&gt;
      &lt;/div&gt;
      &lt;/div&gt;
      &lt;div class=&quot;sect2&quot;&gt;
      &lt;h3 id=&quot;hibernate-tools&quot;&gt;&lt;a class=&quot;anchor&quot; href=&quot;https://tools.jboss.org/blog/news.atom#hibernate-tools&quot;&gt;&lt;/a&gt;Hibernate Tools&lt;/h3&gt;
      &lt;div class=&quot;sect3&quot;&gt;
      &lt;h4 id=&quot;hibernate-runtime-provider-updates&quot;&gt;&lt;a class=&quot;anchor&quot; href=&quot;https://tools.jboss.org/blog/news.atom#hibernate-runtime-provider-updates&quot;&gt;&lt;/a&gt;Hibernate Runtime Provider Updates&lt;/h4&gt;
      &lt;div class=&quot;paragraph&quot;&gt;
      &lt;p&gt;A number of additions and updates have been performed on the available Hibernate runtime  providers.&lt;/p&gt;
      &lt;/div&gt;
      &lt;div class=&quot;sect4&quot;&gt;
      &lt;h5 id=&quot;runtime-provider-updates&quot;&gt;&lt;a class=&quot;anchor&quot; href=&quot;https://tools.jboss.org/blog/news.atom#runtime-provider-updates&quot;&gt;&lt;/a&gt;Runtime Provider Updates&lt;/h5&gt;
      &lt;div class=&quot;paragraph&quot;&gt;
      &lt;p&gt;The Hibernate 6.0 runtime provider (Preview) now incorporates Hibernate Core version 6.0.2.Final and Hibernate Tools version 6.0.2.Final.&lt;/p&gt;
      &lt;/div&gt;
      &lt;div class=&quot;paragraph&quot;&gt;
      &lt;p&gt;The Hibernate 5.6 runtime provider now incorporates Hibernate Core version 5.6.9.Final and Hibernate Tools version 5.6.9.Final.&lt;/p&gt;
      &lt;/div&gt;
      &lt;div class=&quot;paragraph&quot;&gt;
      &lt;p&gt;The Hibernate 5.3 runtime provider now incorporates Hibernate Core version 5.3.26.Final and Hibernate Tools version 5.3.26.Final.&lt;/p&gt;
      &lt;/div&gt;
      &lt;/div&gt;
      &lt;/div&gt;
      &lt;/div&gt;
      &lt;div class=&quot;sect2&quot;&gt;
      &lt;h3 id=&quot;and-more&quot;&gt;&lt;a class=&quot;anchor&quot; href=&quot;https://tools.jboss.org/blog/news.atom#and-more&quot;&gt;&lt;/a&gt;And more…​&lt;/h3&gt;
      &lt;div class=&quot;paragraph&quot;&gt;
      &lt;p&gt;You can find more noteworthy updates in on &lt;a href=&quot;https://tools.jboss.org/documentation/whatsnew/jbosstools/4.24.0.AM1.html&quot;&gt;this page&lt;/a&gt;.&lt;/p&gt;
      &lt;/div&gt;
      &lt;div class=&quot;paragraph&quot;&gt;
      &lt;p&gt;Enjoy!&lt;/p&gt;
      &lt;/div&gt;
      &lt;div class=&quot;paragraph&quot;&gt;
      &lt;p&gt;Jeff Maury&lt;/p&gt;
      &lt;/div&gt;
      &lt;/div&gt;
      &lt;/div&gt;
      &lt;/div&gt;&lt;/div&gt;</description>
	<pubDate>Wed, 06 Jul 2022 12:07:23 +0000</pubDate>
</item>
<item>
	<title>JBoss Tools Team: JBoss Tools for Eclipse 2022-03</title>
	<guid isPermaLink="true">https://tools.jboss.org/blog/4.23.0.final.html</guid>
	<link>https://tools.jboss.org/blog/4.23.0.final.html</link>
	<description>&lt;div&gt;&lt;div id=&quot;preamble&quot;&gt;
      &lt;div class=&quot;sectionbody&quot;&gt;
      &lt;div class=&quot;paragraph&quot;&gt;
      &lt;p&gt;&lt;a href=&quot;https://tools.jboss.org/downloads/jbosstools/2022-03/4.23.0.Final.html&quot;&gt;JBoss Tools 4.23.0&lt;/a&gt;
      for Eclipse 2022-03 is here waiting for you. Check it out!&lt;/p&gt;
      &lt;/div&gt;
      &lt;div class=&quot;paragraph&quot;&gt;
      &lt;p&gt;We highly recommand to download or update to this latest version.&lt;/p&gt;
      &lt;/div&gt;
      &lt;/div&gt;
      &lt;/div&gt;
      &lt;div class=&quot;sect1&quot;&gt;
      &lt;h2 id=&quot;note-for-red-hat-codeready-studio-users&quot;&gt;&lt;a class=&quot;anchor&quot; href=&quot;https://tools.jboss.org/blog/news.atom#note-for-red-hat-codeready-studio-users&quot;&gt;&lt;/a&gt;Note for Red Hat CodeReady Studio users&lt;/h2&gt;
      &lt;div class=&quot;sectionbody&quot;&gt;
      &lt;div class=&quot;paragraph&quot;&gt;
      &lt;p&gt;The Red Hat CodeReady Studio product has reached end of life. The last release for the product was 12.21.3.GA. So there is no equivalent version of
      Red Hat CodeReady Studio for this version of JBoss Tools. Existing users of Red Hat CodeReady Studio can upgrade to this version of JBoss Tools.&lt;/p&gt;
      &lt;/div&gt;
      &lt;div class=&quot;paragraph&quot;&gt;
      &lt;p&gt;For more information, see &lt;a href=&quot;https://developers.redhat.com/articles/2022/04/06/announcement-red-hat-codeready-studio-reaches-end-life&quot;&gt;this article&lt;/a&gt;&lt;/p&gt;
      &lt;/div&gt;
      &lt;/div&gt;
      &lt;/div&gt;
      &lt;div class=&quot;sect1&quot;&gt;
      &lt;h2 id=&quot;installation&quot;&gt;&lt;a class=&quot;anchor&quot; href=&quot;https://tools.jboss.org/blog/news.atom#installation&quot;&gt;&lt;/a&gt;Installation&lt;/h2&gt;
      &lt;div class=&quot;sectionbody&quot;&gt;
      &lt;div class=&quot;paragraph&quot;&gt;
      &lt;p&gt;JBoss Tools or Bring-Your-Own-Eclipse (BYOE) CodeReady Studio require a bit more:&lt;/p&gt;
      &lt;/div&gt;
      &lt;div class=&quot;paragraph&quot;&gt;
      &lt;p&gt;This release requires at least Eclipse 4.23 (2022-03) but we recommend
      using the latest &lt;a href=&quot;https://www.eclipse.org/downloads/packages/release/2022-03/r/eclipse-ide-enterprise-java-and-web-developers&quot;&gt;Eclipse 4.23 2022-03 JEE Bundle&lt;/a&gt;&lt;/p&gt;
      &lt;/div&gt;
      &lt;div class=&quot;paragraph&quot;&gt;
      &lt;p&gt;since then you get most of the dependencies preinstalled.&lt;/p&gt;
      &lt;/div&gt;
      &lt;div class=&quot;admonitionblock warning&quot;&gt;
      &lt;table&gt;
      &lt;tbody&gt;&lt;tr&gt;
      &lt;td class=&quot;icon&quot;&gt;
      &lt;i class=&quot;fa icon-warning&quot; title=&quot;Warning&quot;&gt;&lt;/i&gt;
      &lt;/td&gt;
      &lt;td class=&quot;content&quot;&gt;
      &lt;div class=&quot;paragraph&quot;&gt;
      &lt;p&gt;Java11 is now required to run JBoss Tools (this is a requirement from Eclipse 4.17). So make sure to select a Java11 JDK in the installer.
      You can still work with pre-Java11 JDK/JRE and projects in the tool.&lt;/p&gt;
      &lt;/div&gt;
      &lt;/td&gt;
      &lt;/tr&gt;
      &lt;/tbody&gt;&lt;/table&gt;
      &lt;/div&gt;
      &lt;div class=&quot;paragraph&quot;&gt;
      &lt;p&gt;Once you have installed Eclipse, you can either find us on the Eclipse Marketplace under &quot;JBoss Tools&quot;.&lt;/p&gt;
      &lt;/div&gt;
      &lt;div class=&quot;paragraph&quot;&gt;
      &lt;p&gt;You can also use our update site directly.&lt;/p&gt;
      &lt;/div&gt;
      &lt;div class=&quot;literalblock&quot;&gt;
      &lt;div class=&quot;content&quot;&gt;
      &lt;pre&gt;https://download.jboss.org/jbosstools/photon/stable/updates/&lt;/pre&gt;
      &lt;/div&gt;
      &lt;/div&gt;
      &lt;div class=&quot;sect2&quot;&gt;
      &lt;h3 id=&quot;hibernate-tools&quot;&gt;&lt;a class=&quot;anchor&quot; href=&quot;https://tools.jboss.org/blog/news.atom#hibernate-tools&quot;&gt;&lt;/a&gt;Hibernate Tools&lt;/h3&gt;
      &lt;div class=&quot;sect3&quot;&gt;
      &lt;h4 id=&quot;hibernate-runtime-provider-updates&quot;&gt;&lt;a class=&quot;anchor&quot; href=&quot;https://tools.jboss.org/blog/news.atom#hibernate-runtime-provider-updates&quot;&gt;&lt;/a&gt;Hibernate Runtime Provider Updates&lt;/h4&gt;
      &lt;div class=&quot;paragraph&quot;&gt;
      &lt;p&gt;A number of additions and updates have been performed on the available Hibernate runtime  providers.&lt;/p&gt;
      &lt;/div&gt;
      &lt;div class=&quot;sect4&quot;&gt;
      &lt;h5 id=&quot;runtime-provider-updates&quot;&gt;&lt;a class=&quot;anchor&quot; href=&quot;https://tools.jboss.org/blog/news.atom#runtime-provider-updates&quot;&gt;&lt;/a&gt;Runtime Provider Updates&lt;/h5&gt;
      &lt;div class=&quot;paragraph&quot;&gt;
      &lt;p&gt;The Hibernate 6.0 runtime provider (Preview) now incorporates Hibernate Core version 6.0.0.CR2 and Hibernate Tools version 6.0.0.CR2.&lt;/p&gt;
      &lt;/div&gt;
      &lt;div class=&quot;paragraph&quot;&gt;
      &lt;p&gt;The Hibernate 5.6 runtime provider now incorporates Hibernate Core version 5.6.7.Final and Hibernate Tools version 5.6.7.Final.&lt;/p&gt;
      &lt;/div&gt;
      &lt;div class=&quot;paragraph&quot;&gt;
      &lt;p&gt;The Hibernate 4.3 runtime provider now incorporates Hibernate Tools version 4.3.6.Final.&lt;/p&gt;
      &lt;/div&gt;
      &lt;div class=&quot;paragraph&quot;&gt;
      &lt;p&gt;The Hibernate 3.6 runtime provider now incorporates Hibernate Tools version 3.6.2.Final.&lt;/p&gt;
      &lt;/div&gt;
      &lt;div class=&quot;paragraph&quot;&gt;
      &lt;p&gt;The Hibernate 3.5 runtime provider now incorporates Hibernate Tools version 3.5.3.Final.&lt;/p&gt;
      &lt;/div&gt;
      &lt;/div&gt;
      &lt;/div&gt;
      &lt;/div&gt;
      &lt;div class=&quot;sect2&quot;&gt;
      &lt;h3 id=&quot;quarkus-tools&quot;&gt;&lt;a class=&quot;anchor&quot; href=&quot;https://tools.jboss.org/blog/news.atom#quarkus-tools&quot;&gt;&lt;/a&gt;Quarkus Tools&lt;/h3&gt;
      &lt;div class=&quot;sect3&quot;&gt;
      &lt;h4 id=&quot;qute-templates-support&quot;&gt;&lt;a class=&quot;anchor&quot; href=&quot;https://tools.jboss.org/blog/news.atom#qute-templates-support&quot;&gt;&lt;/a&gt;Qute templates support&lt;/h4&gt;
      &lt;div class=&quot;paragraph&quot;&gt;
      &lt;p&gt;Qute templates support has been added. This allows Quarkus developers to get enhanced editing experience to Qute templates located in their projects.&lt;/p&gt;
      &lt;/div&gt;
      &lt;div class=&quot;paragraph&quot;&gt;
      &lt;p&gt;A Qute template is any file located under &lt;code&gt;src/main/resources/templates&lt;/code&gt;  and with the &lt;code&gt;html&lt;/code&gt;, &lt;code&gt;yaml&lt;/code&gt;, &lt;code&gt;yml&lt;/code&gt;, &lt;code&gt;json&lt;/code&gt; or &lt;code&gt;txt&lt;/code&gt; extension.&lt;/p&gt;
      &lt;/div&gt;
      &lt;div class=&quot;paragraph&quot;&gt;
      &lt;p&gt;Qute support is enabled on any project that has a dependency on the Qute library.&lt;/p&gt;
      &lt;/div&gt;
      &lt;div class=&quot;paragraph&quot;&gt;
      &lt;p&gt;You can generate a Qute enabled project with the Quarkus project wizard and choosing the RESTEasy Classic Qute extension&lt;/p&gt;
      &lt;/div&gt;
      &lt;div class=&quot;imageblock&quot;&gt;
      &lt;div class=&quot;content&quot;&gt;
      &lt;img alt=&quot;quarkus33&quot; src=&quot;https://tools.jboss.org/documentation/whatsnew/quarkus/images/quarkus33.gif&quot; /&gt;
      &lt;/div&gt;
      &lt;/div&gt;
      &lt;/div&gt;
      &lt;div class=&quot;sect3&quot;&gt;
      &lt;h4 id=&quot;qute-features&quot;&gt;&lt;a class=&quot;anchor&quot; href=&quot;https://tools.jboss.org/blog/news.atom#qute-features&quot;&gt;&lt;/a&gt;Qute features&lt;/h4&gt;
      &lt;div class=&quot;paragraph&quot;&gt;
      &lt;p&gt;Features included into the Qute support are:&lt;/p&gt;
      &lt;/div&gt;
      &lt;div class=&quot;ulist&quot;&gt;
      &lt;ul&gt;
      &lt;li&gt;
      &lt;p&gt;Integration between Java files and Qute templates files&lt;/p&gt;
      &lt;/li&gt;
      &lt;li&gt;
      &lt;p&gt;Method parameter support in Qute template files&lt;/p&gt;
      &lt;/li&gt;
      &lt;li&gt;
      &lt;p&gt;Java Type Hover Support for Qute Templates&lt;/p&gt;
      &lt;/li&gt;
      &lt;li&gt;
      &lt;p&gt;Linked Editing Range Support in Qute Templates&lt;/p&gt;
      &lt;/li&gt;
      &lt;li&gt;
      &lt;p&gt;Qute Section Completion&lt;/p&gt;
      &lt;/li&gt;
      &lt;li&gt;
      &lt;p&gt;Support for Qute Validation&lt;/p&gt;
      &lt;/li&gt;
      &lt;li&gt;
      &lt;p&gt;Completion for Qute Value Resolvers&lt;/p&gt;
      &lt;/li&gt;
      &lt;li&gt;
      &lt;p&gt;Support for @TemplateExtension Methods&lt;/p&gt;
      &lt;/li&gt;
      &lt;li&gt;
      &lt;p&gt;Support for Directly Injecting Beans into Qute Templates&lt;/p&gt;
      &lt;/li&gt;
      &lt;/ul&gt;
      &lt;/div&gt;
      &lt;/div&gt;
      &lt;div class=&quot;sect3&quot;&gt;
      &lt;h4 id=&quot;integration-between-java-files-and-qute-templates-files&quot;&gt;&lt;a class=&quot;anchor&quot; href=&quot;https://tools.jboss.org/blog/news.atom#integration-between-java-files-and-qute-templates-files&quot;&gt;&lt;/a&gt;Integration between Java files and Qute templates files&lt;/h4&gt;
      &lt;div class=&quot;paragraph&quot;&gt;
      &lt;p&gt;Any reference to a Qute template file from a Java file show the option to generate the Qute template file (if the Qute template file has not been found in the project) or navigate to the Qute template file.&lt;/p&gt;
      &lt;/div&gt;
      &lt;div class=&quot;imageblock&quot;&gt;
      &lt;div class=&quot;content&quot;&gt;
      &lt;img alt=&quot;quarkus34&quot; src=&quot;https://tools.jboss.org/documentation/whatsnew/quarkus/images/quarkus34.gif&quot; /&gt;
      &lt;/div&gt;
      &lt;/div&gt;
      &lt;/div&gt;
      &lt;div class=&quot;sect3&quot;&gt;
      &lt;h4 id=&quot;method-parameter-support-in-qute-template-files&quot;&gt;&lt;a class=&quot;anchor&quot; href=&quot;https://tools.jboss.org/blog/news.atom#method-parameter-support-in-qute-template-files&quot;&gt;&lt;/a&gt;Method parameter support in Qute template files&lt;/h4&gt;
      &lt;div class=&quot;paragraph&quot;&gt;
      &lt;p&gt;The Qute language server has support for built-in and user-defined Java classes, including parameter completion and validation for their methods. Take advantage of this to easily avoid Java related mistakes.&lt;/p&gt;
      &lt;/div&gt;
      &lt;div class=&quot;imageblock&quot;&gt;
      &lt;div class=&quot;content&quot;&gt;
      &lt;img alt=&quot;quarkus35&quot; src=&quot;https://tools.jboss.org/documentation/whatsnew/quarkus/images/quarkus35.gif&quot; /&gt;
      &lt;/div&gt;
      &lt;/div&gt;
      &lt;/div&gt;
      &lt;div class=&quot;sect3&quot;&gt;
      &lt;h4 id=&quot;java-type-hover-support-for-qute-templates&quot;&gt;&lt;a class=&quot;anchor&quot; href=&quot;https://tools.jboss.org/blog/news.atom#java-type-hover-support-for-qute-templates&quot;&gt;&lt;/a&gt;Java Type Hover Support for Qute Templates&lt;/h4&gt;
      &lt;div class=&quot;paragraph&quot;&gt;
      &lt;p&gt;When hovering over an expression in a Qute template, the Java type (built-in or user defined) will be displayed.&lt;/p&gt;
      &lt;/div&gt;
      &lt;div class=&quot;imageblock&quot;&gt;
      &lt;div class=&quot;content&quot;&gt;
      &lt;img alt=&quot;quarkus36&quot; src=&quot;https://tools.jboss.org/documentation/whatsnew/quarkus/images/quarkus36.gif&quot; /&gt;
      &lt;/div&gt;
      &lt;/div&gt;
      &lt;/div&gt;
      &lt;div class=&quot;sect3&quot;&gt;
      &lt;h4 id=&quot;linked-editing-range-support-in-qute-templates&quot;&gt;&lt;a class=&quot;anchor&quot; href=&quot;https://tools.jboss.org/blog/news.atom#linked-editing-range-support-in-qute-templates&quot;&gt;&lt;/a&gt;Linked Editing Range Support in Qute Templates&lt;/h4&gt;
      &lt;div class=&quot;paragraph&quot;&gt;
      &lt;p&gt;Similar to most language, linked editing is now supported for Qute templates , allowing for simultaneous renaming of multiple parameter expressions.&lt;/p&gt;
      &lt;/div&gt;
      &lt;div class=&quot;imageblock&quot;&gt;
      &lt;div class=&quot;content&quot;&gt;
      &lt;img alt=&quot;quarkus37&quot; src=&quot;https://tools.jboss.org/documentation/whatsnew/quarkus/images/quarkus37.gif&quot; /&gt;
      &lt;/div&gt;
      &lt;/div&gt;
      &lt;/div&gt;
      &lt;div class=&quot;sect3&quot;&gt;
      &lt;h4 id=&quot;qute-section-completion&quot;&gt;&lt;a class=&quot;anchor&quot; href=&quot;https://tools.jboss.org/blog/news.atom#qute-section-completion&quot;&gt;&lt;/a&gt;Qute Section Completion&lt;/h4&gt;
      &lt;div class=&quot;paragraph&quot;&gt;
      &lt;p&gt;Qute templates use sections in its templating language to power any logic required when compiling and displaying the resulting document. To support this, the extension’s Qute support populates a completion list with all available Qute sections, along with any parameters they take and a small code snippet of its usage.&lt;/p&gt;
      &lt;/div&gt;
      &lt;div class=&quot;imageblock&quot;&gt;
      &lt;div class=&quot;content&quot;&gt;
      &lt;img alt=&quot;quarkus38&quot; src=&quot;https://tools.jboss.org/documentation/whatsnew/quarkus/images/quarkus38.gif&quot; /&gt;
      &lt;/div&gt;
      &lt;/div&gt;
      &lt;/div&gt;
      &lt;div class=&quot;sect3&quot;&gt;
      &lt;h4 id=&quot;support-for-qute-validation&quot;&gt;&lt;a class=&quot;anchor&quot; href=&quot;https://tools.jboss.org/blog/news.atom#support-for-qute-validation&quot;&gt;&lt;/a&gt;Support for Qute Validation&lt;/h4&gt;
      &lt;div class=&quot;paragraph&quot;&gt;
      &lt;p&gt;Java and Qute validation is included for Qute templates with Quarkus Tools, including diagnostics and quick fix suggestions.&lt;/p&gt;
      &lt;/div&gt;
      &lt;div class=&quot;imageblock&quot;&gt;
      &lt;div class=&quot;content&quot;&gt;
      &lt;img alt=&quot;quarkus39&quot; src=&quot;https://tools.jboss.org/documentation/whatsnew/quarkus/images/quarkus39.gif&quot; /&gt;
      &lt;/div&gt;
      &lt;/div&gt;
      &lt;div class=&quot;paragraph&quot;&gt;
      &lt;p&gt;The developer has the ability to disable this validation in their settings through the &lt;code&gt;Window&lt;/code&gt; → &lt;code&gt;Preferences&lt;/code&gt; → &lt;code&gt;JBoss Tools&lt;/code&gt; → &lt;code&gt;Qute&lt;/code&gt;.&lt;/p&gt;
      &lt;/div&gt;
      &lt;div class=&quot;imageblock&quot;&gt;
      &lt;div class=&quot;content&quot;&gt;
      &lt;img alt=&quot;quarkus40&quot; src=&quot;https://tools.jboss.org/documentation/whatsnew/quarkus/images/quarkus40.png&quot; /&gt;
      &lt;/div&gt;
      &lt;/div&gt;
      &lt;div class=&quot;paragraph&quot;&gt;
      &lt;p&gt;The second table contains a list of Qute templates (as regular expressions) for which validation will be excluded.&lt;/p&gt;
      &lt;/div&gt;
      &lt;div class=&quot;paragraph&quot;&gt;
      &lt;p&gt;If any of the available validation is disturbing your development, you can disable Qute validation for the file project with a single click, using a “Quick Fix” that appears on every Qute related diagnostic&lt;/p&gt;
      &lt;/div&gt;
      &lt;div class=&quot;imageblock&quot;&gt;
      &lt;div class=&quot;content&quot;&gt;
      &lt;img alt=&quot;quarkus41&quot; src=&quot;https://tools.jboss.org/documentation/whatsnew/quarkus/images/quarkus41.gif&quot; /&gt;
      &lt;/div&gt;
      &lt;/div&gt;
      &lt;/div&gt;
      &lt;div class=&quot;sect3&quot;&gt;
      &lt;h4 id=&quot;completion-for-qute-value-resolvers&quot;&gt;&lt;a class=&quot;anchor&quot; href=&quot;https://tools.jboss.org/blog/news.atom#completion-for-qute-value-resolvers&quot;&gt;&lt;/a&gt;Completion for Qute Value Resolvers&lt;/h4&gt;
      &lt;div class=&quot;paragraph&quot;&gt;
      &lt;p&gt;Paired with corresponding Java methods, built-in Java classes also have built-in Qute value resolvers made available by the Qute templating engine that is evaluated and outputs, or resolves to, a value. Quarkus Tools supports completion, hover and snippet generation for these built-in value resolvers.&lt;/p&gt;
      &lt;/div&gt;
      &lt;div class=&quot;imageblock&quot;&gt;
      &lt;div class=&quot;content&quot;&gt;
      &lt;img alt=&quot;quarkus42&quot; src=&quot;https://tools.jboss.org/documentation/whatsnew/quarkus/images/quarkus42.gif&quot; /&gt;
      &lt;/div&gt;
      &lt;/div&gt;
      &lt;/div&gt;
      &lt;div class=&quot;sect3&quot;&gt;
      &lt;h4 id=&quot;support-for-templateextension-methods&quot;&gt;&lt;a class=&quot;anchor&quot; href=&quot;https://tools.jboss.org/blog/news.atom#support-for-templateextension-methods&quot;&gt;&lt;/a&gt;Support for @TemplateExtension Methods&lt;/h4&gt;
      &lt;div class=&quot;paragraph&quot;&gt;
      &lt;p&gt;Template extension methods are used to extend the set of accessible properties of data objects. Qute support in Quarkus Tools has support for marked @TemplateExtension Java methods, which extend a given data model.&lt;/p&gt;
      &lt;/div&gt;
      &lt;div class=&quot;imageblock&quot;&gt;
      &lt;div class=&quot;content&quot;&gt;
      &lt;img alt=&quot;quarkus43&quot; src=&quot;https://tools.jboss.org/documentation/whatsnew/quarkus/images/quarkus43.gif&quot; /&gt;
      &lt;/div&gt;
      &lt;/div&gt;
      &lt;/div&gt;
      &lt;div class=&quot;sect3&quot;&gt;
      &lt;h4 id=&quot;support-for-directly-injecting-beans-into-qute-templates&quot;&gt;&lt;a class=&quot;anchor&quot; href=&quot;https://tools.jboss.org/blog/news.atom#support-for-directly-injecting-beans-into-qute-templates&quot;&gt;&lt;/a&gt;Support for Directly Injecting Beans into Qute Templates&lt;/h4&gt;
      &lt;div class=&quot;paragraph&quot;&gt;
      &lt;p&gt;A CDI bean annotated with @Named can be referenced in any template through cdi and/or inject namespaces. Quarkus Tools provides completion and definition navigation support for Beans.&lt;/p&gt;
      &lt;/div&gt;
      &lt;div class=&quot;imageblock&quot;&gt;
      &lt;div class=&quot;content&quot;&gt;
      &lt;img alt=&quot;quarkus44&quot; src=&quot;https://tools.jboss.org/documentation/whatsnew/quarkus/images/quarkus44.gif&quot; /&gt;
      &lt;/div&gt;
      &lt;/div&gt;
      &lt;/div&gt;
      &lt;/div&gt;
      &lt;div class=&quot;sect2&quot;&gt;
      &lt;h3 id=&quot;and-more&quot;&gt;&lt;a class=&quot;anchor&quot; href=&quot;https://tools.jboss.org/blog/news.atom#and-more&quot;&gt;&lt;/a&gt;And more…​&lt;/h3&gt;
      &lt;div class=&quot;paragraph&quot;&gt;
      &lt;p&gt;You can find more noteworthy updates in on &lt;a href=&quot;https://tools.jboss.org/documentation/whatsnew/jbosstools/4.23.0.Final.html&quot;&gt;this page&lt;/a&gt;.&lt;/p&gt;
      &lt;/div&gt;
      &lt;/div&gt;
      &lt;/div&gt;
      &lt;/div&gt;
      &lt;div class=&quot;sect1&quot;&gt;
      &lt;h2 id=&quot;what-is-next&quot;&gt;&lt;a class=&quot;anchor&quot; href=&quot;https://tools.jboss.org/blog/news.atom#what-is-next&quot;&gt;&lt;/a&gt;What is next?&lt;/h2&gt;
      &lt;div class=&quot;sectionbody&quot;&gt;
      &lt;div class=&quot;paragraph&quot;&gt;
      &lt;p&gt;Having JBoss Tools 4.23.0 out we are already working on the next release.&lt;/p&gt;
      &lt;/div&gt;
      &lt;div class=&quot;paragraph&quot;&gt;
      &lt;p&gt;Enjoy!&lt;/p&gt;
      &lt;/div&gt;
      &lt;div class=&quot;paragraph&quot;&gt;
      &lt;p&gt;Jeff Maury&lt;/p&gt;
      &lt;/div&gt;
      &lt;/div&gt;
      &lt;/div&gt;&lt;/div&gt;</description>
	<pubDate>Wed, 06 Jul 2022 12:07:23 +0000</pubDate>
</item>
<item>
	<title>JBoss Tools Team: JBoss Tools for Eclipse 2022-03RC1</title>
	<guid isPermaLink="true">https://tools.jboss.org/blog/4.23.0.am1.html</guid>
	<link>https://tools.jboss.org/blog/4.23.0.am1.html</link>
	<description>&lt;div&gt;&lt;div id=&quot;preamble&quot;&gt;
      &lt;div class=&quot;sectionbody&quot;&gt;
      &lt;div class=&quot;paragraph&quot;&gt;
      &lt;p&gt;Happy to announce 4.23.0.AM1 (Developer Milestone 1) build for Eclipse 2022-03RC1.&lt;/p&gt;
      &lt;/div&gt;
      &lt;div class=&quot;paragraph&quot;&gt;
      &lt;p&gt;Downloads available at &lt;a href=&quot;https://tools.jboss.org/downloads/jbosstools/2022-03/4.23.0.AM1.html&quot;&gt;JBoss Tools 4.23.0 AM1&lt;/a&gt;.&lt;/p&gt;
      &lt;/div&gt;
      &lt;/div&gt;
      &lt;/div&gt;
      &lt;div class=&quot;sect1&quot;&gt;
      &lt;h2 id=&quot;what-is-new&quot;&gt;&lt;a class=&quot;anchor&quot; href=&quot;https://tools.jboss.org/blog/news.atom#what-is-new&quot;&gt;&lt;/a&gt;What is New?&lt;/h2&gt;
      &lt;div class=&quot;sectionbody&quot;&gt;
      &lt;div class=&quot;paragraph&quot;&gt;
      &lt;p&gt;Full info is at &lt;a href=&quot;https://tools.jboss.org/documentation/whatsnew/jbosstools/4.23.0.AM1.html&quot;&gt;this page&lt;/a&gt;. Some highlights are below.&lt;/p&gt;
      &lt;/div&gt;
      &lt;div class=&quot;sect2&quot;&gt;
      &lt;h3 id=&quot;hibernate-tools&quot;&gt;&lt;a class=&quot;anchor&quot; href=&quot;https://tools.jboss.org/blog/news.atom#hibernate-tools&quot;&gt;&lt;/a&gt;Hibernate Tools&lt;/h3&gt;
      &lt;div class=&quot;sect3&quot;&gt;
      &lt;h4 id=&quot;hibernate-runtime-provider-updates&quot;&gt;&lt;a class=&quot;anchor&quot; href=&quot;https://tools.jboss.org/blog/news.atom#hibernate-runtime-provider-updates&quot;&gt;&lt;/a&gt;Hibernate Runtime Provider Updates&lt;/h4&gt;
      &lt;div class=&quot;paragraph&quot;&gt;
      &lt;p&gt;A number of additions and updates have been performed on the available Hibernate runtime  providers.&lt;/p&gt;
      &lt;/div&gt;
      &lt;div class=&quot;sect4&quot;&gt;
      &lt;h5 id=&quot;runtime-provider-updates&quot;&gt;&lt;a class=&quot;anchor&quot; href=&quot;https://tools.jboss.org/blog/news.atom#runtime-provider-updates&quot;&gt;&lt;/a&gt;Runtime Provider Updates&lt;/h5&gt;
      &lt;div class=&quot;paragraph&quot;&gt;
      &lt;p&gt;The Hibernate 6.0 runtime provider (Preview) now incorporates Hibernate Core version 6.0.0.CR1 and Hibernate Tools version 6.0.0.CR1.&lt;/p&gt;
      &lt;/div&gt;
      &lt;div class=&quot;paragraph&quot;&gt;
      &lt;p&gt;The Hibernate 5.6 runtime provider now incorporates Hibernate Core version 5.6.5.Final and Hibernate Tools version 5.6.5.Final.&lt;/p&gt;
      &lt;/div&gt;
      &lt;/div&gt;
      &lt;/div&gt;
      &lt;/div&gt;
      &lt;div class=&quot;sect2&quot;&gt;
      &lt;h3 id=&quot;and-more&quot;&gt;&lt;a class=&quot;anchor&quot; href=&quot;https://tools.jboss.org/blog/news.atom#and-more&quot;&gt;&lt;/a&gt;And more…​&lt;/h3&gt;
      &lt;div class=&quot;paragraph&quot;&gt;
      &lt;p&gt;You can find more noteworthy updates in on &lt;a href=&quot;https://tools.jboss.org/documentation/whatsnew/jbosstools/4.23.0.AM1.html&quot;&gt;this page&lt;/a&gt;.&lt;/p&gt;
      &lt;/div&gt;
      &lt;div class=&quot;paragraph&quot;&gt;
      &lt;p&gt;Enjoy!&lt;/p&gt;
      &lt;/div&gt;
      &lt;div class=&quot;paragraph&quot;&gt;
      &lt;p&gt;Jeff Maury&lt;/p&gt;
      &lt;/div&gt;
      &lt;/div&gt;
      &lt;/div&gt;
      &lt;/div&gt;&lt;/div&gt;</description>
	<pubDate>Wed, 06 Jul 2022 12:07:23 +0000</pubDate>
</item>
<item>
	<title>JBoss Tools Team: JBoss Tools 4.21.2.AM1 for Eclipse 2021-09</title>
	<guid isPermaLink="true">https://tools.jboss.org/blog/4.21.2.am1.html</guid>
	<link>https://tools.jboss.org/blog/4.21.2.am1.html</link>
	<description>&lt;div&gt;&lt;div id=&quot;preamble&quot;&gt;
      &lt;div class=&quot;sectionbody&quot;&gt;
      &lt;div class=&quot;paragraph&quot;&gt;
      &lt;p&gt;Happy to announce 4.21.2.AM1 (Developer Milestone 1) build for Eclipse 2021-09.&lt;/p&gt;
      &lt;/div&gt;
      &lt;div class=&quot;paragraph&quot;&gt;
      &lt;p&gt;Downloads available at &lt;a href=&quot;https://tools.jboss.org/downloads/jbosstools/2021-09/4.21.2.AM1.html&quot;&gt;JBoss Tools 4.21.2.AM1&lt;/a&gt;.&lt;/p&gt;
      &lt;/div&gt;
      &lt;/div&gt;
      &lt;/div&gt;
      &lt;div class=&quot;sect1&quot;&gt;
      &lt;h2 id=&quot;what-is-new&quot;&gt;&lt;a class=&quot;anchor&quot; href=&quot;https://tools.jboss.org/blog/news.atom#what-is-new&quot;&gt;&lt;/a&gt;What is New?&lt;/h2&gt;
      &lt;div class=&quot;sectionbody&quot;&gt;
      &lt;div class=&quot;paragraph&quot;&gt;
      &lt;p&gt;Full info is at &lt;a href=&quot;https://tools.jboss.org/documentation/whatsnew/jbosstools/4.21.2.AM1.html&quot;&gt;this page&lt;/a&gt;. Some highlights are below.&lt;/p&gt;
      &lt;/div&gt;
      &lt;div class=&quot;sect2&quot;&gt;
      &lt;h3 id=&quot;quarkus-tools&quot;&gt;&lt;a class=&quot;anchor&quot; href=&quot;https://tools.jboss.org/blog/news.atom#quarkus-tools&quot;&gt;&lt;/a&gt;Quarkus Tools&lt;/h3&gt;
      
      &lt;/div&gt;
      &lt;/div&gt;
      &lt;/div&gt;
      &lt;div class=&quot;sect1&quot;&gt;
      &lt;h2 id=&quot;quarkus-stream-selection-in-the-new-quarkus-project-wizard&quot;&gt;&lt;a class=&quot;anchor&quot; href=&quot;https://tools.jboss.org/blog/news.atom#quarkus-stream-selection-in-the-new-quarkus-project-wizard&quot;&gt;&lt;/a&gt;Quarkus stream selection in the new Quarkus project wizard&lt;/h2&gt;
      &lt;div class=&quot;sectionbody&quot;&gt;
      &lt;div class=&quot;paragraph&quot;&gt;
      &lt;p&gt;When a new Quarkus project/module is to be generated, it is now possible to select the Quarkus stream (see &lt;a href=&quot;https://quarkus.io/blog/quarkus-2x-platform-quarkiverse-registry/&quot;&gt;this article&lt;/a&gt;) on which the generated application will be based on.&lt;/p&gt;
      &lt;/div&gt;
      &lt;div class=&quot;paragraph&quot;&gt;
      &lt;p&gt;By default, the recommended (latest release) will be selected but you can choose another one:&lt;/p&gt;
      &lt;/div&gt;
      &lt;div class=&quot;imageblock&quot;&gt;
      &lt;div class=&quot;content&quot;&gt;
      &lt;img alt=&quot;quarkus31&quot; src=&quot;https://tools.jboss.org/documentation/whatsnew/quarkus/images/quarkus31.gif&quot; /&gt;
      &lt;/div&gt;
      &lt;/div&gt;
      &lt;/div&gt;
      &lt;/div&gt;
      &lt;div class=&quot;sect1&quot;&gt;
      &lt;h2 id=&quot;enhanced-code-completion-in-java-files&quot;&gt;&lt;a class=&quot;anchor&quot; href=&quot;https://tools.jboss.org/blog/news.atom#enhanced-code-completion-in-java-files&quot;&gt;&lt;/a&gt;Enhanced code completion in Java files&lt;/h2&gt;
      &lt;div class=&quot;sectionbody&quot;&gt;
      &lt;div class=&quot;paragraph&quot;&gt;
      &lt;p&gt;When you want to define a fallback method thanks to the &lt;code&gt;@Fallback&lt;/code&gt; annotation from MicroProfile Fault Tolerance, the code completion is activated on the &lt;code&gt;fallbackMethod&lt;/code&gt; member and will propose you available target methods.&lt;/p&gt;
      &lt;/div&gt;
      &lt;div class=&quot;imageblock&quot;&gt;
      &lt;div class=&quot;content&quot;&gt;
      &lt;img alt=&quot;quarkus32&quot; src=&quot;https://tools.jboss.org/documentation/whatsnew/quarkus/images/quarkus32.gif&quot; /&gt;
      &lt;/div&gt;
      &lt;/div&gt;
      &lt;/div&gt;
      &lt;/div&gt;
      &lt;div class=&quot;sect1&quot;&gt;
      &lt;h2 id=&quot;quarkus-launch-configuration-workspace-resolution&quot;&gt;&lt;a class=&quot;anchor&quot; href=&quot;https://tools.jboss.org/blog/news.atom#quarkus-launch-configuration-workspace-resolution&quot;&gt;&lt;/a&gt;Quarkus launch configuration workspace resolution&lt;/h2&gt;
      &lt;div class=&quot;sectionbody&quot;&gt;
      &lt;div class=&quot;paragraph&quot;&gt;
      &lt;p&gt;When you define a Quarkus launch/debug configuration, it is linked to a specific project from your workspace. If this project has a dependency on another project from the workspace, it will be resolved against the workspace and you donâ€™t have to install the dependency in the local Maven/Gradle cache so that it can be resolved.&lt;/p&gt;
      &lt;/div&gt;
      &lt;div class=&quot;sect2&quot;&gt;
      &lt;h3 id=&quot;hibernate-tools&quot;&gt;&lt;a class=&quot;anchor&quot; href=&quot;https://tools.jboss.org/blog/news.atom#hibernate-tools&quot;&gt;&lt;/a&gt;Hibernate Tools&lt;/h3&gt;
      &lt;div class=&quot;paragraph&quot;&gt;
      &lt;p&gt;A number of additions and updates have been performed on the available Hibernate runtime  providers.&lt;/p&gt;
      &lt;/div&gt;
      &lt;div class=&quot;sect3&quot;&gt;
      &lt;h4 id=&quot;runtime-provider-updates&quot;&gt;&lt;a class=&quot;anchor&quot; href=&quot;https://tools.jboss.org/blog/news.atom#runtime-provider-updates&quot;&gt;&lt;/a&gt;Runtime Provider Updates&lt;/h4&gt;
      &lt;div class=&quot;paragraph&quot;&gt;
      &lt;p&gt;The Hibernate 5.6 runtime provider now incorporates Hibernate Core version 5.6.1.Final and Hibernate Tools version 5.6.1.Final.&lt;/p&gt;
      &lt;/div&gt;
      &lt;div class=&quot;paragraph&quot;&gt;
      &lt;p&gt;The Hibernate 5.4 runtime provider now incorporates Hibernate Core version 5.4.8.Final and Hibernate Tools version 5.4.8.Final.&lt;/p&gt;
      &lt;/div&gt;
      &lt;div class=&quot;paragraph&quot;&gt;
      &lt;p&gt;The Hibernate 5.3 runtime provider now incorporates Hibernate Core version 5.3.24.Final and Hibernate Tools version 5.3.24.Final.&lt;/p&gt;
      &lt;/div&gt;
      &lt;div class=&quot;paragraph&quot;&gt;
      &lt;p&gt;Enjoy!&lt;/p&gt;
      &lt;/div&gt;
      &lt;div class=&quot;paragraph&quot;&gt;
      &lt;p&gt;Jeff Maury&lt;/p&gt;
      &lt;/div&gt;
      &lt;/div&gt;
      &lt;/div&gt;
      &lt;/div&gt;
      &lt;/div&gt;&lt;/div&gt;</description>
	<pubDate>Wed, 06 Jul 2022 12:07:23 +0000</pubDate>
</item>
<item>
	<title>JBoss Tools Team: JBoss Tools 4.21.0.AM1 for Eclipse 2021-09</title>
	<guid isPermaLink="true">https://tools.jboss.org/blog/4.21.0.am1.html</guid>
	<link>https://tools.jboss.org/blog/4.21.0.am1.html</link>
	<description>&lt;div&gt;&lt;div id=&quot;preamble&quot;&gt;
      &lt;div class=&quot;sectionbody&quot;&gt;
      &lt;div class=&quot;paragraph&quot;&gt;
      &lt;p&gt;Happy to announce 4.21.0.AM1 (Developer Milestone 1) build for Eclipse 2021-09.&lt;/p&gt;
      &lt;/div&gt;
      &lt;div class=&quot;paragraph&quot;&gt;
      &lt;p&gt;Downloads available at &lt;a href=&quot;https://tools.jboss.org/downloads/jbosstools/2021-09/4.21.0.AM1.html&quot;&gt;JBoss Tools 4.21.0 AM1&lt;/a&gt;.&lt;/p&gt;
      &lt;/div&gt;
      &lt;/div&gt;
      &lt;/div&gt;
      &lt;div class=&quot;sect1&quot;&gt;
      &lt;h2 id=&quot;what-is-new&quot;&gt;&lt;a class=&quot;anchor&quot; href=&quot;https://tools.jboss.org/blog/news.atom#what-is-new&quot;&gt;&lt;/a&gt;What is New?&lt;/h2&gt;
      &lt;div class=&quot;sectionbody&quot;&gt;
      &lt;div class=&quot;paragraph&quot;&gt;
      &lt;p&gt;Full info is at &lt;a href=&quot;https://tools.jboss.org/documentation/whatsnew/jbosstools/4.21.0.AM1.html&quot;&gt;this page&lt;/a&gt;. Some highlights are below.&lt;/p&gt;
      &lt;/div&gt;
      &lt;div class=&quot;sect2&quot;&gt;
      &lt;h3 id=&quot;openshift&quot;&gt;&lt;a class=&quot;anchor&quot; href=&quot;https://tools.jboss.org/blog/news.atom#openshift&quot;&gt;&lt;/a&gt;OpenShift&lt;/h3&gt;
      &lt;div class=&quot;sect3&quot;&gt;
      &lt;h4 id=&quot;operator-based-services&quot;&gt;&lt;a class=&quot;anchor&quot; href=&quot;https://tools.jboss.org/blog/news.atom#operator-based-services&quot;&gt;&lt;/a&gt;Operator based services&lt;/h4&gt;
      &lt;div class=&quot;paragraph&quot;&gt;
      &lt;p&gt;When developing cloud native applications on OpenShift, developer may need to
      launch services (databases, messaging system,…​) that the application under
      development may need to connect to. The OpenShift tooling allowed to launch such
      services but it was based on the service catalog which is not available anymore on OpenShift 4.&lt;/p&gt;
      &lt;/div&gt;
      &lt;div class=&quot;paragraph&quot;&gt;
      &lt;p&gt;The new feature is based on operators which is the devops way of installing and
      managing software on Kubernetes clusters. So when you want to launch a service
      for your application, you will have to choose from the list of installed
      operators on your cluster and then select type of deployment you want.&lt;/p&gt;
      &lt;/div&gt;
      &lt;div class=&quot;paragraph&quot;&gt;
      &lt;p&gt;In the following example, there are two operators installed on our cluster:
      the &lt;a href=&quot;https://strimzi.io&quot;&gt;Strimzi&lt;/a&gt; operator for setting up Kafka clusters on Kubernetes
      and a Postgresql operator.&lt;/p&gt;
      &lt;/div&gt;
      &lt;div class=&quot;paragraph&quot;&gt;
      &lt;p&gt;For each operator, we can select the type of deployment we want to setup.&lt;/p&gt;
      &lt;/div&gt;
      &lt;div class=&quot;imageblock&quot;&gt;
      &lt;div class=&quot;content&quot;&gt;
      &lt;img alt=&quot;operator based services1&quot; src=&quot;https://tools.jboss.org/documentation/whatsnew/openshift/images/operator-based-services1.gif&quot; width=&quot;80%&quot; /&gt;
      &lt;/div&gt;
      &lt;/div&gt;
      &lt;div class=&quot;paragraph&quot;&gt;
      &lt;p&gt;After you’ve entered the name of your service, it will appear in the application explorer view:&lt;/p&gt;
      &lt;/div&gt;
      &lt;div class=&quot;imageblock&quot;&gt;
      &lt;div class=&quot;content&quot;&gt;
      &lt;img alt=&quot;operator based services2&quot; src=&quot;https://tools.jboss.org/documentation/whatsnew/openshift/images/operator-based-services2.png&quot; width=&quot;80%&quot; /&gt;
      &lt;/div&gt;
      &lt;/div&gt;
      &lt;/div&gt;
      &lt;/div&gt;
      &lt;div class=&quot;sect2&quot;&gt;
      &lt;h3 id=&quot;hibernate-tools&quot;&gt;&lt;a class=&quot;anchor&quot; href=&quot;https://tools.jboss.org/blog/news.atom#hibernate-tools&quot;&gt;&lt;/a&gt;Hibernate Tools&lt;/h3&gt;
      &lt;div class=&quot;paragraph&quot;&gt;
      &lt;p&gt;A number of additions and updates have been performed on the available Hibernate runtime  providers.&lt;/p&gt;
      &lt;/div&gt;
      &lt;div class=&quot;sect3&quot;&gt;
      &lt;h4 id=&quot;runtime-provider-updates&quot;&gt;&lt;a class=&quot;anchor&quot; href=&quot;https://tools.jboss.org/blog/news.atom#runtime-provider-updates&quot;&gt;&lt;/a&gt;Runtime Provider Updates&lt;/h4&gt;
      &lt;div class=&quot;paragraph&quot;&gt;
      &lt;p&gt;The Hibernate 5.5 runtime provider now incorporates Hibernate Core version 5.5.7.Final and Hibernate Tools version 5.5.7.Final.&lt;/p&gt;
      &lt;/div&gt;
      &lt;div class=&quot;paragraph&quot;&gt;
      &lt;p&gt;The Hibernate 5.3 runtime provider now incorporates Hibernate Core version 5.3.22.Final and Hibernate Tools version 5.3.22.Final.&lt;/p&gt;
      &lt;/div&gt;
      &lt;div class=&quot;paragraph&quot;&gt;
      &lt;p&gt;Enjoy!&lt;/p&gt;
      &lt;/div&gt;
      &lt;div class=&quot;paragraph&quot;&gt;
      &lt;p&gt;Jeff Maury&lt;/p&gt;
      &lt;/div&gt;
      &lt;/div&gt;
      &lt;/div&gt;
      &lt;/div&gt;
      &lt;/div&gt;&lt;/div&gt;</description>
	<pubDate>Wed, 06 Jul 2022 12:07:23 +0000</pubDate>
</item>
<item>
	<title>JBoss Tools Team: JBoss Tools 4.19.1.AM1 for Eclipse 2021-03</title>
	<guid isPermaLink="true">https://tools.jboss.org/blog/4.19.1.am1.html</guid>
	<link>https://tools.jboss.org/blog/4.19.1.am1.html</link>
	<description>&lt;div&gt;&lt;div id=&quot;preamble&quot;&gt;
      &lt;div class=&quot;sectionbody&quot;&gt;
      &lt;div class=&quot;paragraph&quot;&gt;
      &lt;p&gt;Happy to announce 4.19.1.AM1 (Developer Milestone 1) build for Eclipse 2021-03.&lt;/p&gt;
      &lt;/div&gt;
      &lt;div class=&quot;paragraph&quot;&gt;
      &lt;p&gt;Downloads available at &lt;a href=&quot;https://tools.jboss.org/downloads/jbosstools/2021-03/4.19.1.AM1.html&quot;&gt;JBoss Tools 4.19.1 AM1&lt;/a&gt;.&lt;/p&gt;
      &lt;/div&gt;
      &lt;/div&gt;
      &lt;/div&gt;
      &lt;div class=&quot;sect1&quot;&gt;
      &lt;h2 id=&quot;what-is-new&quot;&gt;&lt;a class=&quot;anchor&quot; href=&quot;https://tools.jboss.org/blog/news.atom#what-is-new&quot;&gt;&lt;/a&gt;What is New?&lt;/h2&gt;
      &lt;div class=&quot;sectionbody&quot;&gt;
      &lt;div class=&quot;paragraph&quot;&gt;
      &lt;p&gt;Full info is at &lt;a href=&quot;https://tools.jboss.org/documentation/whatsnew/jbosstools/4.19.1.AM1.html&quot;&gt;this page&lt;/a&gt;. Some highlights are below.&lt;/p&gt;
      &lt;/div&gt;
      &lt;div class=&quot;sect2&quot;&gt;
      &lt;h3 id=&quot;openshift&quot;&gt;&lt;a class=&quot;anchor&quot; href=&quot;https://tools.jboss.org/blog/news.atom#openshift&quot;&gt;&lt;/a&gt;OpenShift&lt;/h3&gt;
      &lt;div class=&quot;sect3&quot;&gt;
      &lt;h4 id=&quot;improved-openshift-application-explorer&quot;&gt;&lt;a class=&quot;anchor&quot; href=&quot;https://tools.jboss.org/blog/news.atom#improved-openshift-application-explorer&quot;&gt;&lt;/a&gt;Improved OpenShift Application explorer&lt;/h4&gt;
      &lt;div class=&quot;paragraph&quot;&gt;
      &lt;p&gt;When the OpenShift cluster has no applications or projects, user is required to create them. However,
      it may not be obvious for the user that the corresponding function is available from a sub menu of the
      New context menu.&lt;/p&gt;
      &lt;/div&gt;
      &lt;div class=&quot;paragraph&quot;&gt;
      &lt;p&gt;So now, a link will be provided within the tree with an explanation message.&lt;/p&gt;
      &lt;/div&gt;
      &lt;div class=&quot;paragraph&quot;&gt;
      &lt;p&gt;If no projects are available, user will be guided to create one:&lt;/p&gt;
      &lt;/div&gt;
      &lt;div class=&quot;imageblock&quot;&gt;
      &lt;div class=&quot;content&quot;&gt;
      &lt;img alt=&quot;application explorer enhanced navigation1&quot; src=&quot;https://tools.jboss.org/documentation/whatsnew/openshift/images/application-explorer-enhanced-navigation1.gif&quot; width=&quot;80%&quot; /&gt;
      &lt;/div&gt;
      &lt;/div&gt;
      &lt;div class=&quot;paragraph&quot;&gt;
      &lt;p&gt;If no applications are available in a project, user will be guided to create a new component:&lt;/p&gt;
      &lt;/div&gt;
      &lt;div class=&quot;imageblock&quot;&gt;
      &lt;div class=&quot;content&quot;&gt;
      &lt;img alt=&quot;application explorer enhanced navigation2&quot; src=&quot;https://tools.jboss.org/documentation/whatsnew/openshift/images/application-explorer-enhanced-navigation2.gif&quot; width=&quot;80%&quot; /&gt;
      &lt;/div&gt;
      &lt;/div&gt;
      &lt;/div&gt;
      &lt;/div&gt;
      &lt;div class=&quot;sect2&quot;&gt;
      &lt;h3 id=&quot;hibernate-tools&quot;&gt;&lt;a class=&quot;anchor&quot; href=&quot;https://tools.jboss.org/blog/news.atom#hibernate-tools&quot;&gt;&lt;/a&gt;Hibernate Tools&lt;/h3&gt;
      &lt;div class=&quot;paragraph&quot;&gt;
      &lt;p&gt;A number of additions and updates have been performed on the available Hibernate runtime  providers.&lt;/p&gt;
      &lt;/div&gt;
      &lt;div class=&quot;sect3&quot;&gt;
      &lt;h4 id=&quot;runtime-provider-updates&quot;&gt;&lt;a class=&quot;anchor&quot; href=&quot;https://tools.jboss.org/blog/news.atom#runtime-provider-updates&quot;&gt;&lt;/a&gt;Runtime Provider Updates&lt;/h4&gt;
      &lt;div class=&quot;paragraph&quot;&gt;
      &lt;p&gt;The Hibernate 5.4 runtime provider now incorporates Hibernate Core version 5.4.32.Final and Hibernate Tools version 5.4.32.Final.&lt;/p&gt;
      &lt;/div&gt;
      &lt;div class=&quot;paragraph&quot;&gt;
      &lt;p&gt;Enjoy!&lt;/p&gt;
      &lt;/div&gt;
      &lt;div class=&quot;paragraph&quot;&gt;
      &lt;p&gt;Jeff Maury&lt;/p&gt;
      &lt;/div&gt;
      &lt;/div&gt;
      &lt;/div&gt;
      &lt;/div&gt;
      &lt;/div&gt;&lt;/div&gt;</description>
	<pubDate>Wed, 06 Jul 2022 12:07:23 +0000</pubDate>
</item>
<item>
	<title>JBoss Tools Team: JBoss Tools 4.19.0.AM1 for Eclipse 2021-03</title>
	<guid isPermaLink="true">https://tools.jboss.org/blog/4.19.0.am1.html</guid>
	<link>https://tools.jboss.org/blog/4.19.0.am1.html</link>
	<description>&lt;div&gt;&lt;div id=&quot;preamble&quot;&gt;
      &lt;div class=&quot;sectionbody&quot;&gt;
      &lt;div class=&quot;paragraph&quot;&gt;
      &lt;p&gt;Happy to announce 4.19.0.AM1 (Developer Milestone 1) build for Eclipse 2021-03.&lt;/p&gt;
      &lt;/div&gt;
      &lt;div class=&quot;paragraph&quot;&gt;
      &lt;p&gt;Downloads available at &lt;a href=&quot;https://tools.jboss.org/downloads/jbosstools/2021-03/4.19.0.AM1.html&quot;&gt;JBoss Tools 4.19.0 AM1&lt;/a&gt;.&lt;/p&gt;
      &lt;/div&gt;
      &lt;/div&gt;
      &lt;/div&gt;
      &lt;div class=&quot;sect1&quot;&gt;
      &lt;h2 id=&quot;what-is-new&quot;&gt;&lt;a class=&quot;anchor&quot; href=&quot;https://tools.jboss.org/blog/news.atom#what-is-new&quot;&gt;&lt;/a&gt;What is New?&lt;/h2&gt;
      &lt;div class=&quot;sectionbody&quot;&gt;
      &lt;div class=&quot;paragraph&quot;&gt;
      &lt;p&gt;Full info is at &lt;a href=&quot;https://tools.jboss.org/documentation/whatsnew/jbosstools/4.19.0.AM1.html&quot;&gt;this page&lt;/a&gt;. Some highlights are below.&lt;/p&gt;
      &lt;/div&gt;
      &lt;div class=&quot;sect2&quot;&gt;
      &lt;h3 id=&quot;openshift&quot;&gt;&lt;a class=&quot;anchor&quot; href=&quot;https://tools.jboss.org/blog/news.atom#openshift&quot;&gt;&lt;/a&gt;OpenShift&lt;/h3&gt;
      &lt;div class=&quot;sect3&quot;&gt;
      &lt;h4 id=&quot;browser-based-login-to-an-openshift-cluster&quot;&gt;&lt;a class=&quot;anchor&quot; href=&quot;https://tools.jboss.org/blog/news.atom#browser-based-login-to-an-openshift-cluster&quot;&gt;&lt;/a&gt;Browser based login to an OpenShift cluster&lt;/h4&gt;
      &lt;div class=&quot;paragraph&quot;&gt;
      &lt;p&gt;When it comes to login to a cluster, OpenShift Tools supported two different authentication mechanisms:&lt;/p&gt;
      &lt;/div&gt;
      &lt;div class=&quot;ulist&quot;&gt;
      &lt;ul&gt;
      &lt;li&gt;
      &lt;p&gt;user/password&lt;/p&gt;
      &lt;/li&gt;
      &lt;li&gt;
      &lt;p&gt;token&lt;/p&gt;
      &lt;/li&gt;
      &lt;/ul&gt;
      &lt;/div&gt;
      &lt;div class=&quot;paragraph&quot;&gt;
      &lt;p&gt;The drawback is that it does not cover clusters where a more enhanced and modern authentication infrastructure is in place. So it is now possible to login to the cluster through an embedded web browser.&lt;/p&gt;
      &lt;/div&gt;
      &lt;div class=&quot;paragraph&quot;&gt;
      &lt;p&gt;In order to use it, go to the Login context menu from the Application Explorer view:&lt;/p&gt;
      &lt;/div&gt;
      &lt;div class=&quot;imageblock&quot;&gt;
      &lt;div class=&quot;content&quot;&gt;
      &lt;img alt=&quot;weblogin1&quot; src=&quot;https://tools.jboss.org/documentation/whatsnew/openshift/images/weblogin1.png&quot; width=&quot;600&quot; /&gt;
      &lt;/div&gt;
      &lt;/div&gt;
      &lt;div class=&quot;paragraph&quot;&gt;
      &lt;p&gt;Click on the &lt;code&gt;Retrieve token&lt;/code&gt; button and an embedded web browser will be displayed:&lt;/p&gt;
      &lt;/div&gt;
      &lt;div class=&quot;imageblock&quot;&gt;
      &lt;div class=&quot;content&quot;&gt;
      &lt;img alt=&quot;weblogin2&quot; src=&quot;https://tools.jboss.org/documentation/whatsnew/openshift/images/weblogin2.png&quot; width=&quot;600&quot; /&gt;
      &lt;/div&gt;
      &lt;/div&gt;
      &lt;div class=&quot;paragraph&quot;&gt;
      &lt;p&gt;Complete the workflow until you see a page that contains &lt;code&gt;Display Token&lt;/code&gt;:&lt;/p&gt;
      &lt;/div&gt;
      &lt;div class=&quot;imageblock&quot;&gt;
      &lt;div class=&quot;content&quot;&gt;
      &lt;img alt=&quot;weblogin3&quot; src=&quot;https://tools.jboss.org/documentation/whatsnew/openshift/images/weblogin3.png&quot; width=&quot;600&quot; /&gt;
      &lt;/div&gt;
      &lt;/div&gt;
      &lt;div class=&quot;paragraph&quot;&gt;
      &lt;p&gt;Click on &lt;code&gt;Display Token&lt;/code&gt;:&lt;/p&gt;
      &lt;/div&gt;
      &lt;div class=&quot;paragraph&quot;&gt;
      &lt;p&gt;The web browser is automatically closed and youâ€™ll notice that the retrieved token has been set in the original dialog:&lt;/p&gt;
      &lt;/div&gt;
      &lt;div class=&quot;imageblock&quot;&gt;
      &lt;div class=&quot;content&quot;&gt;
      &lt;img alt=&quot;weblogin4&quot; src=&quot;https://tools.jboss.org/documentation/whatsnew/openshift/images/weblogin4.png&quot; width=&quot;600&quot; /&gt;
      &lt;/div&gt;
      &lt;/div&gt;
      &lt;/div&gt;
      &lt;div class=&quot;sect3&quot;&gt;
      &lt;h4 id=&quot;devfile-registries-management&quot;&gt;&lt;a class=&quot;anchor&quot; href=&quot;https://tools.jboss.org/blog/news.atom#devfile-registries-management&quot;&gt;&lt;/a&gt;Devfile registries management&lt;/h4&gt;
      &lt;div class=&quot;paragraph&quot;&gt;
      &lt;p&gt;Since JBoss Tools 4.18.0.Final, the preferred way of developing components is now based on devfile, which is a YAML file that describe how to build the component and if required, launch other containers with other containers.
      When you create a component, you need to specify a devfile that describe your component. So either you component source contains its own devfile or you need to pick a devfile that is related to your component.
      In the second case, OpenShift Tools supports devfile registries that contains a set of different devfiles. There is a default registry (&lt;a class=&quot;bare&quot; href=&quot;https://github.com/odo-devfiles/registry&quot;&gt;https://github.com/odo-devfiles/registry&lt;/a&gt;) but you may want to have your own registries. It is now possible to add and remove registries as you want.&lt;/p&gt;
      &lt;/div&gt;
      &lt;div class=&quot;paragraph&quot;&gt;
      &lt;p&gt;The registries are displayed in the OpenShift Application Explorer under the &lt;code&gt;Devfile registries&lt;/code&gt; node:&lt;/p&gt;
      &lt;/div&gt;
      &lt;div class=&quot;imageblock&quot;&gt;
      &lt;div class=&quot;content&quot;&gt;
      &lt;img alt=&quot;registries1&quot; src=&quot;https://tools.jboss.org/documentation/whatsnew/openshift/images/registries1.png&quot; width=&quot;600&quot; /&gt;
      &lt;/div&gt;
      &lt;/div&gt;
      &lt;div class=&quot;paragraph&quot;&gt;
      &lt;p&gt;Please note that expanding the registry node will list all devfiles from that registry with a description:&lt;/p&gt;
      &lt;/div&gt;
      &lt;div class=&quot;imageblock&quot;&gt;
      &lt;div class=&quot;content&quot;&gt;
      &lt;img alt=&quot;registries2&quot; src=&quot;https://tools.jboss.org/documentation/whatsnew/openshift/images/registries2.png&quot; width=&quot;600&quot; /&gt;
      &lt;/div&gt;
      &lt;/div&gt;
      &lt;div class=&quot;paragraph&quot;&gt;
      &lt;p&gt;A context menu on the &lt;code&gt;Devfile registries&lt;/code&gt; node allows you to add new registries, and on the registry node to delete it.&lt;/p&gt;
      &lt;/div&gt;
      &lt;/div&gt;
      &lt;div class=&quot;sect3&quot;&gt;
      &lt;h4 id=&quot;devfile-enhanced-editing-experience&quot;&gt;&lt;a class=&quot;anchor&quot; href=&quot;https://tools.jboss.org/blog/news.atom#devfile-enhanced-editing-experience&quot;&gt;&lt;/a&gt;Devfile enhanced editing experience&lt;/h4&gt;
      &lt;div class=&quot;paragraph&quot;&gt;
      &lt;p&gt;Although devfile registries can provide ready-to-use devfiles, there may be some advanced cases where users need to write their own devfile. As the syntax is quite complex, the YAML editor has been completed so that to provide:&lt;/p&gt;
      &lt;/div&gt;
      &lt;div class=&quot;ulist&quot;&gt;
      &lt;ul&gt;
      &lt;li&gt;
      &lt;p&gt;syntax validation&lt;/p&gt;
      &lt;/li&gt;
      &lt;li&gt;
      &lt;p&gt;content assist&lt;/p&gt;
      &lt;/li&gt;
      &lt;/ul&gt;
      &lt;/div&gt;
      &lt;/div&gt;
      &lt;div class=&quot;sect3&quot;&gt;
      &lt;h4 id=&quot;support-for-python-based-components&quot;&gt;&lt;a class=&quot;anchor&quot; href=&quot;https://tools.jboss.org/blog/news.atom#support-for-python-based-components&quot;&gt;&lt;/a&gt;Support for Python based components&lt;/h4&gt;
      &lt;div class=&quot;paragraph&quot;&gt;
      &lt;p&gt;Python-based components were supported but debugging was not possible. This release brings integration between the Eclipse debugger and the Python runtime.&lt;/p&gt;
      &lt;/div&gt;
      &lt;/div&gt;
      &lt;/div&gt;
      &lt;div class=&quot;sect2&quot;&gt;
      &lt;h3 id=&quot;hibernate-tools&quot;&gt;&lt;a class=&quot;anchor&quot; href=&quot;https://tools.jboss.org/blog/news.atom#hibernate-tools&quot;&gt;&lt;/a&gt;Hibernate Tools&lt;/h3&gt;
      &lt;div class=&quot;paragraph&quot;&gt;
      &lt;p&gt;A number of additions and updates have been performed on the available Hibernate runtime  providers.&lt;/p&gt;
      &lt;/div&gt;
      &lt;div class=&quot;sect3&quot;&gt;
      &lt;h4 id=&quot;runtime-provider-updates&quot;&gt;&lt;a class=&quot;anchor&quot; href=&quot;https://tools.jboss.org/blog/news.atom#runtime-provider-updates&quot;&gt;&lt;/a&gt;Runtime Provider Updates&lt;/h4&gt;
      &lt;div class=&quot;paragraph&quot;&gt;
      &lt;p&gt;The Hibernate 5.4 runtime provider now incorporates Hibernate Core version 5.4.29.Final and Hibernate Tools version 5.4.29a.Final.&lt;/p&gt;
      &lt;/div&gt;
      &lt;/div&gt;
      &lt;/div&gt;
      &lt;div class=&quot;sect2&quot;&gt;
      &lt;h3 id=&quot;server-tools&quot;&gt;&lt;a class=&quot;anchor&quot; href=&quot;https://tools.jboss.org/blog/news.atom#server-tools&quot;&gt;&lt;/a&gt;Server Tools&lt;/h3&gt;
      &lt;div class=&quot;sect3&quot;&gt;
      &lt;h4 id=&quot;wildfly-23-server-adapter&quot;&gt;&lt;a class=&quot;anchor&quot; href=&quot;https://tools.jboss.org/blog/news.atom#wildfly-23-server-adapter&quot;&gt;&lt;/a&gt;Wildfly 23 Server Adapter&lt;/h4&gt;
      &lt;div class=&quot;paragraph&quot;&gt;
      &lt;p&gt;A server adapter has been added to work with Wildfly 23.&lt;/p&gt;
      &lt;/div&gt;
      &lt;/div&gt;
      &lt;div class=&quot;sect3&quot;&gt;
      &lt;h4 id=&quot;eap-7-4-beta-server-adapter&quot;&gt;&lt;a class=&quot;anchor&quot; href=&quot;https://tools.jboss.org/blog/news.atom#eap-7-4-beta-server-adapter&quot;&gt;&lt;/a&gt;EAP 7.4 Beta Server Adapter&lt;/h4&gt;
      &lt;div class=&quot;paragraph&quot;&gt;
      &lt;p&gt;The server adapter has been adapted to work with EAP 7.4 Beta.&lt;/p&gt;
      &lt;/div&gt;
      &lt;div class=&quot;paragraph&quot;&gt;
      &lt;p&gt;Enjoy!&lt;/p&gt;
      &lt;/div&gt;
      &lt;div class=&quot;paragraph&quot;&gt;
      &lt;p&gt;Jeff Maury&lt;/p&gt;
      &lt;/div&gt;
      &lt;/div&gt;
      &lt;/div&gt;
      &lt;/div&gt;
      &lt;/div&gt;&lt;/div&gt;</description>
	<pubDate>Wed, 06 Jul 2022 12:07:23 +0000</pubDate>
</item>
<item>
	<title>JBoss Tools Team: JBoss Tools 4.18.0.AM1 for Eclipse 2020-09</title>
	<guid isPermaLink="true">https://tools.jboss.org/blog/4.18.0.am1.html</guid>
	<link>https://tools.jboss.org/blog/4.18.0.am1.html</link>
	<description>&lt;div&gt;&lt;div id=&quot;preamble&quot;&gt;
      &lt;div class=&quot;sectionbody&quot;&gt;
      &lt;div class=&quot;paragraph&quot;&gt;
      &lt;p&gt;Happy to announce 4.18.0.AM1 (Developer Milestone 1) build for Eclipse 2020-09.&lt;/p&gt;
      &lt;/div&gt;
      &lt;div class=&quot;paragraph&quot;&gt;
      &lt;p&gt;Downloads available at &lt;a href=&quot;https://tools.jboss.org/downloads/jbosstools/2020-09/4.18.0.AM1.html&quot;&gt;JBoss Tools 4.18.0 AM1&lt;/a&gt;.&lt;/p&gt;
      &lt;/div&gt;
      &lt;/div&gt;
      &lt;/div&gt;
      &lt;div class=&quot;sect1&quot;&gt;
      &lt;h2 id=&quot;what-is-new&quot;&gt;&lt;a class=&quot;anchor&quot; href=&quot;https://tools.jboss.org/blog/news.atom#what-is-new&quot;&gt;&lt;/a&gt;What is New?&lt;/h2&gt;
      &lt;div class=&quot;sectionbody&quot;&gt;
      &lt;div class=&quot;paragraph&quot;&gt;
      &lt;p&gt;Full info is at &lt;a href=&quot;https://tools.jboss.org/documentation/whatsnew/jbosstools/4.18.0.AM1.html&quot;&gt;this page&lt;/a&gt;. Some highlights are below.&lt;/p&gt;
      &lt;/div&gt;
      &lt;div class=&quot;sect2&quot;&gt;
      &lt;h3 id=&quot;quarkus&quot;&gt;&lt;a class=&quot;anchor&quot; href=&quot;https://tools.jboss.org/blog/news.atom#quarkus&quot;&gt;&lt;/a&gt;Quarkus&lt;/h3&gt;
      &lt;div class=&quot;sect3&quot;&gt;
      &lt;h4 id=&quot;support-for-codestarts-in-new-quarkus-project-wizard&quot;&gt;&lt;a class=&quot;anchor&quot; href=&quot;https://tools.jboss.org/blog/news.atom#support-for-codestarts-in-new-quarkus-project-wizard&quot;&gt;&lt;/a&gt;Support for codestarts in New Quarkus project wizard&lt;/h4&gt;
      &lt;div class=&quot;paragraph&quot;&gt;
      &lt;p&gt;code.quarkus.io has added a new option codestart that allows extension that support
      this new feature to contribute sample code in the generated project. It is enabled
      by default and is accessible from the second step in the wizard:&lt;/p&gt;
      &lt;/div&gt;
      &lt;div class=&quot;imageblock&quot;&gt;
      &lt;div class=&quot;content&quot;&gt;
      &lt;img alt=&quot;quarkus30&quot; src=&quot;https://tools.jboss.org/documentation/whatsnew/quarkus/images/quarkus30.png&quot; /&gt;
      &lt;/div&gt;
      &lt;/div&gt;
      &lt;/div&gt;
      &lt;/div&gt;
      &lt;div class=&quot;sect2&quot;&gt;
      &lt;h3 id=&quot;openshift&quot;&gt;&lt;a class=&quot;anchor&quot; href=&quot;https://tools.jboss.org/blog/news.atom#openshift&quot;&gt;&lt;/a&gt;OpenShift&lt;/h3&gt;
      &lt;div class=&quot;sect3&quot;&gt;
      &lt;h4 id=&quot;devfile-based-deployments&quot;&gt;&lt;a class=&quot;anchor&quot; href=&quot;https://tools.jboss.org/blog/news.atom#devfile-based-deployments&quot;&gt;&lt;/a&gt;Devfile based deployments&lt;/h4&gt;
      &lt;div class=&quot;paragraph&quot;&gt;
      &lt;p&gt;The Application Explorer view is now based on odo 2.x, which allows deployments
      to be based on devfile (developer oriented manifest file). The components from
      the default odo registry are listed with legacy S2I components:&lt;/p&gt;
      &lt;/div&gt;
      &lt;div class=&quot;imageblock&quot;&gt;
      &lt;div class=&quot;content&quot;&gt;
      &lt;img alt=&quot;devfile&quot; src=&quot;https://tools.jboss.org/documentation/whatsnew/openshift/images/devfile.png&quot; width=&quot;600&quot; /&gt;
      &lt;/div&gt;
      &lt;/div&gt;
      &lt;div class=&quot;paragraph&quot;&gt;
      &lt;p&gt;It is also now possible to bootstrap from an empty project as the components
      from the registry may expose starter projects (sample code that will initialize
      your empty project).&lt;/p&gt;
      &lt;/div&gt;
      &lt;div class=&quot;imageblock&quot;&gt;
      &lt;div class=&quot;content&quot;&gt;
      &lt;img alt=&quot;devfile1&quot; src=&quot;https://tools.jboss.org/documentation/whatsnew/openshift/images/devfile1.png&quot; width=&quot;600&quot; /&gt;
      &lt;/div&gt;
      &lt;/div&gt;
      &lt;/div&gt;
      &lt;/div&gt;
      &lt;div class=&quot;sect2&quot;&gt;
      &lt;h3 id=&quot;hibernate-tools&quot;&gt;&lt;a class=&quot;anchor&quot; href=&quot;https://tools.jboss.org/blog/news.atom#hibernate-tools&quot;&gt;&lt;/a&gt;Hibernate Tools&lt;/h3&gt;
      &lt;div class=&quot;paragraph&quot;&gt;
      &lt;p&gt;A number of additions and updates have been performed on the available Hibernate runtime  providers.&lt;/p&gt;
      &lt;/div&gt;
      &lt;div class=&quot;sect3&quot;&gt;
      &lt;h4 id=&quot;runtime-provider-updates&quot;&gt;&lt;a class=&quot;anchor&quot; href=&quot;https://tools.jboss.org/blog/news.atom#runtime-provider-updates&quot;&gt;&lt;/a&gt;Runtime Provider Updates&lt;/h4&gt;
      &lt;div class=&quot;paragraph&quot;&gt;
      &lt;p&gt;The Hibernate 5.4 runtime provider now incorporates Hibernate Core version 5.4.25.Final and Hibernate Tools version 5.4.25.Final.&lt;/p&gt;
      &lt;/div&gt;
      &lt;div class=&quot;paragraph&quot;&gt;
      &lt;p&gt;The Hibernate 5.3 runtime provider now incorporates Hibernate Core version 5.3.20.Final and Hibernate Tools version 5.3.20.Final.&lt;/p&gt;
      &lt;/div&gt;
      &lt;/div&gt;
      &lt;/div&gt;
      &lt;div class=&quot;sect2&quot;&gt;
      &lt;h3 id=&quot;server-tools&quot;&gt;&lt;a class=&quot;anchor&quot; href=&quot;https://tools.jboss.org/blog/news.atom#server-tools&quot;&gt;&lt;/a&gt;Server Tools&lt;/h3&gt;
      &lt;div class=&quot;sect3&quot;&gt;
      &lt;h4 id=&quot;wildfly-22-server-adapter&quot;&gt;&lt;a class=&quot;anchor&quot; href=&quot;https://tools.jboss.org/blog/news.atom#wildfly-22-server-adapter&quot;&gt;&lt;/a&gt;Wildfly 22 Server Adapter&lt;/h4&gt;
      &lt;div class=&quot;paragraph&quot;&gt;
      &lt;p&gt;A server adapter has been added to work with Wildfly 22.&lt;/p&gt;
      &lt;/div&gt;
      &lt;/div&gt;
      &lt;/div&gt;
      &lt;div class=&quot;sect2&quot;&gt;
      &lt;h3 id=&quot;cdi-tools&quot;&gt;&lt;a class=&quot;anchor&quot; href=&quot;https://tools.jboss.org/blog/news.atom#cdi-tools&quot;&gt;&lt;/a&gt;CDI Tools&lt;/h3&gt;
      &lt;div class=&quot;sect3&quot;&gt;
      &lt;h4 id=&quot;eclipse-microprofile-support&quot;&gt;&lt;a class=&quot;anchor&quot; href=&quot;https://tools.jboss.org/blog/news.atom#eclipse-microprofile-support&quot;&gt;&lt;/a&gt;Eclipse Microprofile support&lt;/h4&gt;
      &lt;div class=&quot;paragraph&quot;&gt;
      &lt;p&gt;CDI Tools now support Eclipse Microprofile. Eclipse Microprofile related assets
      are checked against @Inject injections points and are validated according to rules
      specified in various Eclipse Microprofile specifications.&lt;/p&gt;
      &lt;/div&gt;
      &lt;/div&gt;
      &lt;/div&gt;
      &lt;div class=&quot;sect2&quot;&gt;
      &lt;h3 id=&quot;forge-tools&quot;&gt;&lt;a class=&quot;anchor&quot; href=&quot;https://tools.jboss.org/blog/news.atom#forge-tools&quot;&gt;&lt;/a&gt;Forge Tools&lt;/h3&gt;
      &lt;div class=&quot;sect3&quot;&gt;
      &lt;h4 id=&quot;forge-runtime-updated-to-3-9-8-final&quot;&gt;&lt;a class=&quot;anchor&quot; href=&quot;https://tools.jboss.org/blog/news.atom#forge-runtime-updated-to-3-9-8-final&quot;&gt;&lt;/a&gt;Forge Runtime updated to 3.9.8.Final&lt;/h4&gt;
      &lt;div class=&quot;paragraph&quot;&gt;
      &lt;p&gt;The included Forge runtime is now 3.9.8.Final.&lt;/p&gt;
      &lt;/div&gt;
      &lt;div class=&quot;paragraph&quot;&gt;
      &lt;p&gt;Enjoy!&lt;/p&gt;
      &lt;/div&gt;
      &lt;div class=&quot;paragraph&quot;&gt;
      &lt;p&gt;Jeff Maury&lt;/p&gt;
      &lt;/div&gt;
      &lt;/div&gt;
      &lt;/div&gt;
      &lt;/div&gt;
      &lt;/div&gt;&lt;/div&gt;</description>
	<pubDate>Wed, 06 Jul 2022 12:07:23 +0000</pubDate>
</item>
<item>
	<title>JBoss Tools Team: JBoss Tools 4.17.0.AM1 for Eclipse 2020-09</title>
	<guid isPermaLink="true">https://tools.jboss.org/blog/4.17.0.am1.html</guid>
	<link>https://tools.jboss.org/blog/4.17.0.am1.html</link>
	<description>&lt;div&gt;&lt;div id=&quot;preamble&quot;&gt;
      &lt;div class=&quot;sectionbody&quot;&gt;
      &lt;div class=&quot;paragraph&quot;&gt;
      &lt;p&gt;Happy to announce 4.17.0.AM1 (Developer Milestone 1) build for Eclipse 2020-09.&lt;/p&gt;
      &lt;/div&gt;
      &lt;div class=&quot;paragraph&quot;&gt;
      &lt;p&gt;Downloads available at &lt;a href=&quot;https://tools.jboss.org/downloads/jbosstools/2020-09/4.17.0.AM1.html&quot;&gt;JBoss Tools 4.17.0 AM1&lt;/a&gt;.&lt;/p&gt;
      &lt;/div&gt;
      &lt;/div&gt;
      &lt;/div&gt;
      &lt;div class=&quot;sect1&quot;&gt;
      &lt;h2 id=&quot;what-is-new&quot;&gt;&lt;a class=&quot;anchor&quot; href=&quot;https://tools.jboss.org/blog/news.atom#what-is-new&quot;&gt;&lt;/a&gt;What is New?&lt;/h2&gt;
      &lt;div class=&quot;sectionbody&quot;&gt;
      &lt;div class=&quot;paragraph&quot;&gt;
      &lt;p&gt;Full info is at &lt;a href=&quot;https://tools.jboss.org/documentation/whatsnew/jbosstools/4.17.0.AM1.html&quot;&gt;this page&lt;/a&gt;. Some highlights are below.&lt;/p&gt;
      &lt;/div&gt;
      &lt;div class=&quot;sect2&quot;&gt;
      &lt;h3 id=&quot;quarkus&quot;&gt;&lt;a class=&quot;anchor&quot; href=&quot;https://tools.jboss.org/blog/news.atom#quarkus&quot;&gt;&lt;/a&gt;Quarkus&lt;/h3&gt;
      &lt;div class=&quot;sect3&quot;&gt;
      &lt;h4 id=&quot;support-for-yaml-configuration-file&quot;&gt;&lt;a class=&quot;anchor&quot; href=&quot;https://tools.jboss.org/blog/news.atom#support-for-yaml-configuration-file&quot;&gt;&lt;/a&gt;Support for YAML configuration file&lt;/h4&gt;
      &lt;div class=&quot;paragraph&quot;&gt;
      &lt;p&gt;Quarkus supports configuration through YAML format. For more information,
      see the &lt;a href=&quot;https://quarkus.io/guides/config#yaml&quot;&gt;Quarkus documentation&lt;/a&gt;&lt;/p&gt;
      &lt;/div&gt;
      &lt;div class=&quot;paragraph&quot;&gt;
      &lt;p&gt;In order to use it, follow the steps:&lt;/p&gt;
      &lt;/div&gt;
      &lt;div class=&quot;ulist&quot;&gt;
      &lt;ul&gt;
      &lt;li&gt;
      &lt;p&gt;create a Quarkus project using the new Quarkus wizard&lt;/p&gt;
      &lt;/li&gt;
      &lt;li&gt;
      &lt;p&gt;create a new &lt;code&gt;application.yaml&lt;/code&gt; or &lt;code&gt;application.yml&lt;/code&gt; next to the &lt;code&gt;application.properties&lt;/code&gt; in &lt;code&gt;src/main/resources&lt;/code&gt;&lt;/p&gt;
      &lt;/li&gt;
      &lt;/ul&gt;
      &lt;/div&gt;
      &lt;div class=&quot;paragraph&quot;&gt;
      &lt;p&gt;The editor will open and you will get content assist and syntax validation.&lt;/p&gt;
      &lt;/div&gt;
      &lt;/div&gt;
      &lt;/div&gt;
      &lt;div class=&quot;sect2&quot;&gt;
      &lt;h3 id=&quot;hibernate-tools&quot;&gt;&lt;a class=&quot;anchor&quot; href=&quot;https://tools.jboss.org/blog/news.atom#hibernate-tools&quot;&gt;&lt;/a&gt;Hibernate Tools&lt;/h3&gt;
      &lt;div class=&quot;paragraph&quot;&gt;
      &lt;p&gt;A number of additions and updates have been performed on the available Hibernate runtime  providers.&lt;/p&gt;
      &lt;/div&gt;
      &lt;div class=&quot;sect3&quot;&gt;
      &lt;h4 id=&quot;new-runtime-provider&quot;&gt;&lt;a class=&quot;anchor&quot; href=&quot;https://tools.jboss.org/blog/news.atom#new-runtime-provider&quot;&gt;&lt;/a&gt;New Runtime Provider&lt;/h4&gt;
      &lt;div class=&quot;paragraph&quot;&gt;
      &lt;p&gt;A new runtime provider has been added for Hibernate 6.0. It incorporates Hibernate Core version 6.0.0.Alpha6 and Hibernate Tools version 6.0.0.Alpha2.&lt;/p&gt;
      &lt;/div&gt;
      &lt;/div&gt;
      &lt;div class=&quot;sect3&quot;&gt;
      &lt;h4 id=&quot;runtime-provider-updates&quot;&gt;&lt;a class=&quot;anchor&quot; href=&quot;https://tools.jboss.org/blog/news.atom#runtime-provider-updates&quot;&gt;&lt;/a&gt;Runtime Provider Updates&lt;/h4&gt;
      &lt;div class=&quot;paragraph&quot;&gt;
      &lt;p&gt;The Hibernate 5.4 runtime provider now incorporates Hibernate Core version 5.4.21.Final and Hibernate Tools version 5.4.21.Final.&lt;/p&gt;
      &lt;/div&gt;
      &lt;div class=&quot;paragraph&quot;&gt;
      &lt;p&gt;The Hibernate 5.3 runtime provider now incorporates Hibernate Core version 5.3.18.Final and Hibernate Tools version 5.3.18.Final.&lt;/p&gt;
      &lt;/div&gt;
      &lt;div class=&quot;paragraph&quot;&gt;
      &lt;p&gt;Enjoy!&lt;/p&gt;
      &lt;/div&gt;
      &lt;div class=&quot;paragraph&quot;&gt;
      &lt;p&gt;Jeff Maury&lt;/p&gt;
      &lt;/div&gt;
      &lt;/div&gt;
      &lt;/div&gt;
      &lt;/div&gt;
      &lt;/div&gt;&lt;/div&gt;</description>
	<pubDate>Wed, 06 Jul 2022 12:07:23 +0000</pubDate>
</item>
<item>
	<title>Jonas, Maximilian and Philip: Eclipse GLSP 1.0 Release is here!</title>
	<guid isPermaLink="false">https://eclipsesource.com/?p=46148</guid>
	<link>https://eclipsesource.com/blogs/2022/07/06/eclipse-glsp-1-0-release-is-here/</link>
	<description>&lt;p&gt;Three years of active development, 22 Contributors and ~1000 commits: We are happy and proud to announce the 1.0 release of...&lt;/p&gt;
&lt;p&gt;The post &lt;a href=&quot;https://eclipsesource.com/blogs/2022/07/06/eclipse-glsp-1-0-release-is-here/&quot; rel=&quot;nofollow&quot;&gt;Eclipse GLSP 1.0 Release is here!&lt;/a&gt; appeared first on &lt;a href=&quot;https://eclipsesource.com&quot; rel=&quot;nofollow&quot;&gt;EclipseSource&lt;/a&gt;.&lt;/p&gt;</description>
	<pubDate>Wed, 06 Jul 2022 09:31:30 +0000</pubDate>
</item>
<item>
	<title>Eclipse Announcements: 2022 Annual Community Report</title>
	<guid isPermaLink="true">https://newsroom.eclipse.org/news/announcements/2022-annual-community-report</guid>
	<link>https://newsroom.eclipse.org/news/announcements/2022-annual-community-report</link>
	<description>The past year has been one of exceptional growth for the Eclipse Foundation. Learn about the many new projects, working groups, members, and committers in our annual report.</description>
	<pubDate>Tue, 05 Jul 2022 12:30:00 +0000</pubDate>
</item>
<item>
	<title>Donald Raab: Transforming a box of Lego into a CI build monitoring robot</title>
	<guid isPermaLink="false">https://medium.com/p/2280af48fb1d</guid>
	<link>https://donraab.medium.com/transforming-a-box-of-lego-into-a-ci-build-monitoring-robot-2280af48fb1d?source=rss-df39b86e9f04------2</link>
	<description>&lt;p&gt;A story of CI build monitoring and creativity at play.&lt;/p&gt;&lt;figure&gt;&lt;img alt=&quot;&quot; src=&quot;https://cdn-images-1.medium.com/max/1024/1*8vt97AxnwrXJTERx0whZCg.png&quot; /&gt;&lt;figcaption&gt;Meet BilBo (short for BuildBot). This team member gives audible &amp;amp; physical warnings when builds break.&lt;/figcaption&gt;&lt;/figure&gt;&lt;h3&gt;Background&lt;/h3&gt;&lt;p&gt;Ten years ago, I had an idea. I wanted to use a Lego Mindstorms NXT 2.0 kit to build a robot that could continuously monitor our software development builds. The following is the story of what happened and how things worked out. Along the journey there were failures, successes, lessons learned and a lot of joy and smiles.&lt;/p&gt;&lt;h3&gt;Who is responsible for monitoring broken builds?&lt;/h3&gt;&lt;p&gt;When a software development build breaks, who is responsible? The obvious answer is the developer who broke the build. Another answer is the entire development team. Who is responsible for letting the team know that the build is broken? One answer to this question has been to use “automation” to shorten the feedback loop. Continuous Integration (CI) builds run any time a commit is merged to the main branch or on merge quests. When these builds break, how does the team discover that a break has happened? The team would need to continuously monitor the build to know that something has happened.&lt;/p&gt;&lt;p&gt;Some development teams use visual and visible cues to keep the team alerted to problems in the build. These visible cues include solutions like attaching large build monitors to shared wall spaces where the team can look to see the current status of important builds. The problem with a build monitor is that it requires line of sight for all team members. I once sat in a team space where a build monitor was located in an office window right behind the cubicle I was sitting in. So if the build broke, I wouldn’t know, as my back was facing the monitor.&lt;/p&gt;&lt;p&gt;There are other options like using a &lt;a href=&quot;https://en.wikipedia.org/wiki/Build_light_indicator&quot;&gt;Build Light Indicator&lt;/a&gt; of some sort. All the options I had researched suffered from two problems — requiring line of sight or requiring a physical hardware connection. The reason a physical hardware connection was a problem was because the USB ports on all of our machines at work were disabled due to security policies. We couldn’t plug in a lava lamp or any other light indicator.&lt;/p&gt;&lt;p&gt;I had this crazy idea that my team could build a robot to monitor our builds. The robot would have to look at a screen and alert us when the build breaks. I went to my nearest Lego store and bought a Lego Mindstorms NXT 2.0 kit.&lt;/p&gt;&lt;h3&gt;Team Building Exercise&lt;/h3&gt;&lt;p&gt;I initially thought that building a Lego Mindstorms robot would be a good team building exercise. Things did not go exactly as I expected. My team started out attempting to build the Lego Mindstorms standard Shooterbot design during some lunch time meetings. We ordered take out food so we could multitask and eat while we built. The first thing I learned was not to mix lunch and lego building. We did have fun eating lunch and even made it through a few pages of the lego building instructions, but it was clear that it was going to take many meetings to finish the robot at this pace.&lt;/p&gt;&lt;p&gt;I decided there was an easier way forward.&lt;/p&gt;&lt;figure&gt;&lt;img alt=&quot;&quot; src=&quot;https://cdn-images-1.medium.com/max/872/1*VubxBk8SPrKqeAGsmbdyUA.png&quot; /&gt;&lt;/figure&gt;&lt;p&gt;I asked my seven year old son if he would like to build the robot at home. Lego Robot + Seven Year Old = Yes. He was finished with the standard build for the Shooterbot in two and a half hours. I brought the finished robot to work and began working out how we could get the robot to monitor the build.&lt;/p&gt;&lt;h3&gt;Vision for my vision&lt;/h3&gt;&lt;p&gt;I originally had planned to use the Lego Mindstorms Color Sensor to detect color changes on a screen. Unfortunately, the Color Sensor could only really detect colors printed on some solid surface like paper. I tested out the sensor on different monitors, and it wouldn’t work.&lt;/p&gt;&lt;p&gt;I did some research and discovered there was a third party sensor market for Lego Mindstorms. There was a &lt;a href=&quot;http://www.mindsensors.com/ev3-and-nxt/14-vision-subsystem-camera-for-nxt-or-ev3-nxtcam-v4&quot;&gt;Vision Subsystem&lt;/a&gt; option for the NXT 2.0. So I spent some more money and bought the Vision Subsystem and hoped it would work. It worked great.&lt;/p&gt;&lt;h3&gt;From Visual Programming to Java&lt;/h3&gt;&lt;p&gt;Now I needed to program the robot. At first, I experimented with the visual programming environment that came with the Lego Kit. I was able to control a lot of the sensors and make the robot move, but for more complex tasks it felt like a non-visual programming environment would be a much more productive option. After a bit of searching I discovered the &lt;a href=&quot;https://lejos.sourceforge.io/&quot;&gt;leJOS&lt;/a&gt; JVM that could be loaded on the Lego brick and would allow Java code to control the robot.&lt;/p&gt;&lt;p&gt;A member of my team at the time (&lt;a href=&quot;https://medium.com/u/82b613b921f6&quot;&gt;Craig Motlin&lt;/a&gt;) wrote around three hundred lines of Java code to keep the robot continuously monitoring our builds. It was a lot of fun seeing the robot shooting plastic balls when it detected red builds on the screen of my MacBook Air.&lt;/p&gt;&lt;h3&gt;Bang a Gong!&lt;/h3&gt;&lt;p&gt;Now we had a shooter robot that could detect build failures as well as build success and shoot plastic balls out at high velocity. It was great fun to watch, but was missing a key component that I was looking for. An audible alarm to go along with the visual and physical queues that a build was broken. I was sitting at home one night puzzling about what we could do to have the shooter robot make a noise that could be heard all around a floor.&lt;/p&gt;&lt;p&gt;Then it hit me. Sitting on my desk was a Feng Shui Desktop Gong that my kids had bought me. Along with the gong came a little mallet with a plastic ball attached to the end that was the same size as the plastic balls that the shooter robot was loaded with. Light bulb!&lt;/p&gt;&lt;p&gt;The noise that the gong made when the shooter robot shot the plastic ball and struck the metal gong was loud and piercing. It was so loud and piercing it could be heard all over a huge and noisy exhibit floor at a conference (spoiler alert!).&lt;/p&gt;&lt;figure&gt;&lt;img alt=&quot;&quot; src=&quot;https://cdn-images-1.medium.com/max/1024/1*92zX3nylnY5NeP3adexUmA.png&quot; /&gt;&lt;figcaption&gt;My son waiting for BilBo to bang the gong with a plastic pellet.&lt;/figcaption&gt;&lt;/figure&gt;&lt;h3&gt;Measuring Success in Smiles&lt;/h3&gt;&lt;p&gt;For a few years, BilBo the Build Bot was one of the simplest and most smile inducing demos around. BilBo had one clear Key Performance Indicator (KPI) — Smiles.&lt;/p&gt;&lt;figure&gt;&lt;img alt=&quot;&quot; src=&quot;https://cdn-images-1.medium.com/max/1024/1*J1gNHrSG_XeYklHEq1SHqg.png&quot; /&gt;&lt;figcaption&gt;BilBo delivers smiles&lt;/figcaption&gt;&lt;/figure&gt;&lt;p&gt;Anyone who saw BilBo when visiting or walking by our team area asked for a demo. Each demo took less than 30 seconds after the Lego brick was powered up, or 5–10 seconds if it was already running.&lt;/p&gt;&lt;h3&gt;Power Failure&lt;/h3&gt;&lt;p&gt;One problem that persisted with Bilbo was that it was powered by four AA batteries, which had a lifespan of several hours if left running. I did some research on a persistent power source for BilBo but was unable to find anything that I thought would work. It turns out the BilBo demos were so amazingly popular, it wasn’t so terrible that we couldn’t find a persistent power source option. We were able to generate hundreds of smiles using just four AA batteries at a time.&lt;/p&gt;&lt;h3&gt;BilBo at JavaOne 2014&lt;/h3&gt;&lt;p&gt;In 2014, I brought BilBo to San Francisco with me to demo at a booth that my former employer had at JavaOne. BilBo was running Java on the brick so was a great demo at the conference.&lt;/p&gt;&lt;figure&gt;&lt;img alt=&quot;&quot; src=&quot;https://cdn-images-1.medium.com/max/1024/1*rArL4Ln2bZFq29XIKf86LA.png&quot; /&gt;&lt;figcaption&gt;BilBo generating smiles at JavaOne 2014&lt;/figcaption&gt;&lt;/figure&gt;&lt;h3&gt;Only the Beginning&lt;/h3&gt;&lt;p&gt;&lt;a href=&quot;https://medium.com/u/4285d8a2ca86&quot;&gt;Nikhil Nanivadekar&lt;/a&gt; would attend his first JavaOne in 2015. He would later evolve the shooter robot idea and turn it into another smile inducing demo with two Twitter controlled robots at JavaOne 2016. Nikhil was building using the upgraded Lego Mindstorms EV3 kit. We would give a talk twice at JavaOne 2016 titled “Robots for the Kind in All of Us”. There were many more smiles measured.&lt;/p&gt;&lt;figure&gt;&lt;img alt=&quot;&quot; src=&quot;https://cdn-images-1.medium.com/max/1024/1*TRlQaI_TU5c5104n6NIN9w.png&quot; /&gt;&lt;figcaption&gt;Nikhil with his battling Twitter controlled robots and the Desktop Gong.&lt;/figcaption&gt;&lt;/figure&gt;&lt;p&gt;For JavaOne 2017, Nikhil would build a small army of standing shooter robots that would take aim at six of the Desktop Gongs.&lt;/p&gt;&lt;figure&gt;&lt;img alt=&quot;&quot; src=&quot;https://cdn-images-1.medium.com/max/1024/1*vXIUaAGg5p_Cz4hlcuSB7g.png&quot; /&gt;&lt;/figure&gt;&lt;p&gt;The robots were amazing, but it was arguably the gong that was the key to success for all of the demos. The gong gave the robots a goal to achieve, and an audible way to make people smile. Anyone who witnessed the demo, knew immediately on the exhibit floor, regardless of where they were at the time, what was happening when they heard the gongs — robots were banging gongs and making people smile. Just hearing the noise would make folks who were “in the know” smile :)&lt;/p&gt;&lt;p&gt;I hope this blog inspires some great ideas that brings more smiles to the world.&lt;/p&gt;&lt;p&gt;Thank you for reading, and hopefully smiling! :)&lt;/p&gt;&lt;p&gt;&lt;em&gt;I am a Project Lead and Committer for the &lt;/em&gt;&lt;a href=&quot;https://github.com/eclipse/eclipse-collections&quot;&gt;&lt;em&gt;Eclipse Collections&lt;/em&gt;&lt;/a&gt;&lt;em&gt; OSS project at the &lt;/em&gt;&lt;a href=&quot;https://projects.eclipse.org/projects/technology.collections&quot;&gt;&lt;em&gt;Eclipse Foundation&lt;/em&gt;&lt;/a&gt;&lt;em&gt;. &lt;/em&gt;&lt;a href=&quot;https://github.com/eclipse/eclipse-collections&quot;&gt;&lt;em&gt;Eclipse Collections&lt;/em&gt;&lt;/a&gt;&lt;em&gt; is open for &lt;/em&gt;&lt;a href=&quot;https://github.com/eclipse/eclipse-collections/blob/master/CONTRIBUTING.md&quot;&gt;&lt;em&gt;contributions&lt;/em&gt;&lt;/a&gt;&lt;em&gt;. If you like the library, you can let us know by starring it on GitHub.&lt;/em&gt;&lt;/p&gt;&lt;img alt=&quot;&quot; height=&quot;1&quot; src=&quot;https://medium.com/_/stat?event=post.clientViewed&amp;amp;referrerSource=full_rss&amp;amp;postId=2280af48fb1d&quot; width=&quot;1&quot; /&gt;</description>
	<pubDate>Fri, 01 Jul 2022 03:19:03 +0000</pubDate>
</item>
<item>
	<title>Eclipse Announcements: The Eclipse Software Defined Vehicle Working Group Sees Significant Momentum with New Members and Seven New Projects</title>
	<guid isPermaLink="true">https://newsroom.eclipse.org/news/announcements/eclipse-software-defined-vehicle-working-group-sees-significant-momentum-new</guid>
	<link>https://newsroom.eclipse.org/news/announcements/eclipse-software-defined-vehicle-working-group-sees-significant-momentum-new</link>
	<description>&lt;p class=&quot;rtecenter&quot;&gt;&lt;em&gt;Europe’s leading open source foundation continues its momentum adding multiple new members as well as seven new projects for building an ecosystem for the software-defined vehicle &lt;/em&gt;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;BRUSSELS – June 30, 2022 – &lt;/strong&gt;&lt;a href=&quot;http://www.eclipse.org&quot;&gt;The Eclipse Foundation&lt;/a&gt;, one of the world’s largest open source foundations, today announced major momentum with seven new projects initiated with the &lt;a href=&quot;https://sdv.eclipse.org/&quot;&gt;Software Defined Vehicle (SDV) Working Group&lt;/a&gt;, as well as a growing member base focused on innovation for the software-defined vehicle ecosystem. In just a few months, the SDV Working Group has expanded its membership by more than 30% to 19 members, including new members Volkswagen Group’s software unit CARIAD, Eteration, FutureWei, NXP, and Toyota. &lt;/p&gt;

&lt;p&gt;Using a “code first” approach, the SDV-related projects are focused on building the industry’s first open source software stacks and associated tooling for the core functionality of a new class of automobile. The SDV Working Group believes this approach will result in much faster material impact on the industry. These new projects, headed up by leaders such as Bosch, Microsoft, Continental, ZF, Cariad, Accenture, and Eteration, are already making their software available to any organization that wishes to leverage them for their own vehicle development. &lt;/p&gt;

&lt;p&gt;“I’m thrilled with the industry response to our Software Defined Vehicle Working Group,” said Mike Milinkovich, executive director of the Eclipse Foundation. “In just a few short months, we’ve had seven projects contributed, which will collaboratively develop real code for all aspects of the automotive software ecosystem. We expect this momentum will only increase in the coming months.”&lt;/p&gt;

&lt;p&gt;To support this transformation to software-defined vehicles, major players from the broader technology industry, as well as the automotive industry, are actively developing an open source in-vehicle application runtime stack, cloud-based vehicle operations, as well as highly integrated development toolchains. The open source Software Defined Vehicle initiative aims to deliver usable open source code for in-vehicle software across vehicle models, product lines, brands, organizations, and time. Doing so enables an order of magnitude increase in the speed of innovation, speed of production, and the ability to scale the production of software-centric vehicles. What’s more, this approach will significantly reduce the complexity of designing new vehicles, while also increasing efficiency. The ultimate goal is that industry players will benefit by being able to focus on innovation, while saving time and cost on the non-differentiating elements, like real-time operating systems, specific parts of the middleware layers or communication protocols.&lt;/p&gt;

&lt;p&gt;Some of the new Software Defined Vehicle-related projects include:&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Eclipse Velocitas&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;Eclipse Velocitas provides an end-to-end, scalable, modular, and open source development toolchain for creating containerized and non-containerized in-vehicle applications.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Eclipse Muto&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;Eclipse Muto provides an adaptive framework and a runtime platform for dynamically composable model-driven ROS software stacks on autonomous vehicles and robots in general. Eclipse Muto makes it easier to build an adaptive software stack that is able to update the system without compromising its mission, plan, safety, and security while it is active. Eclipse Muto can be used to introspect, monitor, and manipulate the actively running ROS graph (the network of ROS nodes) with a lightweight model and digital twin.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Eclipse eCAL (enhanced Communication Abstraction Layer)&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;The Eclipse eCAL (enhanced Communication Abstraction Layer) provides a middleware solution that enables scalable, high-performance inter-process communication on a single computer node or between different nodes in a computer network. Eclipse eCAL supports a wide range of hardware targets, operating systems, and programming languages.&lt;/p&gt;

&lt;p&gt;Eclipse eCAL is shipped with sophisticated tools for live data monitoring, orchestrated message recording, and replay. It’s designed for rapid prototyping in the field of autonomous driving and has already proven its performance over the past few years in research projects of Continental as well as in other open source community projects.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Eclipse Leda&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;One of the main challenges in building open software for the SDV will be the combination of the diverse components into a coherent and useful whole; all the software components in the world will not have the impact needed to transform the automotive industry unless we can make them play together coherently and form a functional portfolio.&lt;/p&gt;

&lt;p&gt;As a first step towards that goal, Eclipse Leda provides an “SDV distribution” that pulls together individual contributor pieces from the SDV WG and the larger OSS community to deliver a functional and always-available Linux-based image/distribution.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Eclipse Chariott&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;The Eclipse Chariott project aims to simplify and enhance in-vehicle software developer productivity by providing a metadata-driven middleware/abstraction layer that allows modern application programming models to target in-vehicle functions through a digital representation of vehicle state and capabilities and provides an extensible and dynamic architecture to access the vehicle hardware and sensors.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Eclipse ADAAA (Adaptive Cruise Control Demo Application for Adaptive AUTOSAR)&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;ADAAA is an example application for Adaptive AUTOSAR with the following goals:&lt;/p&gt;

&lt;ol&gt;
	&lt;li&gt;Provide a tutorial with simple example code bases for getting involved with the Adaptive AUTOSAR methodology and each functional cluster&lt;/li&gt;
	&lt;li&gt;Use the Adaptive Cruise Control function to demonstrate the use of Adaptive AUTOSAR&lt;/li&gt;
	&lt;li&gt;Build Adaptive AUTOSAR expertise across the community&lt;/li&gt;
	&lt;li&gt;Use the community support to adapt to different Adaptive AUTOSAR provider&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;&lt;strong&gt;Eclipse SommR&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;Eclipse SommR provides an automotive-grade implementation of the someIP specification for embedded Linux systems together with the required tools to support developers.&lt;/p&gt;

&lt;p&gt;The Eclipse Foundation has decades of experience managing the governance of complex technology initiatives and multi-vendor organizations, making it the ideal organization to help manage such an endeavor. Its commitment to transparency, vendor-neutrality, and a shared voice will ensure that all participants have the opportunity to shape the future of the working group.&lt;/p&gt;

&lt;p&gt;To learn more about getting involved with the Eclipse Foundation’s Software Defined Vehicle initiative, please visit us at &lt;a href=&quot;http://sdv.eclipse.org&quot;&gt;sdv.eclipse.org&lt;/a&gt;, or email us at membership@eclipse.org. &lt;/p&gt;

&lt;h2&gt;Quotes from Members&lt;/h2&gt;

&lt;p&gt;&lt;strong&gt;Bosch&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;“We are excited to see the first projects contributed to the SDV working group as this is a big milestone and underlines the “code first” approach,” said Sven Kappel, VP and Head of Project Software Defined Vehicle, Bosch. “Additionally, we are also proud that we, as Bosch, are contributing two projects: Eclipse Velocitas and Eclipse Leda. We are looking forward to developing the projects together with the community.”&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;CARIAD&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;“As one of the leading software companies in the automotive industry, we are looking forward to the open cooperation in the Eclipse Foundation,” said Michael Wintergerst, executive vice president for Vehicle and Cloud Platform, CARIAD. “Open source has long been a central component in the automotive sector. We see great potential in the cooperation of the open source community for the software-driven car and also for our developers. We want to create innovations and set open standards together.”&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Continental Automotive &lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;“We are glad to support the ‘code first’ approach of Eclipse SDV by contributing Eclipse eCAL: a scalable middleware enabling efficient communication within distributed systems,” said Michael Huelsewies, Head of Architecture and Software at Continental Automotive. “Continental is looking forward to collaborating within the community to create innovative solutions for the Software-Defined Vehicle.”&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;ETAS&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;“The first Eclipse SDV Contribution Day sets a major milestone on the road to an open-source software-defined vehicle ecosystem: first, we look forward to listening to the community's projects and are excited to present our two projects. Second, we welcome the growth of the community and the addition of new participants building an ecosystem for the software-defined vehicle,” said Christoph Hartung, Chairman of the Board of Management of ETAS GmbH. “We are convinced that cross-company collaboration will lead to excellent results.” &lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Eteration&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;“Industry practices for automotive software often embrace proprietary and closed solutions, where many common building blocks are replicated. The Eclipse Software Defined Vehicle Working Group is a platform for open technology and collaboration that can impact how we build software for vehicles,” said Naci Dai, founder, Composiv.ai and Eteration. “Eteration is contributing Eclipse Muto a high-performance runtime for model based contextual adaptivity in ROS software stacks. Eclipse Muto makes it possible to deploy extensible, dynamic, and adaptive behavior to edge devices.”&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Microsoft&lt;/strong&gt; &lt;/p&gt;

&lt;p&gt;“The Software Defined Vehicle Working Group provides a vendor-neutral place for software engineers to jointly solve non-differentiating challenges of automotive software development,” said Ulrich Homann, corporate vice president and Distinguished Architect, Cloud + AI, Microsoft. “Microsoft is contributing the middleware ‘Eclipse Chariott’ to target in-vehicle functions through a digital representation of vehicle state and capabilities. The dynamic architecture enhances developer productivity, freeing resources to focus on delivering new services that address latest customer needs.”&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;ZF&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;“We are pleased to welcome the participants of the first Contribution Day in Friedrichshafen and fully support the open source approach of the new Software Defined Vehicle Working Group of the Eclipse Foundation,” says Dr. Dirk Walliser, senior vice president Corporate R&amp;amp;D of the ZF Group. “The first projects presented and the growing number of members show that we are on the right track to improve the quality of automotive software through open source development. We see all vehicles as software-defined, think ‘software-first’ and act in a networked way.”&lt;/p&gt;

&lt;h2&gt;About the Eclipse Foundation&lt;/h2&gt;

&lt;p&gt;The Eclipse Foundation provides our global community of individuals and organizations with a mature, scalable, and business-friendly environment for open source software collaboration and innovation. The Foundation is home to the Eclipse IDE, Jakarta EE, and over 400 open source projects, including runtimes, tools, and frameworks for cloud and edge applications, IoT, AI, automotive, systems engineering, distributed ledger technologies, open processor designs, and many others. The Eclipse Foundation is an international non-profit association supported by over 330 members, including industry leaders who value open source as a key enabler for their business strategies. To learn more, follow us on Twitter &lt;a href=&quot;https://twitter.com/EclipseFdn&quot;&gt;@EclipseFdn&lt;/a&gt;, &lt;a href=&quot;https://linkedin.com/company/eclipse-foundation&quot;&gt;LinkedIn&lt;/a&gt; or visit &lt;a href=&quot;http://eclipse.org&quot;&gt;eclipse.org&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;Third-party trademarks mentioned are the property of their respective owners.&lt;/p&gt;

&lt;h2&gt;Media Contacts&lt;/h2&gt;

&lt;p&gt;&lt;strong&gt;Schwartz Public Relations for the Eclipse Foundation, AISBL&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;Stephanie Brüls / Susanne Pawlik&lt;/p&gt;

&lt;p&gt;Sendlinger Straße 42A&lt;/p&gt;

&lt;p&gt;80331 Munich&lt;/p&gt;

&lt;p&gt;EclipseFoundation@schwartzpr.de&lt;/p&gt;

&lt;p&gt;+49 (89) 211 871 – 64 / -35&lt;/p&gt;

&lt;p&gt; &lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Nichols Communications for the Eclipse Foundation, AISBL&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;Jay Nichols&lt;/p&gt;

&lt;p&gt;jay@nicholscomm.com&lt;/p&gt;

&lt;p&gt;+1 408-772-1551&lt;/p&gt;</description>
	<pubDate>Thu, 30 Jun 2022 11:00:00 +0000</pubDate>
</item>
<item>
	<title>Eclipse Announcements: Eclipse Foundation Celebrates Pride Month</title>
	<guid isPermaLink="true">https://newsroom.eclipse.org/news/announcements/eclipse-foundation-celebrates-pride-month</guid>
	<link>https://newsroom.eclipse.org/news/announcements/eclipse-foundation-celebrates-pride-month</link>
	<description>As June winds down, we’d like to recognize the Eclipse Community’s continuing efforts to foster an open and welcoming environment for everyone.</description>
	<pubDate>Tue, 28 Jun 2022 12:43:17 +0000</pubDate>
</item>
<item>
	<title>Mike Milinkovich: Eclipse Foundation Celebrates Pride Month</title>
	<guid isPermaLink="false">http://eclipse-foundation.blog/?p=1689</guid>
	<link>https://eclipse-foundation.blog/2022/06/27/eclipse-foundation-celebrates-pride-month/</link>
	<description>&lt;figure class=&quot;wp-block-image&quot;&gt;&lt;img alt=&quot;&quot; src=&quot;https://lh5.googleusercontent.com/SMDWOhoTPArAAdMVERW-DCPAKuoZVCQEw1wejDBN25d9pXmtw0TGQCyYo36crtXf3GoGjPFkVXW0MB3PXaEjLvoFeackq4RPbrVMXKBy2U6QjUBmhSY0UJv3kojopj3hw3IytSMoiofajSJfaA&quot; /&gt;&lt;/figure&gt;



&lt;p&gt;From all of us at the Eclipse Foundation, we’d like to wish the LGBTQ+ community a happy Pride Month.&lt;/p&gt;



&lt;p&gt;As June winds down, we’d like to recognize the Eclipse Community’s continuing efforts to foster an open and welcoming environment for everyone. &lt;/p&gt;



&lt;p&gt;Our &lt;a href=&quot;https://www.eclipse.org/org/documents/Community_Code_of_Conduct.php&quot;&gt;Community Code of Conduct&lt;/a&gt; outlines the standards of behavior for everyone in our community. These standards include the usage of inclusive and welcoming language, being respectful of differing viewpoints, and showing empathy towards members of differing communities.&lt;/p&gt;



&lt;p&gt;With contributors and committers from all over the world with different life experiences, we understand that it takes all of us to maintain a culture where everyone can feel like they belong. We also understand that our efforts to create safe and accepting spaces for people of all races, faiths, sexual orientations and gender identities do not end at simply upholding our Code of Conduct. &lt;/p&gt;



&lt;p&gt;That’s why we’re welcoming feedback on how we can increase our inclusion and diversity efforts. If you have any ideas on how we can work to improve in this area, please contact  emo@eclipse.org.&lt;/p&gt;</description>
	<pubDate>Mon, 27 Jun 2022 12:43:00 +0000</pubDate>
</item>
<item>
	<title>Jonas, Maximilian and Philip: Moving Tools to the Cloud: Challenges and Best Practices</title>
	<guid isPermaLink="false">https://eclipsesource.com/?p=46115</guid>
	<link>https://eclipsesource.com/blogs/2022/06/21/moving-tools-to-the-cloud-challenges-and-best-practices/</link>
	<description>&lt;p&gt;Are you interested in moving tools and IDEs into the cloud? Do you want to learn about challenges, best practices and...&lt;/p&gt;
&lt;p&gt;The post &lt;a href=&quot;https://eclipsesource.com/blogs/2022/06/21/moving-tools-to-the-cloud-challenges-and-best-practices/&quot; rel=&quot;nofollow&quot;&gt;Moving Tools to the Cloud: Challenges and Best Practices&lt;/a&gt; appeared first on &lt;a href=&quot;https://eclipsesource.com&quot; rel=&quot;nofollow&quot;&gt;EclipseSource&lt;/a&gt;.&lt;/p&gt;</description>
	<pubDate>Tue, 21 Jun 2022 06:49:12 +0000</pubDate>
</item>
<item>
	<title>Eclipse Announcements: OpenHW Group Announces RISC-V-based CORE-V MCU Development Kit for IoT Built with Open Source Hardware &amp; Software</title>
	<guid isPermaLink="true">https://newsroom.eclipse.org/news/announcements/openhw-group-announces-risc-v-based-core-v-mcu-development-kit-iot-built-open</guid>
	<link>https://newsroom.eclipse.org/news/announcements/openhw-group-announces-risc-v-based-core-v-mcu-development-kit-iot-built-open</link>
	<pubDate>Tue, 21 Jun 2022 06:45:00 +0000</pubDate>
</item>
<item>
	<title>Eclipse Announcements: Open Source Security at the Eclipse Foundation</title>
	<guid isPermaLink="true">https://newsroom.eclipse.org/news/announcements/open-source-security-eclipse-foundation</guid>
	<link>https://newsroom.eclipse.org/news/announcements/open-source-security-eclipse-foundation</link>
	<description>With the help of funding from the Alpha-Omega Project, the Eclipse Foundation is rolling out new supply chain security measures.</description>
	<pubDate>Mon, 20 Jun 2022 17:00:13 +0000</pubDate>
</item>
<item>
	<title>Mike Milinkovich: Open Source Security at the Eclipse Foundation</title>
	<guid isPermaLink="false">http://eclipse-foundation.blog/?p=1687</guid>
	<link>https://eclipse-foundation.blog/2022/06/19/open-source-security-at-the-eclipse-foundation/</link>
	<description>&lt;p&gt;Open source software is the single most important engine for innovation today. The ability to freely combine software components, frameworks, and platforms frees developers from constantly reinventing the wheel and allows them to focus on the new innovations that users want. Free software also enables business models to scale in ways that proprietary software would never allow. Globally and in all sectors of the economy, building on top of open source software is the dominant approach to delivering successful software systems today. &lt;/p&gt;



&lt;p&gt;However, with great success comes great responsibility. From Heartbleed to SolarWinds to Log4j, securing open source software and its global supply chain has never been more important. The reasons for this are many, but among them is that for too long open source has been treated by many of its consumers as “free as in free beer” where they should have been treating it as “free as in a free puppy.” Contributing to the sustainability of the projects and communities that deliver open source is really no longer a choice. It is a necessity.&lt;/p&gt;



&lt;p&gt;At the Eclipse Foundation, we believe that foundations have a role to play in addressing the challenges of securing open source and its supply chain. Specifically, we want to &lt;a href=&quot;https://eclipse-foundation.blog/2022/05/12/security-leadership-at-the-eclipse-foundation/&quot;&gt;provide services to our projects&lt;/a&gt; that help improve their security posture. But doing so requires additional staff and resources. That’s why we are so grateful for the financial support from the &lt;a href=&quot;https://openssf.org/community/alpha-omega/&quot;&gt;OpenSSF’s Alpha-Omega project&lt;/a&gt;, being announced today. This money will allow us to start building a team to roll out many of the ideas in our &lt;a href=&quot;https://github.com/eclipse-cbi/best-practices/blob/main/software-supply-chain/osssc-best-practices.md&quot;&gt;Open Source Software Supply Chain Best Practices&lt;/a&gt; document under the &lt;a href=&quot;https://eclipse-foundation.blog/2022/05/12/security-leadership-at-the-eclipse-foundation/&quot;&gt;leadership&lt;/a&gt; of Mikael Barbero, our Head of Security. &lt;/p&gt;



&lt;p&gt;Some of the ways that we are going to put this funding to good use include:&lt;/p&gt;



&lt;ul&gt;&lt;li&gt;Automate the generation of static source-based SBOMs for all Eclipse Foundation project repositories.&lt;/li&gt;&lt;li&gt;Implement a SLSA-based project badging program for Eclipse Foundation projects.&lt;/li&gt;&lt;li&gt;Initiate a number of security audits for high-profile Eclipse Foundation projects.&lt;/li&gt;&lt;/ul&gt;



&lt;p&gt;We are also going to provide regular and public updates to the community about our progress and initiatives.&lt;/p&gt;



&lt;p&gt;Software security is a never-ending process. This funding is the first step in a journey. We appreciate the support of the Alpha-Omega project, and are committed to using it effectively. &lt;/p&gt;</description>
	<pubDate>Sun, 19 Jun 2022 23:28:07 +0000</pubDate>
</item>
<item>
	<title>Webtools News: WTP 3.26 Released!</title>
	<guid isPermaLink="false">http://www.eclipse.org/webtools/news.php#permalink200</guid>
	<link>http://eclipse.org/webtools/releases/3.26</link>
	<description>&lt;div&gt;
      The Eclipse Web Tools Platform 3.26 has been released!
      &lt;a href=&quot;https://wiki.eclipse.org/WTP_FAQ#How_do_I_install_WTP.3F&quot;&gt;Installation&lt;/a&gt;
      and updates can be performed using the Eclipse IDE 2022-06
      &lt;a href=&quot;http://download.eclipse.org/releases/2022-06/&quot;&gt;Update Site&lt;/a&gt;
      or through any of the related
      &lt;a href=&quot;https://marketplace.eclipse.org/user/nitind/listings&quot;&gt;Eclipse Marketplace&lt;/a&gt;
      .
      Release 3.26 is included in the 2022-06
      &lt;a href=&quot;https://www.eclipse.org/downloads/packages/release/2022-06/r/eclipse-ide-enterprise-java-and-web-developers&quot;&gt;
        Eclipse IDE for Enterprise Java and Web Developers
      &lt;/a&gt;
      , with selected portions also included in several
      &lt;a href=&quot;https://www.eclipse.org/downloads/compare.php&quot;&gt;other packages&lt;/a&gt;
      . Adopters can download
      &lt;a href=&quot;https://download.eclipse.org/webtools/downloads/drops/R3.26.0/R-3.26.0-20220526191850/&quot;&gt;the R3.26 p2 repository&lt;/a&gt;
      directly and combine it with the necessary dependencies.&lt;/div&gt;&lt;p&gt;&lt;a href=&quot;http://www.eclipse.org/webtools/news.php#permalink200&quot;&gt;More news&lt;/a&gt;&lt;/p&gt;</description>
	<pubDate>Wed, 15 Jun 2022 20:59:00 +0000</pubDate>
</item>
<item>
	<title>Eclipse Announcements: Eclipse IDE 2022-06 Release</title>
	<guid isPermaLink="true">https://newsroom.eclipse.org/news/announcements/eclipse-ide-2022-06-release</guid>
	<link>https://newsroom.eclipse.org/news/announcements/eclipse-ide-2022-06-release</link>
	<description>The Eclipse IDE is receiving its quarterly release update, featuring platform improvements, the latest Java support, and more. Download the leading open source platform for developers today!</description>
	<pubDate>Wed, 15 Jun 2022 14:30:40 +0000</pubDate>
</item>
<item>
	<title>Tanja Obradovic: Almost there! Jakarta EE 10 is nearly ready, and the celebrations have already started!</title>
	<guid isPermaLink="false">7182 at https://blogs.eclipse.org</guid>
	<link>https://blogs.eclipse.org/post/tanja-obradovic/almost-there-jakarta-ee-10-nearly-ready-and-celebrations-have-already-started</link>
	<description>&lt;div class=&quot;field field-name-body field-type-text-with-summary field-label-hidden&quot;&gt;&lt;div class=&quot;field-items&quot;&gt;&lt;div class=&quot;field-item even&quot;&gt;&lt;p&gt;&lt;span style=&quot;font-size: 11pt; font-variant: normal; white-space: pre-wrap;&quot;&gt;&lt;span style=&quot;font-family: Arial;&quot;&gt;&lt;span style=&quot;color: #000000;&quot;&gt;&lt;span style=&quot;font-weight: 400;&quot;&gt;&lt;span style=&quot;font-style: normal;&quot;&gt;&lt;span style=&quot;text-decoration: none;&quot;&gt;The work of the Jakarta EE specification developers is in its final stages. This release is getting quite a bit of attention, and the wider enterprise Java community was obviously waiting for this kind of progress for a very long time! Focusing the &lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;a href=&quot;https://eclipse-ee4j.github.io/jakartaee-platform/jakartaee10/JakartaEE10ReleasePlan&quot; style=&quot;text-decoration: none;&quot;&gt;&lt;span style=&quot;font-size: 11pt; font-variant: normal; white-space: pre-wrap;&quot;&gt;&lt;span style=&quot;font-family: Arial;&quot;&gt;&lt;span style=&quot;color: #1155cc;&quot;&gt;&lt;span style=&quot;font-weight: 400;&quot;&gt;&lt;span style=&quot;font-style: normal;&quot;&gt;&lt;span style=&quot;text-decoration: underline;&quot;&gt;&lt;span&gt;&lt;span&gt;Jakarta EE 10 release plan&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/a&gt;&lt;span style=&quot;font-size: 11pt; font-variant: normal; white-space: pre-wrap;&quot;&gt;&lt;span style=&quot;font-family: Arial;&quot;&gt;&lt;span style=&quot;color: #000000;&quot;&gt;&lt;span style=&quot;font-weight: 400;&quot;&gt;&lt;span style=&quot;font-style: normal;&quot;&gt;&lt;span style=&quot;text-decoration: none;&quot;&gt; and following the &lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;a href=&quot;https://jakarta.ee/about/jesp/&quot; style=&quot;text-decoration: none;&quot;&gt;&lt;span style=&quot;font-size: 11pt; font-variant: normal; white-space: pre-wrap;&quot;&gt;&lt;span style=&quot;font-family: Arial;&quot;&gt;&lt;span style=&quot;color: #1155cc;&quot;&gt;&lt;span style=&quot;font-weight: 400;&quot;&gt;&lt;span style=&quot;font-style: normal;&quot;&gt;&lt;span style=&quot;text-decoration: underline;&quot;&gt;&lt;span&gt;&lt;span&gt;Jakarta EE Specification Process&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/a&gt;&lt;span style=&quot;font-size: 11pt; font-variant: normal; white-space: pre-wrap;&quot;&gt;&lt;span style=&quot;font-family: Arial;&quot;&gt;&lt;span style=&quot;color: #000000;&quot;&gt;&lt;span style=&quot;font-weight: 400;&quot;&gt;&lt;span style=&quot;font-style: normal;&quot;&gt;&lt;span style=&quot;text-decoration: none;&quot;&gt;, it feels amazing to report to you that &lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&quot;font-size: 11pt; font-variant: normal; white-space: pre-wrap;&quot;&gt;&lt;span style=&quot;font-family: Arial;&quot;&gt;&lt;span style=&quot;color: #000000;&quot;&gt;&lt;span style=&quot;font-weight: 700;&quot;&gt;&lt;span style=&quot;font-style: italic;&quot;&gt;&lt;span style=&quot;text-decoration: none;&quot;&gt;all individual Jakarta EE specifications&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&quot;font-size: 11pt; font-variant: normal; white-space: pre-wrap;&quot;&gt;&lt;span style=&quot;font-family: Arial;&quot;&gt;&lt;span style=&quot;color: #000000;&quot;&gt;&lt;span style=&quot;font-weight: 400;&quot;&gt;&lt;span style=&quot;font-style: normal;&quot;&gt;&lt;span style=&quot;text-decoration: none;&quot;&gt; have completed their Release Review!!!&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/p&gt;

&lt;p&gt;&lt;span style=&quot;font-size: 11pt; font-variant: normal; white-space: pre-wrap;&quot;&gt;&lt;span style=&quot;font-family: Arial;&quot;&gt;&lt;span style=&quot;color: #000000;&quot;&gt;&lt;span style=&quot;font-weight: 400;&quot;&gt;&lt;span style=&quot;font-style: normal;&quot;&gt;&lt;span style=&quot;text-decoration: none;&quot;&gt;We are at the point where we are about to initiate Release Review ballots for:&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/p&gt;

&lt;ul&gt;
	&lt;li&gt;&lt;span style=&quot;font-size: 11pt; font-variant: normal; white-space: pre-wrap;&quot;&gt;&lt;span style=&quot;font-family: Arial;&quot;&gt;&lt;span style=&quot;color: #000000;&quot;&gt;&lt;span style=&quot;font-weight: 400;&quot;&gt;&lt;span style=&quot;font-style: normal;&quot;&gt;&lt;span style=&quot;text-decoration: none;&quot;&gt;Jakarta EE Platform Specification 10 - &lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;a href=&quot;https://github.com/jakartaee/specifications/pull/498&quot; style=&quot;text-decoration: none;&quot;&gt;&lt;span style=&quot;font-size: 11pt; font-variant: normal; white-space: pre-wrap;&quot;&gt;&lt;span style=&quot;font-family: Arial;&quot;&gt;&lt;span style=&quot;color: #1155cc;&quot;&gt;&lt;span style=&quot;font-weight: 400;&quot;&gt;&lt;span style=&quot;font-style: normal;&quot;&gt;&lt;span style=&quot;text-decoration: underline;&quot;&gt;&lt;span&gt;&lt;span&gt;https://github.com/jakartaee/specifications/pull/498&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/a&gt;&lt;span style=&quot;font-size: 11pt; font-variant: normal; white-space: pre-wrap;&quot;&gt;&lt;span style=&quot;font-family: Arial;&quot;&gt;&lt;span style=&quot;color: #000000;&quot;&gt;&lt;span style=&quot;font-weight: 400;&quot;&gt;&lt;span style=&quot;font-style: normal;&quot;&gt;&lt;span style=&quot;text-decoration: none;&quot;&gt; &lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/li&gt;
	&lt;li&gt;&lt;span style=&quot;font-size: 11pt; font-variant: normal; white-space: pre-wrap;&quot;&gt;&lt;span style=&quot;font-family: Arial;&quot;&gt;&lt;span style=&quot;color: #000000;&quot;&gt;&lt;span style=&quot;font-weight: 400;&quot;&gt;&lt;span style=&quot;font-style: normal;&quot;&gt;&lt;span style=&quot;text-decoration: none;&quot;&gt;Jakarta EE Web Profile 10 - &lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;a href=&quot;https://github.com/jakartaee/specifications/pull/497&quot; style=&quot;text-decoration: none;&quot;&gt;&lt;span style=&quot;font-size: 11pt; font-variant: normal; white-space: pre-wrap;&quot;&gt;&lt;span style=&quot;font-family: Arial;&quot;&gt;&lt;span style=&quot;color: #1155cc;&quot;&gt;&lt;span style=&quot;font-weight: 400;&quot;&gt;&lt;span style=&quot;font-style: normal;&quot;&gt;&lt;span style=&quot;text-decoration: underline;&quot;&gt;&lt;span&gt;&lt;span&gt;https://github.com/jakartaee/specifications/pull/497&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/a&gt;&lt;span style=&quot;font-size: 11pt; font-variant: normal; white-space: pre-wrap;&quot;&gt;&lt;span style=&quot;font-family: Arial;&quot;&gt;&lt;span style=&quot;color: #000000;&quot;&gt;&lt;span style=&quot;font-weight: 400;&quot;&gt;&lt;span style=&quot;font-style: normal;&quot;&gt;&lt;span style=&quot;text-decoration: none;&quot;&gt; &lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/li&gt;
	&lt;li&gt;&lt;span style=&quot;font-size: 11pt; font-variant: normal; white-space: pre-wrap;&quot;&gt;&lt;span style=&quot;font-family: Arial;&quot;&gt;&lt;span style=&quot;color: #000000;&quot;&gt;&lt;span style=&quot;font-weight: 400;&quot;&gt;&lt;span style=&quot;font-style: normal;&quot;&gt;&lt;span style=&quot;text-decoration: none;&quot;&gt;Jakarta EE Core Profile 10 - &lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;a href=&quot;https://github.com/jakartaee/specifications/pull/495&quot; style=&quot;text-decoration: none;&quot;&gt;&lt;span style=&quot;font-size: 11pt; font-variant: normal; white-space: pre-wrap;&quot;&gt;&lt;span style=&quot;font-family: Arial;&quot;&gt;&lt;span style=&quot;color: #1155cc;&quot;&gt;&lt;span style=&quot;font-weight: 400;&quot;&gt;&lt;span style=&quot;font-style: normal;&quot;&gt;&lt;span style=&quot;text-decoration: underline;&quot;&gt;&lt;span&gt;&lt;span&gt;https://github.com/jakartaee/specifications/pull/495&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/a&gt;&lt;span style=&quot;font-size: 11pt; font-variant: normal; white-space: pre-wrap;&quot;&gt;&lt;span style=&quot;font-family: Arial;&quot;&gt;&lt;span style=&quot;color: #000000;&quot;&gt;&lt;span style=&quot;font-weight: 400;&quot;&gt;&lt;span style=&quot;font-style: normal;&quot;&gt;&lt;span style=&quot;text-decoration: none;&quot;&gt; &lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;span style=&quot;font-size: 11pt; font-variant: normal; white-space: pre-wrap;&quot;&gt;&lt;span style=&quot;font-family: Arial;&quot;&gt;&lt;span style=&quot;color: #000000;&quot;&gt;&lt;span style=&quot;font-weight: 400;&quot;&gt;&lt;span style=&quot;font-style: normal;&quot;&gt;&lt;span style=&quot;text-decoration: none;&quot;&gt;This will assume that the Compatible Implementations will be used for ratification. Stay tuned for the progress on these.&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/p&gt;

&lt;p&gt;&lt;span style=&quot;font-size: 11pt; font-variant: normal; white-space: pre-wrap;&quot;&gt;&lt;span style=&quot;font-family: Arial;&quot;&gt;&lt;span style=&quot;color: #000000;&quot;&gt;&lt;span style=&quot;font-weight: 400;&quot;&gt;&lt;span style=&quot;font-style: normal;&quot;&gt;&lt;span style=&quot;text-decoration: none;&quot;&gt;I would also like to invite you to watch out for all events related to the celebration of the Jakarta EE 10 release. We will have a series of webinars, talks, and popular JakartaOne Livestreams in different languages that will celebrate this community-driven innovative release. We started a month ago with &lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;a href=&quot;https://www.youtube.com/watch?v=mLKScrU6t20&quot; style=&quot;text-decoration: none;&quot;&gt;&lt;span style=&quot;font-size: 11pt; font-variant: normal; white-space: pre-wrap;&quot;&gt;&lt;span style=&quot;font-family: Arial;&quot;&gt;&lt;span style=&quot;color: #1155cc;&quot;&gt;&lt;span style=&quot;font-weight: 400;&quot;&gt;&lt;span style=&quot;font-style: normal;&quot;&gt;&lt;span style=&quot;text-decoration: underline;&quot;&gt;&lt;span&gt;&lt;span&gt;Payara’s webinar&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/a&gt;&lt;span style=&quot;font-size: 11pt; font-variant: normal; white-space: pre-wrap;&quot;&gt;&lt;span style=&quot;font-family: Arial;&quot;&gt;&lt;span style=&quot;color: #000000;&quot;&gt;&lt;span style=&quot;font-weight: 400;&quot;&gt;&lt;span style=&quot;font-style: normal;&quot;&gt;&lt;span style=&quot;text-decoration: none;&quot;&gt;, next week we’ll have a &lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;a href=&quot;https://community.ibm.com/community/user/wasdevops/events/event-description?CalendarEventKey=bc40b373-297a-43f5-992e-bd9150f688c9&amp;amp;CommunityKey=5c4ba155-561a-4794-9883-bb0c6164e14e&amp;amp;Home=%2fcommunity%2fuser%2fwasdevops%2fcommunities%2fcommunity-home%2frecent-community-events&quot; style=&quot;text-decoration: none;&quot;&gt;&lt;span style=&quot;font-size: 11pt; font-variant: normal; white-space: pre-wrap;&quot;&gt;&lt;span style=&quot;font-family: Arial;&quot;&gt;&lt;span style=&quot;color: #1155cc;&quot;&gt;&lt;span style=&quot;font-weight: 400;&quot;&gt;&lt;span style=&quot;font-style: normal;&quot;&gt;&lt;span style=&quot;text-decoration: underline;&quot;&gt;&lt;span&gt;&lt;span&gt;webinar with IBM&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/a&gt;&lt;span style=&quot;font-size: 11pt; font-variant: normal; white-space: pre-wrap;&quot;&gt;&lt;span style=&quot;font-family: Arial;&quot;&gt;&lt;span style=&quot;color: #000000;&quot;&gt;&lt;span style=&quot;font-weight: 400;&quot;&gt;&lt;span style=&quot;font-style: normal;&quot;&gt;&lt;span style=&quot;text-decoration: none;&quot;&gt;, and on &lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&quot;font-size: 11pt; font-variant: normal; white-space: pre-wrap;&quot;&gt;&lt;span style=&quot;font-family: Arial;&quot;&gt;&lt;span style=&quot;color: #000000;&quot;&gt;&lt;span style=&quot;font-weight: 700;&quot;&gt;&lt;span style=&quot;font-style: normal;&quot;&gt;&lt;span style=&quot;text-decoration: none;&quot;&gt;June 28th &lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&quot;font-size: 11pt; font-variant: normal; white-space: pre-wrap;&quot;&gt;&lt;span style=&quot;font-family: Arial;&quot;&gt;&lt;span style=&quot;color: #000000;&quot;&gt;&lt;span style=&quot;font-weight: 400;&quot;&gt;&lt;span style=&quot;font-style: normal;&quot;&gt;&lt;span style=&quot;text-decoration: none;&quot;&gt;we will have &lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;a href=&quot;https://www.crowdcast.io/e/june28_22_jakarta&quot; style=&quot;text-decoration: none;&quot;&gt;&lt;span style=&quot;font-size: 11pt; font-variant: normal; white-space: pre-wrap;&quot;&gt;&lt;span style=&quot;font-family: Arial;&quot;&gt;&lt;span style=&quot;color: #1155cc;&quot;&gt;&lt;span style=&quot;font-weight: 700;&quot;&gt;&lt;span style=&quot;font-style: normal;&quot;&gt;&lt;span style=&quot;text-decoration: underline;&quot;&gt;&lt;span&gt;&lt;span&gt;Jakarta Tech Talk - Jakarta EE 10 Release Celebration&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/a&gt;&lt;span style=&quot;font-size: 11pt; font-variant: normal; white-space: pre-wrap;&quot;&gt;&lt;span style=&quot;font-family: Arial;&quot;&gt;&lt;span style=&quot;color: #000000;&quot;&gt;&lt;span style=&quot;font-weight: 400;&quot;&gt;&lt;span style=&quot;font-style: normal;&quot;&gt;&lt;span style=&quot;text-decoration: none;&quot;&gt;, please register today. Shortly after, on June 30th for all German speakers there will be &lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;a href=&quot;https://jakartaone.org/2022/german/&quot; style=&quot;text-decoration: none;&quot;&gt;&lt;span style=&quot;font-size: 11pt; font-variant: normal; white-space: pre-wrap;&quot;&gt;&lt;span style=&quot;font-family: Arial;&quot;&gt;&lt;span style=&quot;color: #1155cc;&quot;&gt;&lt;span style=&quot;font-weight: 400;&quot;&gt;&lt;span style=&quot;font-style: normal;&quot;&gt;&lt;span style=&quot;text-decoration: underline;&quot;&gt;&lt;span&gt;&lt;span&gt;JakartaOne Livestream German&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/a&gt;&lt;span style=&quot;font-size: 11pt; font-variant: normal; white-space: pre-wrap;&quot;&gt;&lt;span style=&quot;font-family: Arial;&quot;&gt;&lt;span style=&quot;color: #000000;&quot;&gt;&lt;span style=&quot;font-weight: 400;&quot;&gt;&lt;span style=&quot;font-style: normal;&quot;&gt;&lt;span style=&quot;text-decoration: none;&quot;&gt;! More events to follow, so stay tuned!&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/p&gt;

&lt;p style=&quot;line-height: 1.38;&quot;&gt;&lt;span style=&quot;font-size: 11pt; font-variant: normal; white-space: pre-wrap;&quot;&gt;&lt;span style=&quot;font-family: Arial;&quot;&gt;&lt;span style=&quot;color: #000000;&quot;&gt;&lt;span style=&quot;font-weight: 400;&quot;&gt;&lt;span style=&quot;font-style: normal;&quot;&gt;&lt;span style=&quot;text-decoration: none;&quot;&gt;If you plan an event in your Java community celebrating Jakarta EE 10 release, please let us know - we would love to know about it and let the world know.&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/p&gt;

&lt;p style=&quot;line-height: 1.38;&quot;&gt; &lt;/p&gt;

&lt;p&gt; &lt;/p&gt;
&lt;/div&gt;&lt;/div&gt;&lt;/div&gt;</description>
	<pubDate>Tue, 14 Jun 2022 20:31:28 +0000</pubDate>
</item>
<item>
	<title>John Kellerman: Eclipse Cloud DevTools Contributor Award: Eclipse Theia Blueprint</title>
	<guid isPermaLink="false">7181 at https://blogs.eclipse.org</guid>
	<link>https://blogs.eclipse.org/post/john-kellerman/eclipse-cloud-devtools-contributor-award-eclipse-theia-blueprint</link>
	<description>&lt;div class=&quot;field field-name-body field-type-text-with-summary field-label-hidden&quot;&gt;&lt;div class=&quot;field-items&quot;&gt;&lt;div class=&quot;field-item even&quot;&gt;&lt;p&gt;The Eclipse Cloud DevTools contributor award this month goes to all parties which contributed to Eclipse Theia Blueprint: &lt;a href=&quot;https://www.eclipse.org/membership/showMember.php?member_id=823&quot;&gt;Arm&lt;/a&gt;, &lt;a href=&quot;https://www.eclipse.org/membership/showMember.php?member_id=800&quot;&gt;STMicroelectronics&lt;/a&gt;, &lt;a href=&quot;https://www.eclipse.org/membership/showMember.php?member_id=690&quot;&gt;EclipseSource&lt;/a&gt; and &lt;a href=&quot;https://www.eclipse.org/membership/showMember.php?member_id=682&quot;&gt;Ericsson&lt;/a&gt;. &lt;a href=&quot;https://theia-ide.org/docs/blueprint_download&quot;&gt;Theia Blueprint&lt;/a&gt; was released last year and been actively maintained with a new release every month since then. It's time to honor the efforts of those involved with this month's award. Congratulations and thank you for this and all your other great contributions!&lt;/p&gt;

&lt;p&gt;Theia Blueprint is a great example of how open source collaboration works in the Eclipse ecosystem and how joined efforts combine for a great outcome. An alpha version of the build scripts were initially developed by Arm. STMicroelectronics picked up this work and contributed the first distributed version along with documentation and a download page. EclipseSource and Ericsson have been continuously contributing to improvements and the maintenance since then.&lt;/p&gt;

&lt;p&gt;&lt;img alt=&quot;&quot; class=&quot;center-block&quot; height=&quot;375&quot; src=&quot;https://blogs.eclipse.org/sites/default/files/users/user750/Thiea-blueprint.png&quot; width=&quot;675&quot; /&gt;&lt;/p&gt;

&lt;p&gt;Theia Blueprint is an important piece of the Theia ecosystem. Theia is a framework for building tools and IDEs. As a consequence, for a long time Theis did not provide a direct download that could be used immediately. Eclipse Theia Blueprint provides exactly this. It is both a full fledged IDE showcasing Theia's capabilities as well as a template for further customization. So you can just &lt;a href=&quot;https://theia-ide.org/docs/blueprint_download&quot;&gt;download and use it&lt;/a&gt;. Or you can use it as a basis for your own custom product.&lt;/p&gt;

&lt;p&gt;We want to thank all involved for this great addition to the Theia ecosystem and congratulations again for winning the award!&lt;/p&gt;

&lt;p&gt;This Eclipse Cloud DevTools contributor award is sponsored by &lt;a href=&quot;https://eclipsesource.com/&quot;&gt;EclipseSource&lt;/a&gt;, providing &lt;a href=&quot;https://eclipsesource.com/services/tools/&quot;&gt;consulting and implementation services&lt;/a&gt; for &lt;a href=&quot;https://eclipsesource.com/web-and-cloud-based-tools/&quot;&gt;web-based tools&lt;/a&gt;, &lt;a href=&quot;https://eclipsesource.com/technology/eclipse-glsp/&quot;&gt;Eclipse GLSP&lt;/a&gt;,  &lt;a href=&quot;https://eclipsesource.com/technology/eclipse-theia/&quot;&gt;Eclipse Theia&lt;/a&gt;, and &lt;a href=&quot;https://eclipsesource.com/technology/vs-code/&quot;&gt;VS Code&lt;/a&gt;.&lt;/p&gt;
&lt;/div&gt;&lt;/div&gt;&lt;/div&gt;</description>
	<pubDate>Tue, 14 Jun 2022 16:14:54 +0000</pubDate>
</item>
<item>
	<title>Lorenzo Bettini: Xtext 2.27.0: update your Xbase compiler tests</title>
	<guid isPermaLink="false">https://www.lorenzobettini.it/?p=1733</guid>
	<link>https://www.lorenzobettini.it/2022/06/xtext-2-27-0-update-your-xbase-compiler-tests/</link>
	<description>&lt;p&gt;If you update to Xtext 2.27.0 and have compiler tests for your Xbase DSL that assert the output of the compilation, you’ll get lots of failures after the update.&lt;/p&gt;
&lt;p&gt;I am guilty of that &lt;img alt=&quot;ðŸ˜‰&quot; class=&quot;wp-smiley&quot; src=&quot;https://s.w.org/images/core/emoji/14.0.0/72x72/1f609.png&quot; style=&quot;height: 1em;&quot; /&gt;&lt;br /&gt;
Well, for a good reason, at least &lt;img alt=&quot;ðŸ™‚&quot; class=&quot;wp-smiley&quot; src=&quot;https://s.w.org/images/core/emoji/14.0.0/72x72/1f642.png&quot; style=&quot;height: 1em;&quot; /&gt;&lt;/p&gt;
&lt;p&gt;In fact, I worked on this issue: &lt;a href=&quot;https://github.com/eclipse/xtext-extras/issues/772&quot; rel=&quot;noopener&quot; target=&quot;_blank&quot;&gt;https://github.com/eclipse/xtext-extras/issues/772&lt;/a&gt; and its fix is included in Xtext 2.27.0.&lt;/p&gt;
&lt;p&gt;Now, the Xbase compilation mechanism &lt;strong&gt;does not generate useless empty lines anymore&lt;/strong&gt; (before, it added lines with two spaces). Your compiler tests will fail because the output is different.&lt;/p&gt;
&lt;p&gt;I personally fixed my tests in my DSLs by simply using the Find/Replace mechanism of Eclipse with this substitution pattern (there are two space characters between the tab character and the newline character):&lt;/p&gt;
&lt;p&gt;&lt;a href=&quot;https://i0.wp.com/www.lorenzobettini.it/wp-content/uploads/2022/06/xtext-replace-1.png&quot;&gt;&lt;img alt=&quot;&quot; class=&quot;alignnone size-full wp-image-1736&quot; height=&quot;587&quot; src=&quot;https://i0.wp.com/www.lorenzobettini.it/wp-content/uploads/2022/06/xtext-replace-1.png?resize=625%2C587&quot; width=&quot;625&quot; /&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;If you have deep nesting in your compilation output, you might have to repeat this substitution with more than two characters, but this should not be required unless you generate nested classes or something like that.&lt;/p&gt;
&lt;p&gt;With the above substitution a test like the following one:&lt;/p&gt;
&lt;p&gt;&lt;a href=&quot;https://i0.wp.com/www.lorenzobettini.it/wp-content/uploads/2022/06/xtext-replace-1-1.png&quot;&gt;&lt;img alt=&quot;&quot; class=&quot;alignnone size-full wp-image-1738&quot; height=&quot;524&quot; src=&quot;https://i0.wp.com/www.lorenzobettini.it/wp-content/uploads/2022/06/xtext-replace-1-1.png?resize=625%2C524&quot; width=&quot;625&quot; /&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;will become like the following one (you see the difference: no empty line with two characters between the two generated constructors:&lt;/p&gt;
&lt;p&gt;&lt;a href=&quot;https://i0.wp.com/www.lorenzobettini.it/wp-content/uploads/2022/06/xtext-replace-2-1.png&quot;&gt;&lt;img alt=&quot;&quot; class=&quot;alignnone size-full wp-image-1740&quot; height=&quot;530&quot; src=&quot;https://i0.wp.com/www.lorenzobettini.it/wp-content/uploads/2022/06/xtext-replace-2-1.png?resize=625%2C530&quot; width=&quot;625&quot; /&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;Now your tests should be fixed &lt;img alt=&quot;ðŸ™‚&quot; class=&quot;wp-smiley&quot; src=&quot;https://s.w.org/images/core/emoji/14.0.0/72x72/1f642.png&quot; style=&quot;height: 1em;&quot; /&gt;&lt;/p&gt;</description>
	<pubDate>Tue, 14 Jun 2022 09:09:22 +0000</pubDate>
</item>
<item>
	<title>Jonas, Maximilian and Philip: Building Custom C/C++ Tools in the Web</title>
	<guid isPermaLink="false">https://eclipsesource.com/?p=46053</guid>
	<link>https://eclipsesource.com/blogs/2022/06/14/building-custom-c-c-tools-in-the-web/</link>
	<description>&lt;p&gt;Do you want to develop a customized tool for C/C++ development in the web/cloud? Do you wonder which open source components...&lt;/p&gt;
&lt;p&gt;The post &lt;a href=&quot;https://eclipsesource.com/blogs/2022/06/14/building-custom-c-c-tools-in-the-web/&quot; rel=&quot;nofollow&quot;&gt;Building Custom C/C++ Tools in the Web&lt;/a&gt; appeared first on &lt;a href=&quot;https://eclipsesource.com&quot; rel=&quot;nofollow&quot;&gt;EclipseSource&lt;/a&gt;.&lt;/p&gt;</description>
	<pubDate>Tue, 14 Jun 2022 08:50:33 +0000</pubDate>
</item>
<item>
	<title>Jonas, Maximilian and Philip: Eclipse Theia 1.26 Release: News and Noteworthy</title>
	<guid isPermaLink="false">https://eclipsesource.com/?p=46068</guid>
	<link>https://eclipsesource.com/blogs/2022/06/10/eclipse-theia-1-26-release-news-and-noteworthy/</link>
	<description>&lt;p&gt;We are happy to announce the Eclipse Theia 1.26 release! This release contains 50 merged pull requests and we welcome ten...&lt;/p&gt;
&lt;p&gt;The post &lt;a href=&quot;https://eclipsesource.com/blogs/2022/06/10/eclipse-theia-1-26-release-news-and-noteworthy/&quot; rel=&quot;nofollow&quot;&gt;Eclipse Theia 1.26 Release: News and Noteworthy&lt;/a&gt; appeared first on &lt;a href=&quot;https://eclipsesource.com&quot; rel=&quot;nofollow&quot;&gt;EclipseSource&lt;/a&gt;.&lt;/p&gt;</description>
	<pubDate>Fri, 10 Jun 2022 08:04:16 +0000</pubDate>
</item>
<item>
	<title>Donald Raab: The Joy of Programming</title>
	<guid isPermaLink="false">https://medium.com/p/64cd5949bc78</guid>
	<link>https://donraab.medium.com/the-joy-of-programming-64cd5949bc78?source=rss-df39b86e9f04------2</link>
	<description>&lt;p&gt;A story of 40 years of coding and still feeling like a kid in a toy store.&lt;/p&gt;&lt;figure&gt;&lt;img alt=&quot;&quot; src=&quot;https://cdn-images-1.medium.com/max/1024/1*r3_PDd31xtU_CpaQSl96Nw.png&quot; /&gt;&lt;figcaption&gt;My XO Laptop running eToys signed by Alan Kay on February 26, 2015 — “The future will be better”&lt;/figcaption&gt;&lt;/figure&gt;&lt;h3&gt;My programming story begins&lt;/h3&gt;&lt;p&gt;I love coding. I started coding in BASIC when I was 11 years old. I am from a fortunate generation, which was the first to have access to personal computers in their homes. I first started teaching myself BASIC on an &lt;a href=&quot;https://en.wikipedia.org/wiki/Epson_HX-20&quot;&gt;Epson HX-20&lt;/a&gt;. The Epson HX-20 is regarded by some as the world’s first laptop computer. I still regret having sold this wonderful piece of computing history when I was in college.&lt;/p&gt;&lt;p&gt;I spent hours reading the manuals that came with the computer, and wrote my first program which calculated weekly pay with overtime. I was soon experimenting with the graphics programming capability of the computer as well. This is when I discovered the &lt;em&gt;Joy of Programming&lt;/em&gt;. I was hooked.&lt;/p&gt;&lt;h3&gt;Telling my story&lt;/h3&gt;&lt;p&gt;I’m now 51 years old, and after 40 years of coding in 20+ different programming languages, I am happy to say that I am still hooked.&lt;/p&gt;&lt;p&gt;For the past twenty years, I have been telling stories about my career and love of programming to kids between the ages of 15 and 100. I always stress that I will “keep coding until someone pries my cold dead fingers from the keyboard.” This may sound a bit morbid, but gets the point across clearly. Programming is my passion and I am fortunate to be paid to do what I love. Over the past 20 years, I realized that in addition to writing code myself, I love to teach others how to code.&lt;/p&gt;&lt;h3&gt;Good stories have heroes&lt;/h3&gt;&lt;blockquote&gt;The best way to predict the future is to invent it.&lt;/blockquote&gt;&lt;blockquote&gt;-Alan Kay, 1971&lt;/blockquote&gt;&lt;p&gt;Pictured above is an XO laptop I bought during the One Laptop Per Child Give One Get One program in 2007. The program running on the screen is &lt;a href=&quot;https://en.wikipedia.org/wiki/Etoys_(programming_language)&quot;&gt;Squeak Etoys&lt;/a&gt;. Alan Kay is credited as the designer of Etoys, which was built in Squeak Smalltalk.&lt;/p&gt;&lt;p&gt;I was fortunate enough to meet Alan Kay while I worked at Goldman Sachs. He was invited to be on a &lt;a href=&quot;https://www.goldmansachs.com/insights/talks-at-gs/dr-vishal-sikka-dr-alan-kay.html&quot;&gt;Talks at GS Panel&lt;/a&gt; while I was an employee. I love that I can watch this talk and relive this experience at any time. If you don’t know who Alan Kay is, or just haven’t seen this talk before, you can see and hear Alan tell some of his story in link above. Alan Kay was kind enough to sign my XO laptop when I met him the same day as this talk— February 26, 2015.&lt;/p&gt;&lt;p&gt;Good stories often have heroes. Alan Kay is one of my computing heroes. I had no idea who Alan Kay was when I was 11 years old. I didn’t know who Alan Kay was until I was in my mid-twenties. For some reason, I was destined to learn about, be forever changed by and eventually meet my hero.&lt;/p&gt;&lt;h3&gt;The 1980s&lt;/h3&gt;&lt;p&gt;During the mid to late-80s, I learned a bunch of programming languages including BASIC, FORTRAN, COBOL, Pascal, Logo, Prolog, Dbase III+ and Clipper ‘87. I taught myself Dbase III+ in the mid-1980s, and then landed a job right after high school as a part-time consultant working with &lt;a href=&quot;https://en.wikipedia.org/wiki/Clipper_(programming_language)&quot;&gt;Clipper Summer &lt;/a&gt;’87. This helped me pay for my university education at Rutgers Newark/NJIT.&lt;/p&gt;&lt;h3&gt;The 1990s&lt;/h3&gt;&lt;p&gt;After I finished school, I got a job working as a corporate programmer in the Rating and Underwriting department of Blue Cross Blue Shield of New Jersey (BCBSNJ). I start out programming in Clipper 5.x, and later would learn and program in the Windows version of Clipper which was called CA-Visual Objects. I spent all of my early career working in DOS, Windows 3.1, OS/2 and then Windows 95/NT.&lt;/p&gt;&lt;p&gt;In the mid-90s, BCBSNJ outsourced its IT department to Integrated System Solutions Corporation (ISSC) which later became IBM Global Services. I became an IBM employee overnight. At first, this was a bit scary, but it turned out to be a great opportunity in my career. Working at IBM would lead me down the path of learning the single most important programming language in my career. Along the way, that’s when I would I would discover who Alan Kay is and the impact he has had on modern computing.&lt;/p&gt;&lt;p&gt;In October 1994, I attended a 5 week hands-on immersion program in Object-Oriented Programming with Smalltalk. The program was part one of IBM’s Object Technology University. I spent 5 weeks in Atlanta, Georgia learning OO programming and design with IBM’s VisualAge Smalltalk. The classes lasted 6–8 hours each day, and we were taught by amazing industry experts in OO design and Smalltalk like &lt;a href=&quot;https://www.packtpub.com/authors/ghica-van-emde-boas&quot;&gt;Ghica van Emde Boas&lt;/a&gt;. I spent the other 4 to 6 hours left in the day coding and exploring VisualAge Smalltalk in the lab. I also read my first book on &lt;a href=&quot;https://www.wirfs-brock.com/DesignBooks.html&quot;&gt;Object-Oriented Design written by Rebecca Wirfs-Brock&lt;/a&gt; during the 5 week program. Rebecca Wirfs-Brock is another one of my programming heroes. I consider myself fortunate to have signed copies of both of her OO design books.&lt;/p&gt;&lt;p&gt;Smalltalk cemented my love of programming. It is a beautiful language and immersive learning environment. I needed to share this new found knowledge with the world.&lt;/p&gt;&lt;p&gt;When I returned to work, I endeavored to find a project that I could build using IBM VisualAge Smalltalk. In the mean time, I continued building applications using CA-Visual Objects. I was now able to apply my new OO programming and design skills in this Object-Oriented language. I was energized and I wanted to share that energy with others. So I recommended sending more developers I worked with to the 5 week Smalltalk immersion program. After a year or so, I started working on a project building a Medicare Enrollment system using IBM VisualAge Smalltalk with two other developers who attended the Smalltalk immersion program. We brought in expert mentors from IBM’s Rapid Solutions Group to work with us. We leveraged and learned a persistence framework that they built on the project. It was a great learning experience.&lt;/p&gt;&lt;p&gt;I then went on to re-design and re-implement all of the Corporate Rating and Underwriting Systems I had previously written in Clipper, only now using IBM VisualAge Smalltalk. During this effort, which lasted about three years, we hired an expert consultant in Distributed Smalltalk. He was a mentor for myself and another colleague, and he taught us a lot about how to think about building and testing distributed systems. He also taught us about the history of programming and Smalltalk. This is when I learned who &lt;a href=&quot;https://amturing.acm.org/award_winners/kay_3972189.cfm&quot;&gt;Alan Kay&lt;/a&gt; and &lt;a href=&quot;https://codersatwork.com/dan-ingalls.html&quot;&gt;Dan Ingalls&lt;/a&gt; were from him. Dan Ingalls is another one of my programming heroes, who wrote an amazing paper titled the “&lt;a href=&quot;https://www.cs.virginia.edu/~evans/cs655/readings/smalltalk.html&quot;&gt;Design Principles Behind Smalltalk&lt;/a&gt;.”&lt;/p&gt;&lt;h3&gt;Y2K+&lt;/h3&gt;&lt;p&gt;In the year 2000, I decided to leave my beautiful coding life as a Smalltalk developer, to go code in Visual Basic and more Enterprise-popular languages like Java, because that is where the industry was focusing. My former Distributed Smalltalk mentor told me to go learn Java and become an expert in it, so I did. I was happy about the possibility of the future, but miserable that I had to code in Visual Basic and Java. I had traded in a flying DeLorean time machine for a Schwinn Bicycle and a Ford Truck. The bicycle looked new and shiny, but was mostly useless for anything but trivial apps. The truck could do a lot of heavy lifting but required a lot of gas (developer effort).&lt;/p&gt;&lt;p&gt;I joined Goldman Sachs (GS) in 2001. I started off as an application architect, was promoted to VP, spent a year living in London, became the CTO for Controllers Technology, was promoted to Tech Fellow, built an amazingly talented Core Platform Team, created an evolving presence for GS on GitHub, and was promoted to Managing Director. That’s about thirteen years in a sentence. I programmed for 15+ years in Java while at GS, and created a collections library in Java that was open sourced as GS Collections in 2012 and eventually became &lt;a href=&quot;https://www.infoq.com/news/2016/01/GS-Collections-Eclipse-Foundn/&quot;&gt;Eclipse Collections&lt;/a&gt; by the end of 2015.&lt;/p&gt;&lt;p&gt;Why did I create &lt;a href=&quot;https://github.com/eclipse/eclipse-collections&quot;&gt;Eclipse Collections&lt;/a&gt;? After five years of programming in Java, I got tired of repeating the same coding patterns over and over again. I recognized much of what was missing in Java, because I had seen so many advanced features while programming in Smalltalk. I found it challenging to explain to developers at the time what they were missing in Java. So I decided to build a few of the features I was missing from Smalltalk in Java. I have taught many Java developers about Smalltalk, OOP, OOAD, Lambdas, TDD, Refactoring over the years. These were all things I had learned in Smalltalk in the 1990s.&lt;/p&gt;&lt;h3&gt;The Joy of Programming&lt;/h3&gt;&lt;p&gt;The most important lesson I have taught developers over the years is that &lt;strong&gt;Programming is Fun&lt;/strong&gt;. If you are programming, and you are not having fun, then you may be doing it wrong. It may not be your fault. Ask for help. We are at our most creative when programming is fun. Creativity is play. We need to be creative to solve the complex problems we are faced with today.&lt;/p&gt;&lt;p&gt;I am very passionate about Eclipse Collections, but it’s not because I was ever particularly interested in collection frameworks. It’s because by using Eclipse Collections I can teach a Java developer how to have real fun while programming in the Java programming language. I have met so many Java developers over the years who either became managers or quit programming altogether because the language seemed to beat the love of programming out of them.&lt;/p&gt;&lt;p&gt;It does not have to be that way. I hated programming in Java for the first few years, but I never lost my love of programming. I certainly missed programming in Smalltalk and Clipper because they were so much more fun and productive to work with. I spent several years working on the Java Specification Request (JSR) 335 Expert Group (EG) with industry experts like Brian Goetz, Doug Lea, Dan Heidinga, Rémi Forax, Sam Pullara, Tim Peierls, Bob Lee, Kevin Bourrillion, Andrey Breslav, Vlad Zakharov and a few others. We all wanted to improve the Java language by introducing lambdas to make it more fun and productive to program in. I can look back now and say I helped the JSR 335 EG “invent the future” for Java. Now Java programming is way more fun, and much less pedestrian to work in since Java 8. But there are still so many developers out there who have yet to experience the joy. Help is available!&lt;/p&gt;&lt;p&gt;I still love Smalltalk, and I’m sure I always will. I have now learned to love programming in Java as well. I could have thrown in the towel and chosen a different language to program in, or a move to a completely different profession. I believed programming is fun, and I worked hard with talented experts in the community to help make Java more fun, not just for myself, but for millions of other Java developers.&lt;/p&gt;&lt;h3&gt;Sharing is Caring&lt;/h3&gt;&lt;p&gt;Do what you love. Love what you do. Get paid for it if and while you can. Pay it forward. Share your joy of programming with others. Motivate and inspire future generations to achieve all they are capable of. Then perhaps you might understand and appreciate the &lt;em&gt;Joy of Programming&lt;/em&gt; as I do.&lt;/p&gt;&lt;p&gt;I gave a talk recently at the Pittsburgh Java User Group titled “Smalltalk or Java? Why not Both!”. There is a YouTube recording linked from the following blog. You can see me live coding in a Smalltalk IDE, which is something I haven’t done in a very long time. This is a great example of me sharing my Joy of Programming in Smalltalk and Java with others. If you take the time to watch it, thank you! I hope you enjoy it!&lt;/p&gt;&lt;p&gt;&lt;a href=&quot;https://medium.com/javarevisited/smalltalk-or-java-why-not-both-5564abd17f1a&quot;&gt;Smalltalk or Java? Why not both!&lt;/a&gt;&lt;/p&gt;&lt;h3&gt;The Future&lt;/h3&gt;&lt;p&gt;After 40 years of coding, I have decided to write a lot more frequently. I am on a personal mission to share as much as I can remember about Java, Eclipse Collections and Smalltalk. I am writing 1–2 blogs a month on Medium now. I will have been blogging publicly for the past five years by August of this year. I want to do my part to make the future better, and to keep the joy of programing alive for future generations.&lt;/p&gt;&lt;p&gt;I was given a wonderful gift seven years ago from one of my computing heroes — Alan Kay. The XO laptop he signed for me is something I will always cherish. Alan couldn’t know at the time, as he had just met me, but what he wrote on the laptop felt like a prophesy to me. He wrote “The future will be better. ” At the time he wrote it, my wife was preparing to enter the hospital a month later to have a stem cell transplant in her battle against AML. I needed to believe what he wrote. This signed laptop literally brought me to tears when I brought it home and shared the story with my wife. Alan had shared the gift of optimism.&lt;/p&gt;&lt;p&gt;Everything at any current time in your work or personal life may completely suck. Current events would seem to prove this the case for many, but the optimist in me believes what Alan wrote is true. The future will be better, but only if we work very hard to make it that way. If we work together, collaborate and invest in each other, we can invent a better future.&lt;/p&gt;&lt;p&gt;One of the joys I have learned about programming in Java that I hadn’t gotten to experience in Smalltalk is the joy of working with a large, collaborative and supportive community. The Java community is absolutely incredible. It is the gift that keeps on giving. I am humbled and honored to be a part of this vibrant community. Together, we will continue to make the future better for the entire Java community. The Joy of Programming continues.&lt;/p&gt;&lt;p&gt;&lt;em&gt;If you’d like to read a detailed version of my Java story from the past two decades, I wrote about it when Java celebrated its 25th anniversary.&lt;/em&gt;&lt;/p&gt;&lt;p&gt;&lt;a href=&quot;https://donraab.medium.com/happy-25th-birthday-java-8ed836ab07d8&quot;&gt;Happy 25th Birthday Java&lt;/a&gt;&lt;/p&gt;&lt;p&gt;&lt;em&gt;I am a Project Lead and Committer for the &lt;/em&gt;&lt;a href=&quot;https://github.com/eclipse/eclipse-collections&quot;&gt;&lt;em&gt;Eclipse Collections&lt;/em&gt;&lt;/a&gt;&lt;em&gt; OSS project at the &lt;/em&gt;&lt;a href=&quot;https://projects.eclipse.org/projects/technology.collections&quot;&gt;&lt;em&gt;Eclipse Foundation&lt;/em&gt;&lt;/a&gt;&lt;em&gt;. &lt;/em&gt;&lt;a href=&quot;https://github.com/eclipse/eclipse-collections&quot;&gt;&lt;em&gt;Eclipse Collections&lt;/em&gt;&lt;/a&gt;&lt;em&gt; is open for &lt;/em&gt;&lt;a href=&quot;https://github.com/eclipse/eclipse-collections/blob/master/CONTRIBUTING.md&quot;&gt;&lt;em&gt;contributions&lt;/em&gt;&lt;/a&gt;&lt;em&gt;. If you like the library, you can let us know by starring it on GitHub.&lt;/em&gt;&lt;/p&gt;&lt;img alt=&quot;&quot; height=&quot;1&quot; src=&quot;https://medium.com/_/stat?event=post.clientViewed&amp;amp;referrerSource=full_rss&amp;amp;postId=64cd5949bc78&quot; width=&quot;1&quot; /&gt;</description>
	<pubDate>Wed, 08 Jun 2022 13:37:50 +0000</pubDate>
</item>
<item>
	<title>John Kellerman: Eclipse Cloud DevTools Digest - May, 2022</title>
	<guid isPermaLink="false">7173 at https://blogs.eclipse.org</guid>
	<link>https://blogs.eclipse.org/post/john-kellerman/eclipse-cloud-devtools-digest-may-2022</link>
	<description>&lt;div class=&quot;field field-name-body field-type-text-with-summary field-label-hidden&quot;&gt;&lt;div class=&quot;field-items&quot;&gt;&lt;div class=&quot;field-item even&quot;&gt;&lt;p&gt;Eclipse Cloud Dev Tools Working Group happenings for May, 2022; Arduino, Theia, JKube, and Cloud IDE Days recordings.&lt;/p&gt;

&lt;h3&gt;Getting Started with Theia&lt;/h3&gt;

&lt;p&gt;&lt;img alt=&quot;&quot; class=&quot;center-block&quot; src=&quot;https://blogs.eclipse.org/sites/default/files/users/user750/theia.png&quot; style=&quot;width: 200px; height: 28px;&quot; /&gt;&lt;/p&gt;

&lt;p&gt;Building an IDE that runs both in the cloud and on the desktop can be a daunting experience. In this article, &lt;a class=&quot;url&quot; href=&quot;https://eclipsesource.com/blogs/2022/05/31/getting-started-with-eclipse-theia/&quot;&gt;Jonas, Maximilian &amp;amp; Philip&lt;/a&gt; provide a nice, approachable introduction to Theia and getting started with it, including similarities and differences with VS Code.&lt;/p&gt;

&lt;h3&gt;Cloud DevTools Featured in May Eclipse Newsletter&lt;/h3&gt;

&lt;p&gt;The &lt;a href=&quot;https://newsroom.eclipse.org/eclipse-newsletter/2022/may&quot;&gt;May Eclipse Newsletter&lt;/a&gt; featured the Cloud DevTools Working Group and its project, including articles on Che, Theia, Langium, and JKube.&lt;/p&gt;

&lt;h3&gt;Cloud IDE Days Recordings are Available&lt;/h3&gt;

&lt;p&gt;&lt;img alt=&quot;&quot; class=&quot;center-block&quot; height=&quot;105&quot; src=&quot;https://blogs.eclipse.org/sites/default/files/users/user750/Cloud-ide-days.png&quot; width=&quot;273&quot; /&gt;&lt;/p&gt;

&lt;p&gt;I mentioned last month what a success Cloud DevTools &lt;a href=&quot;https://ecdtools.eclipse.org/events/cloudideday2022/&quot;&gt;Cloud IDE Days 2022&lt;/a&gt; was and to stay tuned for recordings. Well, they're here! See the &lt;a href=&quot;https://www.youtube.com/playlist?list=PLy7t4z5SYNaRPFvy68DJA44C-kwhG-bUN&quot;&gt;Eclipse YouTube channel&lt;/a&gt; for the recordings.&lt;/p&gt;

&lt;h3&gt;May Theia Contributors Award&lt;/h3&gt;

&lt;p&gt;The Eclipse Cloud DevTools contributor award for May goes to the Arduino team, led by Stefano Visconti, for contributing internationalization capabilities to Eclipse Theia. The new &lt;a href=&quot;https://blog.arduino.cc/2022/04/20/the-arduino-ide-2-0-now-speaks-your-language/&quot;&gt;Arduino IDE 2.0&lt;/a&gt; is based on Eclipse Theia. As mentioned in this &lt;a href=&quot;https://blogs.eclipse.org/post/john-kellerman/theia-adopter-story-new-arduino-ide-20&quot;&gt;adopter story&lt;/a&gt;, Arduino does not only benefit from Eclipse Theia, but they also regularly and strategically contribute to it.&lt;/p&gt;

&lt;h3&gt;JKube 1.8 is Out!&lt;/h3&gt;

&lt;p&gt;&lt;img alt=&quot;&quot; class=&quot;center-block&quot; height=&quot;61&quot; src=&quot;https://blogs.eclipse.org/sites/default/files/users/user750/Screen%20Shot%202022-06-06%20at%203.12.21%20PM.png&quot; width=&quot;193&quot; /&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;https://blog.marcnuri.com/tag/eclipse&quot;&gt;Marc Nuri &lt;/a&gt;provides a great &lt;a href=&quot;https://blog.marcnuri.com/eclipse-jkube-1-8-0&quot;&gt;overview&lt;/a&gt; of the JKube 1.8.0 release available on &lt;a href=&quot;https://repo1.maven.org/maven2/org/eclipse/jkube/kubernetes-maven-plugin/1.8.0/&quot;&gt;Maven Central&lt;/a&gt;. Enhancements include improved support for probe definition, Jakarta EE, and Apple M1, among other things.&lt;/p&gt;

&lt;h3&gt;Cloud-Based Diagram Editors&lt;/h3&gt;

&lt;p&gt;&lt;a href=&quot;https://eclipsesource.com/technology/eclipse-glsp/&quot;&gt;&lt;span style=&quot;font-weight: 400;&quot;&gt;Eclipse GLSP&lt;/span&gt;&lt;/a&gt;&lt;span style=&quot;font-weight: 400;&quot;&gt; applies the LSP (Language Server Protocol) to the graphical domain, including a diagram editor based on the Monaco editor. In this article, &lt;/span&gt;&lt;a class=&quot;url&quot; href=&quot;https://eclipsesource.com/blogs/2022/05/24/diagram-editors-in-cloud-ides/&quot;&gt;Jonas, Maximilian &amp;amp; Philip&lt;/a&gt; provide a quick introduction and a demo that showcases GLSP's capabilities.&lt;/p&gt;

&lt;h3&gt;Eclipse Community Awards are Back!&lt;/h3&gt;

&lt;p&gt;Eclipse Community Awards are back! Nominations are in for &lt;a href=&quot;https://gitlab.eclipse.org/eclipsefdn/emo-team/emo/-/issues/269&quot;&gt;Lifetime Achievement&lt;/a&gt;, &lt;a href=&quot;https://gitlab.eclipse.org/eclipsefdn/emo-team/emo/-/issues/268&quot;&gt;Newcomer Evangelist&lt;/a&gt;, &lt;a href=&quot;https://gitlab.eclipse.org/eclipsefdn/emo-team/emo/-/issues/267&quot;&gt;Top Contributor&lt;/a&gt;, and &lt;a href=&quot;https://gitlab.eclipse.org/eclipsefdn/emo-team/emo/-/issues/266&quot;&gt;Top Committer&lt;/a&gt;. Voting will be later this month.&lt;/p&gt;

&lt;h3&gt;EclipseCon 2022 Call for Proposals&lt;/h3&gt;

&lt;p&gt;&lt;a href=&quot;https://www.eclipsecon.org/2022&quot;&gt;&lt;img alt=&quot;&quot; class=&quot;center-block&quot; height=&quot;172&quot; src=&quot;https://blogs.eclipse.org/sites/default/files/custom_uploads/Screen%20Shot%202022-05-04%20at%202.47.50%20PM.png&quot; width=&quot;383&quot; /&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;We are back in person in for EclipseCon 2022. &lt;a href=&quot;https://www.eclipsecon.org/2022/cfp&quot;&gt;Call for proposals &lt;/a&gt;in now open. We'd love to hear from you. Mark your calendars for this October and hope to see you in Ludwigsburg.&lt;/p&gt;

&lt;h3&gt;Eclipse Cloud DevTools Projects&lt;/h3&gt;

&lt;p&gt;&lt;img class=&quot;center-block&quot; src=&quot;https://lh4.googleusercontent.com/NF_blJTT1qIp49qCS68YUefG-Q6tjbtdanHV3cngR609-XKN63n6yIYFdcIhrPseyCPqoff4Qyu2Gakb3KQ1UwP9nxwbr4k0HS9DOOnntAAvABwDDU_wKNTr6PTriImESgtrB8J3&quot; style=&quot;height: 117px; width: 371px;&quot; /&gt;&lt;/p&gt;

&lt;p&gt;Explore the &lt;a href=&quot;https://ecdtools.eclipse.org/projects/&quot;&gt;Eclipse Cloud DevTools ecosystem&lt;/a&gt;! Check out our projects page to find out more about open source innovation for cloud IDEs,extension marketplaces, frameworks and more.&lt;/p&gt;

&lt;h3&gt;Getting Listed on the Cloud DevTools Blog&lt;/h3&gt;

&lt;p&gt;If you are working with, or on, anything in the Cloud DevTools space, &lt;a href=&quot;https://blogs.eclipse.org/post/brian-king/getting-listed-cloud-devtools-blog&quot;&gt;learn how to get your writings posted&lt;/a&gt; in our &lt;a href=&quot;https://ecdtools.eclipse.org/resources/blogs/&quot;&gt;blog section&lt;/a&gt;.&lt;/p&gt;
&lt;/div&gt;&lt;/div&gt;&lt;/div&gt;</description>
	<pubDate>Tue, 07 Jun 2022 18:38:09 +0000</pubDate>
</item>
<item>
	<title>Eclipse Announcements: The Eclipse Foundation Unveils “Sparkplug Compatibility Program”  to Enable Plug’n’Play Industrial IoT</title>
	<guid isPermaLink="true">https://newsroom.eclipse.org/news/announcements/eclipse-foundation-unveils-%E2%80%9Csparkplug-compatibility-program%E2%80%9D-enable-plug%E2%80%99n%E2%80%99play</guid>
	<link>https://newsroom.eclipse.org/news/announcements/eclipse-foundation-unveils-%E2%80%9Csparkplug-compatibility-program%E2%80%9D-enable-plug%E2%80%99n%E2%80%99play</link>
	<description>&lt;p class=&quot;rtecenter&quot;&gt;&lt;em&gt;This new program gives software and hardware providers the means to showcase compatibility and certify products with the Eclipse Sparkplug protocol and MQTT-based IoT infrastructure&lt;/em&gt;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;ORLANDO, Fla., JUNE 7, 2022 – &lt;/strong&gt;The&lt;a href=&quot;https://www.eclipse.org/&quot;&gt; Eclipse Foundation&lt;/a&gt;, one of the world’s largest open-source software foundations, in collaboration with its &lt;a href=&quot;https://sparkplug.eclipse.org/&quot;&gt;Sparkplug Working Group&lt;/a&gt;, today announced at the ARC Industry Forum the launch of the &lt;a href=&quot;https://sparkplug.eclipse.org/compatibility/get-listed&quot;&gt;Sparkplug Compatibility Program&lt;/a&gt;. This program is based on Sparkplug, an open source software specification that enables mission-critical operational technology (“OT”) clients to use industry standards like MQTT to seamlessly integrate data from their applications, sensors, devices, and gateways with most Industrial Internet Of Things (IIoT) Infrastructure.&lt;/p&gt;

&lt;p&gt;“MQTT has already established itself as the ‘de facto’ standard for messaging transport in the IT and OT market sectors,” said Mike Milinkovich, executive director for the Eclipse Foundation. “However, it doesn’t specify the content of its payloads, making interoperability across the IIoT incredibly challenging. Sparkplug, acting as the HTML of the IIoT, is the industry’s best solution for solving this issue and is already in widespread use across multiple industries. Our new program lets industrial firms know if their vendors’ systems are Sparkplug compatible.” &lt;/p&gt;

&lt;p&gt;The Sparkplug Compatibility Program aims to provide integrators and end-users with an easy way to procure devices and software products that are fully compatible with the Sparkplug specification, thus ensuring their solutions will seamlessly integrate with the most common Industrial Internet of Things (IIoT) devices and networks. To be included in the program, products will need to pass an open-source series of tests that validate conformance to the specification. These tests are based on the Sparkplug Technology Compatibility Kit (TCK). Products passing the TCK will be featured in the official list of compatible products, available on the Sparkplug Working Group’s website. In addition, licensees of the Sparkplug Compatible trademark will be able to promote compatibility, while also being recognizable in the marketplace through the use of the “Sparkplug Compatible” logo. &lt;/p&gt;

&lt;p&gt;Organizations who wish to participate in the compatibility program are invited to join the Eclipse Foundation and Sparkplug Working Group. Interested parties can find out more about the &lt;a href=&quot;http://sparkplug.eclipse.org/&quot;&gt;Sparkplug Working Group and the Sparkplug Compatibility Program here&lt;/a&gt;.&lt;/p&gt;

&lt;h2&gt;About Sparkplug &amp;amp; MQTT&lt;/h2&gt;

&lt;p&gt;By design, the MQTT specification does not dictate a Topic Namespace or any payload encoding. However, as the IIoT and other architectures leveraging the publisher/subscriber model are adopted by device OEMs in the industrial sector, having different Topic Namespace and payload encoding can inhibit interoperability for the end customer.&lt;/p&gt;

&lt;p&gt;Sparkplug provides an open and freely available specification for how Edge of Network (EoN) gateways or native MQTT enabled end devices and MQTT Applications communicate bi-directionally within an MQTT Infrastructure. It is recognized that MQTT is used across a wide spectrum of application solution use cases, and an almost indefinable variation of network topologies. To that end the Sparkplug specification addresses the following components within an MQTT infrastructure: &lt;/p&gt;

&lt;ul&gt;
	&lt;li&gt;Sparkplug defines an OT-centric Topic Namespace &lt;/li&gt;
	&lt;li&gt;Sparkplug defines an OT-centric Payload definition optimized for industrial process variables &lt;/li&gt;
	&lt;li&gt;Sparkplug defines MQTT Session State management required by real-time OT SCADA systems&lt;/li&gt;
&lt;/ul&gt;

&lt;h2&gt;Quotes from Participating Organizations &lt;/h2&gt;

&lt;h3&gt;Cirrus Link Solutions&lt;/h3&gt;

&lt;p&gt;“Cirrus Link was founded with the express purpose of providing MQTT centric software for Industrial Automation Solutions. As one of the co-inventors of MQTT I couldn’t be more pleased to be participating with the Eclipse Sparkplug Working group and see the launch of the Sparkplug Compatibility program. Having native devices and software solutions providing “Plug and Play” capabilities leveraging the power of an MQTT/Sparkplug infrastructure will be a disruptive change in the way industrial automation solutions are designed and implemented in the future.” Arlen Nipper, CTO at Cirrus Link Solutions&lt;/p&gt;

&lt;h3&gt;Chevron&lt;/h3&gt;

&lt;p&gt;&quot;For a large enterprise like Chevron, Automation Engineers around the globe &lt;em&gt;could be&lt;/em&gt; spending countless hours testing to see if something will work in their process control network or their IIoT network. Having the confidence that something will &quot;just work&quot; when you plug it in to your system via the Sparkplug compatibility program is a huge saver of time and money.&quot; Todd Anslinger, IIoT &amp;amp; Automation Specialist at Chevron.&lt;/p&gt;

&lt;h3&gt;Inductive Automation&lt;/h3&gt;

&lt;p&gt;“We are definitely excited about the Sparkplug Compatibility Program and the experience of collaborating with this Eclipse Working Group. Since day one, Inductive Automation has supported an open, interoperable, and standards-based approach to industrial automation systems. The Sparkplug Specification expands Digital transformation opportunities across the industrial sector enabling deployments at scale and accelerating time to value. The entire ecosystem supporting IIoT evolution benefits from the launch of the Sparkplug Compatibility Program.” Don Pearson, Chief Strategy Officer, Inductive Automation&lt;/p&gt;

&lt;h3&gt;Opto 22&lt;/h3&gt;

&lt;p&gt;“For our customers, democratizing data in OT systems while securing legacy, brownfield devices is top of mind,” states Benson Hougland, VP Product Strategy with Opto 22. “MQTT with Sparkplug provides the tools they need to safely and simply share data among industrial operations, IT systems, and cloud platforms. Back in 1996, Opto 22 joined with Microsoft to develop the OPC specification—and later found the OPC Foundation—to solve the data share challenges of that decade. Today’s data-sharing problems have evolved. Our Sparkplug Working Group membership is our commitment to offer the most effective solutions now and ensure our customers’ success.”&lt;/p&gt;

&lt;h3&gt;HiveMQ&lt;/h3&gt;

&lt;p&gt;“Sparkplug is changing the OT industry for the better,” states Ian Skerret, VP of Marketing at HiveMQ. “It solves the data interoperability challenges many of our customers have rolling out new IIoT systems. HiveMQ is proud to participate in the collaborative community to make Sparkplug a success.”&lt;/p&gt;

&lt;h3&gt;Canary&lt;/h3&gt;

&lt;p&gt;“Our time-to-value when working with enterprise applications using Sparkplug brokers is mind blowing. Whether 10,000 tags or 2 million tags, historizing Sparkplug tags into a Canary Historian happens instantaneously,” said Jeff Knepper, executive director, Business Development, Canary.&lt;/p&gt;

&lt;h2&gt;About the Eclipse Foundation&lt;/h2&gt;

&lt;p&gt;The Eclipse Foundation provides our global community of individuals and organizations with a mature, scalable, and business-friendly environment for open source software collaboration and innovation. The Foundation is home to the Eclipse IDE, Jakarta EE, and over 400 open source projects, including runtimes, tools, and frameworks for cloud and edge applications, IoT, AI, automotive, systems engineering, distributed ledger technologies, open processor designs, and many others. The Eclipse Foundation is an international non-profit association supported by over 330 members, including industry leaders who value open source as a key enabler for their business strategies. To learn more, follow us on Twitter&lt;a href=&quot;https://twitter.com/EclipseFdn&quot;&gt; @EclipseFdn&lt;/a&gt;,&lt;a href=&quot;https://linkedin.com/company/eclipse-foundation&quot;&gt; LinkedIn&lt;/a&gt; or visit&lt;a href=&quot;http://eclipse.org&quot;&gt; eclipse.org&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;Third-party trademarks mentioned are the property of their respective owners.&lt;/p&gt;

&lt;p&gt;###&lt;/p&gt;

&lt;h2&gt;Media contacts:&lt;/h2&gt;

&lt;p&gt;&lt;strong&gt;Schwartz Public Relations for the Eclipse Foundation, AISBL&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;Stephanie Brüls / Susanne Pawlik&lt;/p&gt;

&lt;p&gt;Sendlinger Straße 42A&lt;/p&gt;

&lt;p&gt;80331 Munich&lt;/p&gt;

&lt;p&gt;EclipseFoundation@schwartzpr.de&lt;/p&gt;

&lt;p&gt;+49 (89) 211 871 – 64 / -35&lt;/p&gt;

&lt;p&gt; &lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Nichols Communications for the Eclipse Foundation, AISBL&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;Jay Nichols&lt;/p&gt;

&lt;p&gt;jay@nicholscomm.com&lt;/p&gt;

&lt;p&gt;+1 408-772-1551&lt;/p&gt;

&lt;h2&gt;&lt;br /&gt;
&lt;br /&gt;
 &lt;/h2&gt;</description>
	<pubDate>Tue, 07 Jun 2022 10:50:18 +0000</pubDate>
</item>
<item>
	<title>John Kellerman: Join us for a Cloud DevTools Q2 Community Update</title>
	<guid isPermaLink="false">7178 at https://blogs.eclipse.org</guid>
	<link>https://blogs.eclipse.org/post/john-kellerman/join-us-cloud-devtools-q2-community-update</link>
	<description>&lt;div class=&quot;field field-name-body field-type-text-with-summary field-label-hidden&quot;&gt;&lt;div class=&quot;field-items&quot;&gt;&lt;div class=&quot;field-item even&quot;&gt;&lt;p&gt;&lt;img alt=&quot;&quot; height=&quot;118&quot; src=&quot;https://blogs.eclipse.org/sites/default/files/users/user750/Screen%20Shot%202022-06-06%20at%202.52.33%20PM.png&quot; width=&quot;391&quot; /&gt;&lt;/p&gt;

&lt;p&gt;Please join the Eclipse Cloud DevTools Working Group for a Q2 2022 Community Update. We'll review key happenings in the open source projects and SIGs and provide an open forum for Q&amp;amp;A.&lt;/p&gt;

&lt;p&gt;June 29 at 10:00 AM EDT, 4:00 PM CET. Calendar entry is on the &lt;a href=&quot;https://calendar.google.com/calendar/u/0/embed?src=c_atlvn0hqrerh0bnr4ag25tpm8g@group.calendar.google.com&quot;&gt;Cloud DevTools Community calendar&lt;/a&gt; with &lt;a href=&quot;https://eclipse.zoom.us/j/89576530923?pwd=N2w1dlVBbmx4ZnN5SUEyL1JJdGxrQT09&quot;&gt;Zoom coordinates&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;Hope to see you there!&lt;/p&gt;
&lt;/div&gt;&lt;/div&gt;&lt;/div&gt;</description>
	<pubDate>Mon, 06 Jun 2022 18:53:52 +0000</pubDate>
</item>
<item>
	<title>John Kellerman: Eclipse Cloud DevTools Working Group Welcomes Obeo as a Strategic Member</title>
	<guid isPermaLink="false">7172 at https://blogs.eclipse.org</guid>
	<link>https://blogs.eclipse.org/post/john-kellerman/eclipse-cloud-devtools-working-group-welcomes-obeo-strategic-member</link>
	<description>&lt;div class=&quot;field field-name-body field-type-text-with-summary field-label-hidden&quot;&gt;&lt;div class=&quot;field-items&quot;&gt;&lt;div class=&quot;field-item even&quot;&gt;&lt;p&gt;The &lt;a href=&quot;https://ecdtools.eclipse.org/&quot;&gt;Eclipse Cloud DevTools Working Group&lt;/a&gt; is excited to announce its newest strategic member, &lt;a href=&quot;https://www.obeosoft.com/&quot;&gt;Obeo&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;&lt;img alt=&quot;&quot; height=&quot;47&quot; src=&quot;https://blogs.eclipse.org/sites/default/files/users/user750/obeo.png&quot; width=&quot;188&quot; /&gt;&lt;/p&gt;

&lt;p&gt;Obeo has been a strategic member of the Eclipse Foundation since 2009, where they lead several projects such as &lt;a href=&quot;https://www.eclipse.org/acceleo/&quot;&gt;Acceleo&lt;/a&gt; and &lt;a href=&quot;https://www.eclipse.org/sirius/&quot;&gt;Sirius&lt;/a&gt; and participate in many other projects in order to enable efficient and seamless domain specific graphical modeling tools. In addition to their technical commitment, they also contribute to the development of the Eclipse ecosystem by participating in several committees, such as the Eclipse Board of Directors, EclipseCon Program Committee, and Architecture and Planning Council, and by organizing international events such as Capella Days and &lt;a href=&quot;https://www.siriuscon.org/&quot;&gt;SiriusCon&lt;/a&gt;, whose 5th edition will be held online the 14th and 15th of June.&lt;/p&gt;

&lt;p&gt;In the last 13 years, the efforts of the Eclipse Modeling community has enabled the emergence of hundreds of desktop modeling tools, both commercial and open source. Some of them, like &lt;a href=&quot;https://www.eclipse.org/capella/&quot;&gt;Eclipse Capella&lt;/a&gt;, are being adopted worldwide.  As we are shift from desktop-based tools to web-based tools, major barriers to adoption are lowered. This presents the need for a new generation of modeling technologies. Obeo sees, through their work on Sirius Web, both how much of a potential there is in such web-based tools, and how much effort still remains before reaching the wide range of features a desktop-based tool currently has.&lt;/p&gt;

&lt;p&gt;Obeo considers building and sharing open source software as the most efficient way to build persistent and high quality technologies lasting several decades. Pursuant, Obeo believes a Modeling Special Interest Group within the Eclipse Cloud Development Working Group is the right vessel to collaborate with partners sharing this goal. Stay tuned for this!&lt;/p&gt;

&lt;p&gt; &lt;/p&gt;
&lt;/div&gt;&lt;/div&gt;&lt;/div&gt;</description>
	<pubDate>Mon, 06 Jun 2022 17:04:30 +0000</pubDate>
</item>
<item>
	<title>Donald Raab: Should You Use ForEach or InjectInto in Eclipse Collections?</title>
	<guid isPermaLink="false">https://medium.com/p/5f7f791022e2</guid>
	<link>https://betterprogramming.pub/should-you-use-foreach-or-injectinto-in-eclipse-collections-5f7f791022e2?source=rss-df39b86e9f04------2</link>
	<description>&lt;h4&gt;Learn the forEach and injectInto patterns in &lt;a href=&quot;https://github.com/eclipse/eclipse-collections&quot;&gt;Eclipse Collections&lt;/a&gt;.&lt;/h4&gt;&lt;figure&gt;&lt;img alt=&quot;&quot; src=&quot;https://cdn-images-1.medium.com/max/1024/1*UUH6ML6i-ArCODyDbXOh4A.png&quot; /&gt;&lt;figcaption&gt;Many of the forEach / injectInto patterns in Eclipse Collections&lt;/figcaption&gt;&lt;/figure&gt;&lt;h3&gt;To forEach or to injectInto?&lt;/h3&gt;&lt;p&gt;In &lt;a href=&quot;https://github.com/eclipse/eclipse-collections&quot;&gt;Eclipse Collections&lt;/a&gt;, forEach and injectInto are both internal iterators that provide the most basic of the iteration patterns. A developer can use both of these patterns to accomplish a large number of iteration tasks. As internal iterators, these methods encapsulate the implementation details of “how to” iterate over the elements of the collection, and leave it to the developer to use a lambda to specify the behavior that should be applied to each element of a collection.&lt;/p&gt;&lt;p&gt;The forEach and injectInto patterns can be used as the building blocks for many of the other iteration patterns (e.g. select, reject, collect, etc.). Both patterns iterate over a collection from the beginning of the collection to the end and perform some operation that receives each element of the collection as a parameter. Neither the forEach nor the injectInto pattern can be used effectively to implement any of the short-circuiting patterns (e.g. detect, anySatisfy, allSatisfy, noneSatisfy).&lt;/p&gt;&lt;p&gt;The functionality of forEach and injectInto can be summarized as follows.&lt;/p&gt;&lt;ul&gt;&lt;li&gt;forEach takes a single argument Procedure and returns void. Each elements of the collection is passed to the Procedure.&lt;/li&gt;&lt;li&gt;injectInto takes a two argument Function2. A value is injected in as the first parameter of the Function2 along with each element of the collection. The method returns the final result that the Function2 returns after the last element is processed.&lt;/li&gt;&lt;/ul&gt;&lt;p&gt;There are specializations of both patterns. The injectInto pattern has more primitive specializations than forEach because injectInto returns some type and it may return one of the eight primitive types, or Object. The forEach patterns always return void.&lt;/p&gt;&lt;p&gt;One of the things that injectInto can do, that forEach cannot, is perform a &lt;a href=&quot;https://en.wikipedia.org/wiki/Side_effect_(computer_science)&quot;&gt;side effect&lt;/a&gt; free operation. With forEach, a side effect always happens somewhere. That is its purpose — to make side effects happen with elements of the collection. There may be a mutation applied to an element of the collection, or a mutation to a variable in the scope of a lambda, or the element is printed to System.out, etc.&lt;/p&gt;&lt;p&gt;With injectInto, it is possible to perform a side effect free operation because it injects, returns, and re-injects some result from the two-argument Function. The value that is injected and returned may be immutable, like a String or Integer or a primitive value.&lt;/p&gt;&lt;p&gt;I’m going to show some examples of using forEach and injectInto to solve similar problems. This should begin to make it clear when one of the patterns is more suitable or desirable than the other. The answer of whether one is more desirable than another will be an exercise left up to you, the reader. In some cases, forEach will be more readable. In many cases, injectInto will be more flexible, safe and/or performant.&lt;/p&gt;&lt;p&gt;The following are the examples I will show:&lt;/p&gt;&lt;ul&gt;&lt;li&gt;Count&lt;/li&gt;&lt;li&gt;Sum&lt;/li&gt;&lt;li&gt;Convert to Set&lt;/li&gt;&lt;/ul&gt;&lt;h3&gt;Example: Count&lt;/h3&gt;&lt;p&gt;In the following examples, I will count the even integers contained in a MutableList&amp;lt;Integer&amp;gt; and MutableIntList. There is a method named count defined on both Object and Primitive collections in Eclipse Collections that takes a Predicate as a parameter. The intent of these examples is to show some options for implementing count using forEach or injectInto patterns.&lt;/p&gt;&lt;h4&gt;1. Count: forEach (Object List)&lt;/h4&gt;&lt;figure&gt;&lt;img alt=&quot;&quot; src=&quot;https://cdn-images-1.medium.com/max/817/1*s9ANuasC8B28jn30ngHMKQ.png&quot; /&gt;&lt;figcaption&gt;Using forEach to count even numbers in an Object List&lt;/figcaption&gt;&lt;/figure&gt;&lt;p&gt;I had to create a mutable Counter in order to record the total count of even values. I used the ternary operator to write a simplified if expression to determine whether to add a value of 1 or 0 to the Counter.&lt;/p&gt;&lt;h4&gt;2. Count: forEach (Primitive List)&lt;/h4&gt;&lt;figure&gt;&lt;img alt=&quot;&quot; src=&quot;https://cdn-images-1.medium.com/max/778/1*PnuKkSFSocNVgbyjmuN70Q.png&quot; /&gt;&lt;figcaption&gt;Using forEach to count even numbers in a Primitive List&lt;/figcaption&gt;&lt;/figure&gt;&lt;p&gt;The only difference between the forEach on the object and primitive lists is that the int values in the primitive List don’t require unboxing as the Integer values do in the object List. This approach still requires having an effectively final mutable Counter object to increment in the lambda.&lt;/p&gt;&lt;h4&gt;3. Count: injectInto (Object List)&lt;/h4&gt;&lt;figure&gt;&lt;img alt=&quot;&quot; src=&quot;https://cdn-images-1.medium.com/max/1024/1*h8m9DAoQdHuwmXyVx6r2IA.png&quot; /&gt;&lt;figcaption&gt;Using injectInto to count even numbers in an Object List&lt;/figcaption&gt;&lt;/figure&gt;&lt;p&gt;This implementation is side-effect free. We start with an initial Integer value of 0, and add a 1 or 0 to that result for each element if it is even. There is a lot of unboxing and auto-boxing here as the result of each function will unbox values and then auto-box the result.&lt;/p&gt;&lt;h4&gt;4. Count: injectInto (Primitive List)&lt;/h4&gt;&lt;figure&gt;&lt;img alt=&quot;&quot; src=&quot;https://cdn-images-1.medium.com/max/1024/1*ISt861r1w0eBa5FM4d0FOQ.png&quot; /&gt;&lt;figcaption&gt;Using injectInto to count even numbers in a Primitive List&lt;/figcaption&gt;&lt;/figure&gt;&lt;p&gt;This example uses a MutableIntList which does not box the int values in the List. The result of injectInto is still an object, so the results are auto-boxed for each element.&lt;/p&gt;&lt;h4&gt;5. Count: injectIntoInt (Object List)&lt;/h4&gt;&lt;figure&gt;&lt;img alt=&quot;&quot; src=&quot;https://cdn-images-1.medium.com/max/1024/1*8BRkuqLH09SJVpVr4YQuhg.png&quot; /&gt;&lt;figcaption&gt;Using injectIntoInt to count even numbers in an Object List&lt;/figcaption&gt;&lt;/figure&gt;&lt;p&gt;The specialization injectIntoInt allows an int value of 0 to be injected into the iteration and returned as the result. There will be no auto-boxing of the results here, but the values are unboxed in order to test if they are even. This solution is both side-effect free and results in zero auto-boxing. The values in the integers List however are still boxed as it is a MutableList&amp;lt;Integer&amp;gt;.&lt;/p&gt;&lt;h4&gt;6. Count: injectIntoInt (Primitive List)&lt;/h4&gt;&lt;figure&gt;&lt;img alt=&quot;&quot; src=&quot;https://cdn-images-1.medium.com/max/1024/1*S7MV8PLO4zRwh-Ggl5mGmg.png&quot; /&gt;&lt;figcaption&gt;Using injectIntoInt to count evens in a Primitive List&lt;/figcaption&gt;&lt;/figure&gt;&lt;p&gt;The specialization injectIntoInt on a MutableIntList allows for the implementation of side-effect free counting with no boxing of int values to Integer objects in either the list or the calculations.&lt;/p&gt;&lt;h3&gt;Example: Sum&lt;/h3&gt;&lt;p&gt;In the following examples, I will sum the integers contained in a MutableList&amp;lt;Integer&amp;gt; and MutableIntList. There is a method named sumOfInt defined on Object collections and simply sum on Primitive collections in Eclipse Collections. The intent of these examples is to show some options for implementing sum using forEach or injectInto patterns.&lt;/p&gt;&lt;h4&gt;1. Sum: forEach (Object List)&lt;/h4&gt;&lt;figure&gt;&lt;img alt=&quot;&quot; src=&quot;https://cdn-images-1.medium.com/max/781/1*vZCQpkeIG8-KHfSG-FzreQ.png&quot; /&gt;&lt;figcaption&gt;Using forEach to sum the numbers in an Object List&lt;/figcaption&gt;&lt;/figure&gt;&lt;p&gt;I used LongAdder from the JDK to accumulate the sum. There is an add method on LongAdder that takes a long. Each Integer object in the integers List is unboxed and cast to a long.&lt;/p&gt;&lt;h4&gt;2. Sum: forEach (PrimitiveList)&lt;/h4&gt;&lt;figure&gt;&lt;img alt=&quot;&quot; src=&quot;https://cdn-images-1.medium.com/max/693/1*33xj6U4RHrX_QvpxJuUFRA.png&quot; /&gt;&lt;figcaption&gt;Using forEach to sum the numbers in a Primitive List&lt;/figcaption&gt;&lt;/figure&gt;&lt;p&gt;The primitive version of sum with forEach is essentially the same as the object version, just without requiring the unboxing of Integer objects in the call to add on LongAdder.&lt;/p&gt;&lt;h4&gt;3. Sum: injectInto (Object List)&lt;/h4&gt;&lt;figure&gt;&lt;img alt=&quot;&quot; src=&quot;https://cdn-images-1.medium.com/max/795/1*aqVtPVdkDrhg5NKL8d28CQ.png&quot; /&gt;&lt;figcaption&gt;Using injectInto to sum the numbers in an Object List&lt;/figcaption&gt;&lt;/figure&gt;&lt;p&gt;By injecting an initial value of Long.valueOf(0), the return type of injectInto will be a Long. I used the Long::sum method reference which takes two long values as parameters. The result is unboxed from Long to long and the Integer values in the List are unboxed and cast to long.&lt;/p&gt;&lt;h4&gt;4. Sum: injectInto (Primitive List)&lt;/h4&gt;&lt;figure&gt;&lt;img alt=&quot;&quot; src=&quot;https://cdn-images-1.medium.com/max/797/1*-4m8nS2T4aSjX2EeGOjnTg.png&quot; /&gt;&lt;figcaption&gt;Using injectInto to sum the numbers in a Primitive List&lt;/figcaption&gt;&lt;/figure&gt;&lt;p&gt;The primitive version of sum using injectInto using Long as an injected value is essentially the same as the object version. The one difference is there is no unboxing of Integer objects required.&lt;/p&gt;&lt;h4&gt;5. Sum: injectIntoLong (Object List)&lt;/h4&gt;&lt;figure&gt;&lt;img alt=&quot;&quot; src=&quot;https://cdn-images-1.medium.com/max/797/1*gPdzY6TNP515FxS9h199Hg.png&quot; /&gt;&lt;figcaption&gt;Using injectIntoLong to sum the numbers in an Object List&lt;/figcaption&gt;&lt;/figure&gt;&lt;p&gt;Using injectIntoLong on an object List and injecting an initial long value of 0L, the return type of injectIntoLong is a primitive long. I used the Long::sum method reference which takes two long values as parameters. The result is passed in as a long and the Integer values in the List are unboxed and cast to long.&lt;/p&gt;&lt;h4&gt;6. Sum: injectIntoLong (Primitive List)&lt;/h4&gt;&lt;figure&gt;&lt;img alt=&quot;&quot; src=&quot;https://cdn-images-1.medium.com/max/704/1*KSq4FoVabKgNowCRLJO8aQ.png&quot; /&gt;&lt;figcaption&gt;Using injectIntoLong to sum the numbers in a Primitive List&lt;/figcaption&gt;&lt;/figure&gt;&lt;p&gt;Using injectIntoLong on a primitive List and injecting an initial long value of 0L, the return type of injectIntoLong is a primitive long. I used the Long::sum method reference which takes two long values as parameters. The result is passed in as a long and the int values in the primitive List are cast to long.&lt;/p&gt;&lt;h3&gt;Example: Convert to Set&lt;/h3&gt;&lt;p&gt;In the following examples, I will add the integers contained in a MutableList&amp;lt;Integer&amp;gt; or MutableIntList into a MutableSet&amp;lt;Integer&amp;gt; or MutableIntSet. I will also show how injectInto can be used to add to an ImmutableSet&amp;lt;Integer&amp;gt; or ImmutableIntSet.&lt;/p&gt;&lt;p&gt;There are converter methods on Object and Primitive collections for converting from one type of container to another (e.g. toSet, toImmutableSet). The intent of these examples is to show some options for implementing toSet and toImmutableSet using the forEach or injectInto patterns.&lt;/p&gt;&lt;h4&gt;1. To Mutable Set: forEach (Object List)&lt;/h4&gt;&lt;figure&gt;&lt;img alt=&quot;&quot; src=&quot;https://cdn-images-1.medium.com/max/843/1*qajLt4SQKDWExixSlOcczQ.png&quot; /&gt;&lt;figcaption&gt;Using forEach to add elements of a List to a MutableSet&lt;/figcaption&gt;&lt;/figure&gt;&lt;p&gt;I create a MutableSet&amp;lt;Integer&amp;gt; named set to hold the elements I want to transfer from integers. Then using forEach, I pass the method reference set::add. This code is really simple and straightforward.&lt;/p&gt;&lt;h4&gt;2. To Mutable Int Set: forEach (Primitive List)&lt;/h4&gt;&lt;figure&gt;&lt;img alt=&quot;&quot; src=&quot;https://cdn-images-1.medium.com/max/815/1*iR4tylsB2uqNLCebHtRiQw.png&quot; /&gt;&lt;figcaption&gt;Using forEach to add elements of a MutableIntList to a MutableIntSet&lt;/figcaption&gt;&lt;/figure&gt;&lt;p&gt;The primitive version is essentially same as the object version, with the target set being MutableIntSet.&lt;/p&gt;&lt;h4&gt;3. To MutableSet: injectInto (Object List)&lt;/h4&gt;&lt;figure&gt;&lt;img alt=&quot;&quot; src=&quot;https://cdn-images-1.medium.com/max/1024/1*xvxqy0wLD6R_xN_QO1xtEw.png&quot; /&gt;&lt;figcaption&gt;Using injectInto to add elements of a MutableList to a MutableSet&lt;/figcaption&gt;&lt;/figure&gt;&lt;p&gt;Using injectInto, I inject the MutableSet&amp;lt;Integer&amp;gt; as the first parameter of the Function2. I use the MutableSet::with method reference which matches the two-parameter types required by the Function2.&lt;/p&gt;&lt;p&gt;The first parameter type isMutableSet&amp;lt;Integer&amp;gt; and the second parameter type is the type of each element of the collection (Integer).&lt;/p&gt;&lt;p&gt;The return type of with on any MutableCollection in Eclipse Collections is the collection type itself, since with calls add and then returns this.&lt;/p&gt;&lt;h4&gt;4. To MutableIntSet: injectInto (Primitive List)&lt;/h4&gt;&lt;figure&gt;&lt;img alt=&quot;&quot; src=&quot;https://cdn-images-1.medium.com/max/1024/1*QiRgb2PVbfruhRSJP3NMxA.png&quot; /&gt;&lt;figcaption&gt;Using injectInto to add elements of a MutableIntList to a MutableIntSet&lt;/figcaption&gt;&lt;/figure&gt;&lt;p&gt;The primitive version is essentially same as the object version, with the target set being MutableIntSet.&lt;/p&gt;&lt;h4&gt;5. To ImmutableSet: injectInto (Object List)&lt;/h4&gt;&lt;figure&gt;&lt;img alt=&quot;&quot; src=&quot;https://cdn-images-1.medium.com/max/1024/1*R2Tm8HBpU8mXXXBqa3fWUg.png&quot; /&gt;&lt;figcaption&gt;Using injectInto to add elements of a MutableList to an ImmutableSet&lt;/figcaption&gt;&lt;/figure&gt;&lt;p&gt;Converting a MutableList to an ImmutableSet id another example that demonstrates the flexibility of injectInto over forEach. An ImmutableSet has no mutating methods. There is no add method like a MutableSet. There is a newWith method which creates a new ImmutableSet by copying the original set and adding an element to create a new ImmutableSet. I pass an empty ImmutableSet into injectInto along with a method reference to ImmutableSet::newWith.&lt;/p&gt;&lt;h4&gt;6. To Immutable Int Set: injectInto (Primitive List)&lt;/h4&gt;&lt;figure&gt;&lt;img alt=&quot;&quot; src=&quot;https://cdn-images-1.medium.com/max/1024/1*F-4BSIFvflmSK6lViUa0bA.png&quot; /&gt;&lt;figcaption&gt;Using injectInto to add elements of a MutableIntList to an ImmutableIntSet&lt;/figcaption&gt;&lt;/figure&gt;&lt;p&gt;The primitive version is essentially same as the object version, with the target set being MutableIntSet.&lt;/p&gt;&lt;h3&gt;Additional examples of forEach&lt;/h3&gt;&lt;p&gt;Sometimes you might need an index with your forEach. Thankfully, in Eclipse Collections, there is forEachWithIndex for this purpose. Here’s a blog that describes methods that provide indexes including forEachWithIndex.&lt;/p&gt;&lt;p&gt;&lt;a href=&quot;https://medium.com/javarevisited/i-need-an-index-with-this-list-iteration-method-1e339fd55ed7&quot;&gt;I need an index with this List iteration method&lt;/a&gt;&lt;/p&gt;&lt;p&gt;There is also a blog that describes a specialized form of forEach named forEachInBoth. Since this blog was originally written, I have added forEachInBoth directly to Object and primitive List containers in Eclipse Collections.&lt;/p&gt;&lt;p&gt;&lt;a href=&quot;https://donraab.medium.com/mysterious-eclipse-collections-apis-foreachinboth-2102912f1eee&quot;&gt;Mysterious Eclipse Collections APIs: forEachInBoth&lt;/a&gt;&lt;/p&gt;&lt;h3&gt;Additional examples of injectInto&lt;/h3&gt;&lt;p&gt;There are a couple of blogs that cover more examples of injectInto as well as specialized forms of injectInto like injectIntoKeyValue. The following blog covers some general examples of injectInto.&lt;/p&gt;&lt;p&gt;&lt;a href=&quot;https://donraab.medium.com/ec-by-example-injectinto-923a35c3b0cd&quot;&gt;EC by Example: InjectInto&lt;/a&gt;&lt;/p&gt;&lt;p&gt;The following blog describes and shows examples of injectIntoKeyValue which works with Maps and primitive Maps in Eclipse Collections. The blog was written by &lt;a href=&quot;https://medium.com/u/b220de0951d0&quot;&gt;Emilie Robichaud&lt;/a&gt;.&lt;/p&gt;&lt;p&gt;&lt;a href=&quot;https://emilie-robichaud.medium.com/injectintokeyvalue-in-eclipse-collections-8b29c9a4830d&quot;&gt;InjectIntoKeyValue in Eclipse Collections&lt;/a&gt;&lt;/p&gt;&lt;h3&gt;Some final thoughts on forEach and injectInto&lt;/h3&gt;&lt;p&gt;I find it is very easy to start thinking about a problem using forEach. If you need to cause some basic side effect, forEach is a very simple go to method.&lt;/p&gt;&lt;p&gt;Sometimes after I have written something using forEach, I wonder what the same code would look like if I used injectInto. I will use injectInto if I want to have a side effect free operation, or to control any side effects fully within the context of the Function2 that I pass to injectInto.&lt;/p&gt;&lt;p&gt;So should you use forEach or injectInto in Eclipse Collections? As with many things, the best solution may be subjective, and I would recommend going with the code that you find the easiest to read and understand.&lt;/p&gt;&lt;p&gt;If you do learn how to add injectInto to your bag of tricks, you may start to be amazed at its power and flexibility, even if its mystery never quite goes away.&lt;/p&gt;&lt;h3&gt;Source for Examples&lt;/h3&gt;&lt;a href=&quot;https://medium.com/media/1c50930f144afcef530c133afe7341a3/href&quot;&gt;https://medium.com/media/1c50930f144afcef530c133afe7341a3/href&lt;/a&gt;&lt;pre&gt;&lt;strong&gt;Want to Connect?&lt;/strong&gt;&lt;/pre&gt;&lt;pre&gt;I am a Project Lead and Committer for the &lt;a href=&quot;https://github.com/eclipse/eclipse-collections&quot;&gt;Eclipse Collections&lt;/a&gt; OSS project at the &lt;a href=&quot;https://projects.eclipse.org/projects/technology.collections&quot;&gt;Eclipse Foundation&lt;/a&gt;. &lt;a href=&quot;https://github.com/eclipse/eclipse-collections&quot;&gt;Eclipse Collections&lt;/a&gt; is open for &lt;a href=&quot;https://github.com/eclipse/eclipse-collections/blob/master/CONTRIBUTING.md&quot;&gt;contributions&lt;/a&gt;. If you like the library, you can let us know by starring it on GitHub.&lt;/pre&gt;&lt;img alt=&quot;&quot; height=&quot;1&quot; src=&quot;https://medium.com/_/stat?event=post.clientViewed&amp;amp;referrerSource=full_rss&amp;amp;postId=5f7f791022e2&quot; width=&quot;1&quot; /&gt;&lt;hr /&gt;&lt;p&gt;&lt;a href=&quot;https://betterprogramming.pub/should-you-use-foreach-or-injectinto-in-eclipse-collections-5f7f791022e2&quot;&gt;Should You Use ForEach or InjectInto in Eclipse Collections?&lt;/a&gt; was originally published in &lt;a href=&quot;https://betterprogramming.pub&quot;&gt;Better Programming&lt;/a&gt; on Medium, where people are continuing the conversation by highlighting and responding to this story.&lt;/p&gt;</description>
	<pubDate>Fri, 03 Jun 2022 05:26:26 +0000</pubDate>
</item>
<item>
	<title>Wayne Beaton: Eclipse Foundation Development Process Votes</title>
	<guid isPermaLink="true">http://blog.waynebeaton.ca/posts/edp/votes/</guid>
	<link>http://blog.waynebeaton.ca/posts/edp/votes/</link>
	<description>If an Eclipse open source project team wants to include the community in a vote to, say, decide what functionality to include in the code base or decide whether or not they’re ready to do a release, that’s entirely up to the project team. If a project team wants to include the community in decisions (e.g., “do we implement X or Y?”), they’re free to do so. Personally, I think that it’s foolish to make community votes in such matters binding, but if that’s what a project team wants to do, they can have at it.</description>
	<pubDate>Thu, 02 Jun 2022 00:00:00 +0000</pubDate>
</item>
<item>
	<title>Eclipse Announcements: AQAvit Brings Quality Assurance to Adoptium Marketplace and Java Ecosystem</title>
	<guid isPermaLink="true">https://newsroom.eclipse.org/news/announcements/aqavit-brings-quality-assurance-adoptium-marketplace-and-java-ecosystem</guid>
	<link>https://newsroom.eclipse.org/news/announcements/aqavit-brings-quality-assurance-adoptium-marketplace-and-java-ecosystem</link>
	<description>The launch of the Adoptium Marketplace on May 26 is exciting news for the millions of developers, researchers, and organizations who rely on TCK-tested compatible Java runtimes. Get the full story from Executive Director Mike Milinkovich's new blog.</description>
	<pubDate>Tue, 31 May 2022 12:36:51 +0000</pubDate>
</item>
<item>
	<title>Mike Milinkovich: AQAvit Brings Quality Assurance to Adoptium Marketplace and Java Ecosystem</title>
	<guid isPermaLink="false">http://eclipse-foundation.blog/?p=1683</guid>
	<link>https://eclipse-foundation.blog/2022/05/31/aqavit-brings-quality-assurance-to-adoptium-marketplace-and-java-ecosystem/</link>
	<description>&lt;p&gt;The launch of the &lt;a href=&quot;https://adoptium.net/marketplace&quot;&gt;Adoptium Marketplace&lt;/a&gt; on May 26 is exciting news for the millions of developers, researchers, and organizations who rely on TCK-tested compatible Java runtimes. As noted in the &lt;a href=&quot;https://newsroom.eclipse.org/news/announcements/oss-leader-eclipse-foundation-and-adoptium-working-group-launch-adoptium&quot;&gt;announcement&lt;/a&gt;, by providing a vendor neutral home for the OpenJDK ecosystem, the marketplace makes it easier than ever to access Java SE-conformant binaries necessary for cloud native and enterprise deployments.&lt;/p&gt;



&lt;p&gt;But there’s more to the story. For a long time, compatibility has been the name of the game when it came to Java implementations. The Adoptium Marketplace has been set up to take the Java ecosystem to the next stage of its development. &lt;/p&gt;



&lt;p&gt;That’s where &lt;a href=&quot;https://projects.eclipse.org/projects/adoptium.aqavit&quot;&gt;Eclipse AQAvit&lt;/a&gt; comes in. It brings quality assurance metrics into the marketplace, so that the Java community can begin to select binaries not just based on compatibility but on quality. &lt;/p&gt;



&lt;p&gt;&lt;strong&gt;Eclipse AQAvit Brings Quality Assurance to Java&lt;/strong&gt;&lt;/p&gt;



&lt;p&gt;Everything in the marketplace will be compatible with the relevant version of the Java SE Technology Compatibility Kit (TCK). &lt;/p&gt;



&lt;p&gt;But TCK compatibility doesn’t tell you anything about the quality of the implementation. In recent years, the number of OpenJDK-based runtime distributions has absolutely exploded. And although many vendors maintain their own release quality tests, OpenJDK distros have historically not been built to any consistent quality standard. It has become increasingly clear that the Java ecosystem needs a consistent, multi-vendor definition of quality.&lt;/p&gt;



&lt;p&gt;Ensuring high-quality binaries are ready for production deployment is crucial for the Adoptium Marketplace. The AQAvit project team compiled tens of thousands of tests and built a few of their own to produce a comprehensive, systematic way of ensuring the quality of runtimes available. The AQAvit Quality Verification Suite covers a broad set of requirements, ensuring binaries provide superior: &lt;/p&gt;



&lt;ul&gt;&lt;li&gt;Performance&lt;/li&gt;&lt;li&gt;Security&lt;/li&gt;&lt;li&gt;Resilience&lt;/li&gt;&lt;li&gt;Endurance&lt;/li&gt;&lt;/ul&gt;



&lt;p&gt;They also ensure that the binaries can pass a wide variety of application test suites and can verify new functionality during runtime development. That’s what’s unique about the Adoptium Marketplace: it provides peace of mind knowing that the binaries are not only compatible but will actually meet the demanding requirements of your enterprise applications.&lt;/p&gt;



&lt;p&gt;&lt;strong&gt;Contributing Helps Ensure AQAvit Meets Your Needs&lt;/strong&gt;&lt;/p&gt;



&lt;p&gt;And in the spirit of open source, you give a little to get a lot.&lt;/p&gt;



&lt;p&gt;Many of the founding members of the Adoptium Working Group are Java developers and vendors, including Alibaba Cloud, Azul, Huawei, IBM, iJUG, Karakun AG, Microsoft, New Relic, and Red Hat. The marketplace enables working group members to promote their Java SE compatible releases verified to  Eclipse AQAvit’s quality criteria. Their membership helps support the cloud-based infrastructure that drives Adoptium’s efficiency as a shared community project. In other words, the working group collaborates to create and provide access to high-performance, enterprise-caliber, cross-platform, open source-licensed, and Java-compatible binaries of OpenJDK builds, through the marketplace. &lt;/p&gt;



&lt;p&gt;Contributing to the AQAvit project is one of the best ways to ensure access to runtimes that meet specific needs. We encourage Java community members to get involved and contribute additional tests to cover the use cases their applications require. They’ll be incorporated in the AQAvit test suite, so every binary going forward will have to meet that standard. This way enterprises and developers can be confident any AQAvit-verified binaries they use will function as needed. &lt;/p&gt;



&lt;p&gt;&lt;strong&gt;Security Updates for Java&lt;/strong&gt;&lt;/p&gt;



&lt;p&gt;Quality assurance is a big part of what makes the Adoptium Marketplace unique, but it’s not the whole picture. Security fixes are also an important focus.&lt;/p&gt;



&lt;p&gt;Once upon a time, you could count on getting security fixes for old versions of Java for a long time. After all, if you’ve deployed a set of applications on a version, you’re probably going to want to use it for a long time. &lt;/p&gt;



&lt;p&gt;That’s no longer the case elsewhere. But all the distributions in the Adoptium Marketplace will be kept up to date with the latest security patches or those patches will be backported to older LTS versions. This way you can be sure that your applications are secure, no matter which version of Java you’re running them on. Of course, this goes for new versions of Java too.&lt;/p&gt;



&lt;p&gt;&lt;strong&gt;Everything Users Need in One Place&lt;/strong&gt;&lt;/p&gt;



&lt;p&gt;The &lt;a href=&quot;https://adoptium.net/marketplace&quot;&gt;Adoptium Marketplace&lt;/a&gt; brings together all these elements — quality assurance, adaptability to community needs, security updates for every version, sustainability — into a one-stop shop for binaries. Ultimately, this delivers five key assurances to end users:&lt;/p&gt;



&lt;ul&gt;&lt;li&gt;The binary has been tested and is compatible with the relevant version of the Java SE TCK&lt;/li&gt;&lt;li&gt;The binary was built in accordance with open source principles&lt;/li&gt;&lt;li&gt;The binary has been fully verified using the AQAvit quality verification criteria, having passed through multiple tests to ensure it meets industry quality standards&lt;/li&gt;&lt;li&gt;The binary is as secure as possible, with the latest security updates included&lt;/li&gt;&lt;li&gt;The binary is brought to you by a vendor committed to supporting and participating in a multi-vendor, vendor-neutral collaboration&lt;/li&gt;&lt;/ul&gt;



&lt;p&gt;If your organization is considering participating in the Adoptium Working Group, have a look at the &lt;a href=&quot;https://www.eclipse.org/org/workinggroups/adoptium-charter.php&quot;&gt;Charter&lt;/a&gt; and &lt;a href=&quot;https://www.eclipse.org/org/workinggroups/wpga/adoptium-working-group-participation-agreement.pdf&quot;&gt;Participation Agreement&lt;/a&gt;. Or if you have questions, email us at &lt;a href=&quot;mailto:membership@eclipse.org&quot;&gt;membership@eclipse.org&lt;/a&gt;. &lt;/p&gt;</description>
	<pubDate>Tue, 31 May 2022 11:33:00 +0000</pubDate>
</item>
<item>
	<title>Jonas, Maximilian and Philip: Getting started with Eclipse Theia</title>
	<guid isPermaLink="false">https://eclipsesource.com/?p=46047</guid>
	<link>https://eclipsesource.com/blogs/2022/05/31/getting-started-with-eclipse-theia/</link>
	<description>&lt;p&gt;Are you interested in building a custom IDE or tool for your domain that runs in the cloud but also as...&lt;/p&gt;
&lt;p&gt;The post &lt;a href=&quot;https://eclipsesource.com/blogs/2022/05/31/getting-started-with-eclipse-theia/&quot; rel=&quot;nofollow&quot;&gt;Getting started with Eclipse Theia&lt;/a&gt; appeared first on &lt;a href=&quot;https://eclipsesource.com&quot; rel=&quot;nofollow&quot;&gt;EclipseSource&lt;/a&gt;.&lt;/p&gt;</description>
	<pubDate>Tue, 31 May 2022 07:11:29 +0000</pubDate>
</item>
<item>
	<title>Donald Raab: The elusive and beautiful Java Method Reference</title>
	<guid isPermaLink="false">https://medium.com/p/97e566d2088b</guid>
	<link>https://medium.com/javarevisited/the-elusive-and-beautiful-java-method-reference-97e566d2088b?source=rss-df39b86e9f04------2</link>
	<description>&lt;p&gt;I love lambdas in Java 8, but method references are elusive and amazing&lt;/p&gt;&lt;figure&gt;&lt;img alt=&quot;&quot; src=&quot;https://cdn-images-1.medium.com/max/1024/0*L8WtwhRjg4BuTCGR&quot; /&gt;&lt;figcaption&gt;Photo by &lt;a href=&quot;https://unsplash.com/@r3dmax?utm_source=medium&amp;amp;utm_medium=referral&quot;&gt;Jonatan Pie&lt;/a&gt; on &lt;a href=&quot;https://unsplash.com?utm_source=medium&amp;amp;utm_medium=referral&quot;&gt;Unsplash&lt;/a&gt;&lt;/figcaption&gt;&lt;/figure&gt;&lt;h3&gt;Lambdas are flexible anonymous bits of code&lt;/h3&gt;&lt;p&gt;We can solve a lot of interesting problems in Java using lambdas. We can use expression lambdas for simple things, and statement lambdas for more complex things. Lambdas can call out to other methods on the current object (this) or objects that are in scope, like the current element of an iteration, or a final local variable outside of the lambda. We can always simplify a lambda by putting code in another method.&lt;/p&gt;&lt;p&gt;Writing good lambdas requires discipline. For instance, it is important to use intention revealing names for parameters. Here’s a simple example of a using a lambda to filter a List of Strings.&lt;/p&gt;&lt;pre&gt;@Test&lt;br /&gt;public void filterStringsLambda()&lt;br /&gt;{&lt;br /&gt;    var list = Lists.&lt;strong&gt;&lt;em&gt;mutable&lt;/em&gt;&lt;/strong&gt;.with(&lt;strong&gt;&quot;Atlanta&quot;&lt;/strong&gt;, &lt;strong&gt;&quot;Atlantic City&quot;&lt;/strong&gt;, &lt;strong&gt;&quot;Boston&quot;&lt;/strong&gt;, &lt;strong&gt;&quot;Boca Raton&quot;&lt;/strong&gt;);&lt;/pre&gt;&lt;pre&gt;    var actual = list.stream()&lt;br /&gt;            .filter(string -&amp;gt; string.startsWith(&lt;strong&gt;&quot;At&quot;&lt;/strong&gt;))&lt;br /&gt;            .collect(Collectors.&lt;em&gt;toList&lt;/em&gt;());&lt;/pre&gt;&lt;pre&gt;    var expected = List.&lt;em&gt;of&lt;/em&gt;(&lt;strong&gt;&quot;Atlanta&quot;&lt;/strong&gt;, &lt;strong&gt;&quot;Atlantic City&quot;&lt;/strong&gt;);&lt;br /&gt;    Assertions.&lt;em&gt;assertEquals&lt;/em&gt;(expected, actual);&lt;br /&gt;}&lt;/pre&gt;&lt;p&gt;In this code, the lambda is the parameter passed to the filter method in the form of a Predicate. In this example, the Predicate takes a parameter of type String which I give the name string. The expression after the separator (-&amp;gt;) will be evaluated for each element of the list and will only include those elements which evaluate to true.&lt;/p&gt;&lt;p&gt;There are several methods in the Stream API that will take a Predicate as a parameter. The methods include filter, anyMatch, allMatch, noneMatch.&lt;/p&gt;&lt;p&gt;There is no easy way for me to use a method reference here because I need to pass the parameter “At” to the method startsWith. Parameters are kryptonite for method reference usage. We can simulate a method reference here by using a lambda and extracting it into a separate method as follows.&lt;/p&gt;&lt;pre&gt;@Test&lt;br /&gt;public void filterStringsLambdaInMethod()&lt;br /&gt;{&lt;br /&gt;    var list = Lists.&lt;strong&gt;&lt;em&gt;mutable&lt;/em&gt;&lt;/strong&gt;.with(&lt;strong&gt;&quot;Atlanta&quot;&lt;/strong&gt;, &lt;strong&gt;&quot;Atlantic City&quot;&lt;/strong&gt;, &lt;strong&gt;&quot;Boston&quot;&lt;/strong&gt;, &lt;strong&gt;&quot;Boca Raton&quot;&lt;/strong&gt;);&lt;/pre&gt;&lt;pre&gt;    var actual = list.stream()&lt;br /&gt;            .filter(this.stringStartsWith(&lt;strong&gt;&quot;At&quot;&lt;/strong&gt;))&lt;br /&gt;            .collect(Collectors.&lt;em&gt;toList&lt;/em&gt;());&lt;/pre&gt;&lt;pre&gt;    var expected = List.&lt;em&gt;of&lt;/em&gt;(&lt;strong&gt;&quot;Atlanta&quot;&lt;/strong&gt;, &lt;strong&gt;&quot;Atlantic City&quot;&lt;/strong&gt;);&lt;br /&gt;    Assertions.&lt;em&gt;assertEquals&lt;/em&gt;(expected, actual);&lt;br /&gt;}&lt;br /&gt;&lt;br /&gt;private Predicate&amp;lt;String&amp;gt; stringStartsWith(String prefix)&lt;br /&gt;{&lt;br /&gt;    return string -&amp;gt; string.startsWith(&lt;em&gt;prefix&lt;/em&gt;);&lt;br /&gt;}&lt;/pre&gt;&lt;p&gt;Having to create a method on a class to generate lambdas that can leverage local variables in scope is less than ideal. I would love to be able to just use the startsWith method as a method reference.&lt;/p&gt;&lt;h3&gt;How to satisfy a Method Reference Preference?&lt;/h3&gt;&lt;p&gt;Use the With methods in &lt;a href=&quot;https://github.com/eclipse/eclipse-collections&quot;&gt;Eclipse Collections&lt;/a&gt;.&lt;/p&gt;&lt;blockquote&gt;This is the way&lt;/blockquote&gt;&lt;p&gt;For many of the methods available in the Eclipse Collections API, there is a corresponding method with the suffix of With. Each With method takes a different named functional interface that takes two parameters (e.g. Predicate2, Function2, etc.). The following mind map shows some of the basic methods in the Eclipse Collections API along with their corresponding With equivalents and functional interface types they take as parameters.&lt;/p&gt;&lt;figure&gt;&lt;img alt=&quot;&quot; src=&quot;https://cdn-images-1.medium.com/max/1024/1*6ThVSlLKYPlQGoH8T2VSAA.png&quot; /&gt;&lt;figcaption&gt;RichIterable basic and “With” Methods&lt;/figcaption&gt;&lt;/figure&gt;&lt;p&gt;How do these extra methods help you with using method references with parameters? Let’s walk through some examples.&lt;/p&gt;&lt;h4&gt;Basic Using Lambda&lt;/h4&gt;&lt;p&gt;Let’s see the example of filtering a List of Strings using one of the basic Eclipse Collections methods with a lambda.&lt;/p&gt;&lt;pre&gt;@Test&lt;br /&gt;public void selectStringsLambda()&lt;br /&gt;{&lt;br /&gt;    var list = Lists.&lt;strong&gt;&lt;em&gt;mutable&lt;/em&gt;&lt;/strong&gt;.with(&lt;strong&gt;&quot;Atlanta&quot;&lt;/strong&gt;, &lt;strong&gt;&quot;Atlantic City&quot;&lt;/strong&gt;, &lt;strong&gt;&quot;Boston&quot;&lt;/strong&gt;, &lt;strong&gt;&quot;Boca Raton&quot;&lt;/strong&gt;);&lt;br /&gt;&lt;br /&gt;    var actual = list.select(string -&amp;gt; string.startsWith(&lt;strong&gt;&quot;At&quot;&lt;/strong&gt;));&lt;br /&gt;&lt;br /&gt;    var expected = List.&lt;em&gt;of&lt;/em&gt;(&lt;strong&gt;&quot;Atlanta&quot;&lt;/strong&gt;, &lt;strong&gt;&quot;Atlantic City&quot;&lt;/strong&gt;);&lt;br /&gt;    Assertions.&lt;em&gt;assertEquals&lt;/em&gt;(expected, actual);&lt;br /&gt;}&lt;/pre&gt;&lt;h4&gt;With Method Reference&lt;/h4&gt;&lt;p&gt;Now let’s see how we can satisfy our method reference preference using the “With” equivalent of select.&lt;/p&gt;&lt;pre&gt;@Test&lt;br /&gt;public void selectStringsWithMethodReference()&lt;br /&gt;{&lt;br /&gt;    var list = Lists.&lt;strong&gt;&lt;em&gt;mutable&lt;/em&gt;&lt;/strong&gt;.with(&lt;strong&gt;&quot;Atlanta&quot;&lt;/strong&gt;, &lt;strong&gt;&quot;Atlantic City&quot;&lt;/strong&gt;, &lt;strong&gt;&quot;Boston&quot;&lt;/strong&gt;, &lt;strong&gt;&quot;Boca Raton&quot;&lt;/strong&gt;);&lt;br /&gt;&lt;br /&gt;    var actual = list.selectWith(String::startsWith, &lt;strong&gt;&quot;At&quot;&lt;/strong&gt;);&lt;br /&gt;&lt;br /&gt;    var expected = List.&lt;em&gt;of&lt;/em&gt;(&lt;strong&gt;&quot;Atlanta&quot;&lt;/strong&gt;, &lt;strong&gt;&quot;Atlantic City&quot;&lt;/strong&gt;);&lt;br /&gt;    Assertions.&lt;em&gt;assertEquals&lt;/em&gt;(expected, actual);&lt;br /&gt;}&lt;/pre&gt;&lt;blockquote&gt;I have spoken&lt;/blockquote&gt;&lt;p&gt;If you didn’t just have an “aha!” moment, don’t be alarmed. We still can’t pass parameters to method references directly. There is no syntax in Java currently to support it. There is a trick that is happening here.&lt;/p&gt;&lt;p&gt;Let me try and explain how this works. The method selectWith takes two parameters. The first parameter is a Predicate2 , which as it turns out will match the signature of String::startsWith. To be more specific, the Predicate2&amp;lt;String, String&amp;gt; matches the signature of String::startsWith. The second parameter selectWith takes is any type of parameter, which in this case happens to be a String.&lt;/p&gt;&lt;p&gt;Here’s the exact signature of selectWith on RichIterable.&lt;/p&gt;&lt;pre&gt;&amp;lt;P&amp;gt; RichIterable&amp;lt;T&amp;gt; selectWith(Predicate2&amp;lt;? super T, ? super P&amp;gt; predicate, P parameter);&lt;/pre&gt;&lt;p&gt;I added the next section after I initially published the blog. A friend suggested a minor improvement would be to include a “how to” example so developers could see there is no magic and can begin leveraging for their own code. Thanks for the suggestion Rustam!&lt;/p&gt;&lt;h3&gt;A selectWith pattern implementation example&lt;/h3&gt;&lt;p&gt;There is a class in Eclipse Collections named &lt;a href=&quot;https://github.com/eclipse/eclipse-collections/blob/master/eclipse-collections/src/main/java/org/eclipse/collections/impl/utility/internal/IteratorIterate.java&quot;&gt;IteratorIterate&lt;/a&gt;. It includes many of the basic eager iteration patterns in Eclipse Collections that allow the patterns to be used with any Iterable type in Java. I’m sharing this example because Iterator is a basic enough concept that most Java developers should be able to read and understand the code. The following shows the implementation of &lt;a href=&quot;https://github.com/eclipse/eclipse-collections/blob/master/eclipse-collections/src/main/java/org/eclipse/collections/impl/utility/internal/IteratorIterate.java#L271&quot;&gt;selectWith&lt;/a&gt; in IteratorIterate that is method reference friendly for method references with a single parameter.&lt;/p&gt;&lt;pre&gt;public static &amp;lt;T, P, R extends Collection&amp;lt;T&amp;gt;&amp;gt; R selectWith(&lt;br /&gt;        Iterator&amp;lt;T&amp;gt; iterator,&lt;br /&gt;        Predicate2&amp;lt;? super T, ? super P&amp;gt; predicate,&lt;br /&gt;        P injectedValue,&lt;br /&gt;        R targetCollection)&lt;br /&gt;{&lt;br /&gt;    while (iterator.hasNext())&lt;br /&gt;    {&lt;br /&gt;        T item = iterator.next();&lt;br /&gt;        if (predicate.accept(item, injectedValue))&lt;br /&gt;        {&lt;br /&gt;            targetCollection.add(item);&lt;br /&gt;        }&lt;br /&gt;    }&lt;br /&gt;    return targetCollection;&lt;br /&gt;}&lt;/pre&gt;&lt;p&gt;This pattern can be used with any type that can create an Iterator.&lt;/p&gt;&lt;p&gt;Here’s an example using IteratorIterate.selectWith with a JDK Set.&lt;/p&gt;&lt;pre&gt;@Test&lt;br /&gt;public void selectWithOnIteratorIterate()&lt;br /&gt;{&lt;br /&gt;    Set&amp;lt;String&amp;gt; strings = Set.&lt;em&gt;of&lt;/em&gt;(&lt;strong&gt;&quot;Atlanta&quot;&lt;/strong&gt;, &lt;strong&gt;&quot;Atlantic City&quot;&lt;/strong&gt;, &lt;strong&gt;&quot;Boston&quot;&lt;/strong&gt;, &lt;strong&gt;&quot;Boca Raton&quot;&lt;/strong&gt;);&lt;br /&gt;    &lt;br /&gt;    HashSet&amp;lt;String&amp;gt; actual = IteratorIterate.&lt;em&gt;selectWith&lt;/em&gt;(&lt;br /&gt;            strings.iterator(),&lt;br /&gt;            String::startsWith,&lt;br /&gt;            &lt;strong&gt;&quot;At&quot;&lt;/strong&gt;,&lt;br /&gt;            new HashSet&amp;lt;&amp;gt;());&lt;br /&gt;&lt;br /&gt;    var expected = Set.&lt;em&gt;of&lt;/em&gt;(&lt;strong&gt;&quot;Atlanta&quot;&lt;/strong&gt;, &lt;strong&gt;&quot;Atlantic City&quot;&lt;/strong&gt;);&lt;br /&gt;    Assertions.&lt;em&gt;assertEquals&lt;/em&gt;(expected, actual);&lt;br /&gt;}&lt;/pre&gt;&lt;p&gt;I hope this additional section was helpful.&lt;/p&gt;&lt;h3&gt;More Method References Please!&lt;/h3&gt;&lt;p&gt;Now that we know how to use a method reference with a With method, let me show you some more examples.&lt;/p&gt;&lt;pre&gt;@Test&lt;br /&gt;public void predicatesWithMethodReference()&lt;br /&gt;{&lt;br /&gt;    var list = Lists.&lt;strong&gt;&lt;em&gt;mutable&lt;/em&gt;&lt;/strong&gt;.with(&lt;strong&gt;&quot;Atlanta&quot;&lt;/strong&gt;, &lt;strong&gt;&quot;Atlantic City&quot;&lt;/strong&gt;, &lt;strong&gt;&quot;Boston&quot;&lt;/strong&gt;, &lt;strong&gt;&quot;Boca Raton&quot;&lt;/strong&gt;);&lt;br /&gt;&lt;br /&gt;    var selected1 = list.selectWith(String::startsWith, &lt;strong&gt;&quot;At&quot;&lt;/strong&gt;);&lt;br /&gt;    var expected1 = List.&lt;em&gt;of&lt;/em&gt;(&lt;strong&gt;&quot;Atlanta&quot;&lt;/strong&gt;, &lt;strong&gt;&quot;Atlantic City&quot;&lt;/strong&gt;);&lt;br /&gt;    Assertions.&lt;em&gt;assertEquals&lt;/em&gt;(expected1, selected1);&lt;br /&gt;&lt;br /&gt;    var rejected = list.rejectWith(String::startsWith, &lt;strong&gt;&quot;At&quot;&lt;/strong&gt;);&lt;br /&gt;    var expected2 = List.&lt;em&gt;of&lt;/em&gt;(&lt;strong&gt;&quot;Boston&quot;&lt;/strong&gt;, &lt;strong&gt;&quot;Boca Raton&quot;&lt;/strong&gt;);&lt;br /&gt;    Assertions.&lt;em&gt;assertEquals&lt;/em&gt;(expected2, rejected);&lt;br /&gt;&lt;br /&gt;    var selected2 = list.selectWith(String::startsWith, &lt;strong&gt;&quot;Bo&quot;&lt;/strong&gt;);&lt;br /&gt;    Assertions.&lt;em&gt;assertEquals&lt;/em&gt;(expected2, selected2);&lt;br /&gt;&lt;br /&gt;    var detected = list.detectWith(String::endsWith, &lt;strong&gt;&quot;y&quot;&lt;/strong&gt;);&lt;br /&gt;    Assertions.&lt;em&gt;assertEquals&lt;/em&gt;(&lt;strong&gt;&quot;Atlantic City&quot;&lt;/strong&gt;, detected);&lt;br /&gt;&lt;br /&gt;    var count = list.countWith(String::contains, &lt;strong&gt;&quot;c&quot;&lt;/strong&gt;);&lt;br /&gt;    Assertions.&lt;em&gt;assertEquals&lt;/em&gt;(2, count);&lt;br /&gt;&lt;br /&gt;    Assertions.&lt;em&gt;assertTrue&lt;/em&gt;(&lt;br /&gt;        list.anySatisfyWith(String::contains, &lt;strong&gt;&quot;a&quot;&lt;/strong&gt;));&lt;br /&gt;    Assertions.&lt;em&gt;assertTrue&lt;/em&gt;(&lt;br /&gt;        list.allSatisfyWith(String::contains, &lt;strong&gt;&quot;t&quot;&lt;/strong&gt;));&lt;br /&gt;    Assertions.&lt;em&gt;assertTrue&lt;/em&gt;(&lt;br /&gt;         list.noneSatisfyWith(String::contains, &lt;strong&gt;&quot;z&quot;&lt;/strong&gt;));&lt;br /&gt;&lt;br /&gt;    var partitioned = list.partitionWith(String::endsWith, &lt;strong&gt;&quot;n&quot;&lt;/strong&gt;);&lt;br /&gt;    Assertions.&lt;em&gt;assertEquals&lt;/em&gt;(expected2, partitioned.getSelected());&lt;br /&gt;    Assertions.&lt;em&gt;assertEquals&lt;/em&gt;(expected1, partitioned.getRejected());&lt;br /&gt;}&lt;/pre&gt;&lt;p&gt;There are a lot of methods that take single parameters that can match Predicate2, Function2, Procedure2, etc. as method references. The With methods in Eclipse Collections increase the total number of places you can use method references instead of lambdas quite a bit.&lt;/p&gt;&lt;h3&gt;Enjoy Method References and Lambdas&lt;/h3&gt;&lt;p&gt;I hope this blog helped you discover a nifty feature available in Eclipse Collections that can help you find more places to use method references. We had the “With” methods in Eclipse Collections years before Method References arrived in Java 8. We initially added them so we could create more opportunities to hoist up anonymous inner classes into static variables to reduce garbage generation. We used to call these “fat free closures” as they didn’t require you to keep adding new objects to the heap. The coincidence that this made it easier to leverage these methods with method references was an amazingly pleasant and welcome surprise.&lt;/p&gt;&lt;p&gt;Thank you for reading this blog! I hope you get to enjoy using method references as much as I do now.&lt;/p&gt;&lt;p&gt;&lt;em&gt;I am a Project Lead and Committer for the &lt;/em&gt;&lt;a href=&quot;https://github.com/eclipse/eclipse-collections&quot;&gt;&lt;em&gt;Eclipse Collections&lt;/em&gt;&lt;/a&gt;&lt;em&gt; OSS project at the &lt;/em&gt;&lt;a href=&quot;https://projects.eclipse.org/projects/technology.collections&quot;&gt;&lt;em&gt;Eclipse Foundation&lt;/em&gt;&lt;/a&gt;&lt;em&gt;. &lt;/em&gt;&lt;a href=&quot;https://github.com/eclipse/eclipse-collections&quot;&gt;&lt;em&gt;Eclipse Collections&lt;/em&gt;&lt;/a&gt;&lt;em&gt; is open for &lt;/em&gt;&lt;a href=&quot;https://github.com/eclipse/eclipse-collections/blob/master/CONTRIBUTING.md&quot;&gt;&lt;em&gt;contributions&lt;/em&gt;&lt;/a&gt;&lt;em&gt;. If you like the library, you can let us know by starring it on GitHub.&lt;/em&gt;&lt;/p&gt;&lt;h4&gt;Further Learning&lt;/h4&gt;&lt;ul&gt;&lt;li&gt;&lt;a href=&quot;https://medium.com/javarevisited/10-best-places-to-learn-java-online-for-free-ce5e713ab5b2&quot;&gt;10 Best Places to Learn Java Online for Free in 2022&lt;/a&gt;&lt;/li&gt;&lt;li&gt;&lt;a href=&quot;https://medium.com/javarevisited/the-java-programmer-roadmap-f9db163ef2c2&quot;&gt;The 2022 Java Programmer RoadMap&lt;/a&gt;&lt;/li&gt;&lt;li&gt;&lt;a href=&quot;https://medium.com/javarevisited/20-essential-java-libraries-and-apis-every-programmer-should-learn-5ccd41812fc7&quot;&gt;Top 22 Java Libraries and APIs Every Programmer Should Learn in 2022&lt;/a&gt;&lt;/li&gt;&lt;/ul&gt;&lt;img alt=&quot;&quot; height=&quot;1&quot; src=&quot;https://medium.com/_/stat?event=post.clientViewed&amp;amp;referrerSource=full_rss&amp;amp;postId=97e566d2088b&quot; width=&quot;1&quot; /&gt;&lt;hr /&gt;&lt;p&gt;&lt;a href=&quot;https://medium.com/javarevisited/the-elusive-and-beautiful-java-method-reference-97e566d2088b&quot;&gt;The elusive and beautiful Java Method Reference&lt;/a&gt; was originally published in &lt;a href=&quot;https://medium.com/javarevisited&quot;&gt;Javarevisited&lt;/a&gt; on Medium, where people are continuing the conversation by highlighting and responding to this story.&lt;/p&gt;</description>
	<pubDate>Sun, 29 May 2022 06:58:17 +0000</pubDate>
</item>
<item>
	<title>Marc Nuri: Eclipse JKube 1.8.0 is now available!</title>
	<guid isPermaLink="true">https://blog.marcnuri.com/eclipse-jkube-1-8-0</guid>
	<link>https://blog.marcnuri.com/eclipse-jkube-1-8-0</link>
	<description>&lt;div&gt;&lt;a href=&quot;https://blog.marcnuri.com/eclipse-jkube-1-8-0&quot;&gt;Original post&lt;/a&gt;&lt;/div&gt;
    &lt;p&gt;On behalf of the &lt;a class=&quot;post-link &quot; href=&quot;https://blog.marcnuri.com/eclipse-jkube-introduction-kubernetes-openshift&quot; title=&quot;Eclipse JKube introduction: Java tools and plugins for Kubernetes and OpenShift&quot;&gt;Eclipse JKube&lt;/a&gt; team and everyone who has contributed, I'm happy to announce that Eclipse JKube &lt;code&gt;1.8.0&lt;/code&gt; has been &lt;a href=&quot;https://github.com/eclipse/jkube/releases/tag/v1.8.0&quot; rel=&quot;noopener&quot; target=&quot;_blank&quot; title=&quot;Link to https://github.com/eclipse/jkube/releases/tag/v1.8.0&quot;&gt;released&lt;/a&gt; and is now available from &lt;a href=&quot;https://repo1.maven.org/maven2/org/eclipse/jkube/kubernetes-maven-plugin/1.8.0/&quot; rel=&quot;noopener&quot; target=&quot;_blank&quot; title=&quot;Link to https://repo1.maven.org/maven2/org/eclipse/jkube/kubernetes-maven-plugin/1.8.0/&quot;&gt;Maven Central&lt;/a&gt;.&lt;/p&gt;&lt;p&gt;Thanks to all of you who have contributed with issue reports, pull requests, feedback, and spreading the word with blogs, videos, comments, and so on. We really appreciate your help, keep it up!&lt;/p&gt;&lt;h2 class=&quot;heading&quot;&gt;&lt;a class=&quot;anchor&quot; href=&quot;https://blog.marcnuri.com/eclipse-jkube-1-8-0/#whats-new&quot;&gt;&lt;i class=&quot;anchor__link fas fa-link&quot;&gt;&lt;/i&gt;&lt;/a&gt;&lt;span id=&quot;whats-new&quot;&gt;&lt;/span&gt;What's new?&lt;/h2&gt;&lt;p&gt;Without further ado, let's have a look at the most significant updates:&lt;/p&gt;&lt;ul&gt;&lt;li&gt;&lt;a class=&quot;post-link &quot; href=&quot;https://blog.marcnuri.com/eclipse-jkube-1-8-0#gradle-plugin-graduation&quot; title=&quot;Link to the Gradle Plugin Graduation section&quot;&gt;Graduation of Kubernetes and OpenShift Gradle plugins&lt;/a&gt;&lt;/li&gt;&lt;li&gt;Startup Probe definition is now possible via XML or DSL configuration&lt;/li&gt;&lt;li&gt;&lt;a class=&quot;post-link &quot; href=&quot;https://blog.marcnuri.com/eclipse-jkube-1-8-0#fragments-multiple-environments&quot; title=&quot;Link to the fragments from multiple environments section&quot;&gt;Fragments can be picked from multiple environment directories&lt;/a&gt;&lt;/li&gt;&lt;li&gt;&lt;a class=&quot;post-link &quot; href=&quot;https://blog.marcnuri.com/eclipse-jkube-1-8-0#jakartaee-javaee-support&quot; title=&quot;Link to the JavaEE + JakartaEE support section&quot;&gt;Support for JakartaEE and JavaEE based projects with our WebApp generator&lt;/a&gt;&lt;/li&gt;&lt;li&gt;Better support for Apple M1&lt;/li&gt;&lt;li&gt;Group and Version labels are now configurable&lt;/li&gt;&lt;li&gt;ğŸ�› Many other bug-fixes and minor improvements&lt;/li&gt;&lt;/ul&gt;&lt;h3 class=&quot;heading&quot;&gt;&lt;a class=&quot;anchor&quot; href=&quot;https://blog.marcnuri.com/eclipse-jkube-1-8-0/#gradle-plugin-graduation&quot;&gt;&lt;i class=&quot;anchor__link fas fa-link&quot;&gt;&lt;/i&gt;&lt;/a&gt;&lt;span id=&quot;gradle-plugin-graduation&quot;&gt;&lt;/span&gt;Graduation of Kubernetes and OpenShift Gradle plugins&lt;/h3&gt;&lt;p&gt;Our Gradle plugins (&lt;a href=&quot;https://www.eclipse.org/jkube/docs/kubernetes-gradle-plugin&quot; rel=&quot;noopener&quot; target=&quot;_blank&quot; title=&quot;Link to https://www.eclipse.org/jkube/docs/kubernetes-gradle-plugin&quot;&gt;Kubernetes Gradle Plugin&lt;/a&gt; &amp;amp; &lt;a href=&quot;https://www.eclipse.org/jkube/docs/openshift-gradle-plugin&quot; rel=&quot;noopener&quot; target=&quot;_blank&quot; title=&quot;Link to https://www.eclipse.org/jkube/docs/openshift-gradle-plugin&quot;&gt;OpenShift Gradle Plugin&lt;/a&gt;) have finally graduated and are out of preview. You should expect full support as compared to the Maven plugins.&lt;/p&gt;&lt;h3 class=&quot;heading&quot;&gt;&lt;a class=&quot;anchor&quot; href=&quot;https://blog.marcnuri.com/eclipse-jkube-1-8-0/#fragments-multiple-environments&quot;&gt;&lt;i class=&quot;anchor__link fas fa-link&quot;&gt;&lt;/i&gt;&lt;/a&gt;&lt;span id=&quot;fragments-multiple-environments&quot;&gt;&lt;/span&gt;Fragments can be picked from multiple environment directories&lt;/h3&gt;&lt;p&gt;So far, it was possible to use a different set of fragments depending on the environment you were targeting. This is useful in case you want to provide different configurations or resources for environments such as development, staging, production, and so on. However, it was not possible to have common resources or fragments that could be shared among the different environments.&lt;/p&gt;&lt;p&gt;Starting on &lt;a href=&quot;https://github.com/eclipse/jkube/issues/1218&quot; rel=&quot;noopener&quot; target=&quot;_blank&quot; title=&quot;Link to https://github.com/eclipse/jkube/issues/1218&quot;&gt;this release&lt;/a&gt;, it's now possible to load fragments from multiple directories. Considering a directory structure like the following:&lt;/p&gt;&lt;div class=&quot;code&quot; style=&quot;background: #232323;&quot;&gt;&lt;pre style=&quot;display: block; padding: 0.5em; background: #232323; color: #e6e1dc;&quot;&gt;&lt;code class=&quot;language-bash&quot; style=&quot;white-space: pre;&quot;&gt;&lt;span&gt;src
&lt;/span&gt;â””â”€â”€ main
    â””â”€â”€ jkube
        â”œâ”€â”€ common
        â”œâ”€â”€ dev
        â””â”€â”€ prod&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;You can setup two different profiles that share the resources in the &lt;code&gt;common&lt;/code&gt; directory:&lt;/p&gt;&lt;div class=&quot;code&quot; style=&quot;background: #232323;&quot;&gt;&lt;pre style=&quot;display: block; padding: 0.5em; background: #232323; color: #e6e1dc;&quot;&gt;&lt;code class=&quot;language-xml&quot; style=&quot;white-space: pre;&quot;&gt;&lt;span style=&quot;color: #e8bf6a;&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span style=&quot;color: #e8bf6a;&quot;&gt;profiles&lt;/span&gt;&lt;span style=&quot;color: #e8bf6a;&quot;&gt;&amp;gt;&lt;/span&gt;&lt;span&gt;
&lt;/span&gt;&lt;span&gt;  &lt;/span&gt;&lt;span style=&quot;color: #e8bf6a;&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span style=&quot;color: #e8bf6a;&quot;&gt;profile&lt;/span&gt;&lt;span style=&quot;color: #e8bf6a;&quot;&gt;&amp;gt;&lt;/span&gt;&lt;span&gt;
&lt;/span&gt;&lt;span&gt;    &lt;/span&gt;&lt;span style=&quot;color: #e8bf6a;&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span style=&quot;color: #e8bf6a;&quot;&gt;id&lt;/span&gt;&lt;span style=&quot;color: #e8bf6a;&quot;&gt;&amp;gt;&lt;/span&gt;&lt;span&gt;dev&lt;/span&gt;&lt;span style=&quot;color: #e8bf6a;&quot;&gt;&amp;lt;/&lt;/span&gt;&lt;span style=&quot;color: #e8bf6a;&quot;&gt;id&lt;/span&gt;&lt;span style=&quot;color: #e8bf6a;&quot;&gt;&amp;gt;&lt;/span&gt;&lt;span&gt;
&lt;/span&gt;&lt;span&gt;    &lt;/span&gt;&lt;span style=&quot;color: #e8bf6a;&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span style=&quot;color: #e8bf6a;&quot;&gt;properties&lt;/span&gt;&lt;span style=&quot;color: #e8bf6a;&quot;&gt;&amp;gt;&lt;/span&gt;&lt;span&gt;
&lt;/span&gt;&lt;span&gt;      &lt;/span&gt;&lt;span style=&quot;color: #e8bf6a;&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span style=&quot;color: #e8bf6a;&quot;&gt;jkube.environment&lt;/span&gt;&lt;span style=&quot;color: #e8bf6a;&quot;&gt;&amp;gt;&lt;/span&gt;&lt;span&gt;common,dev&lt;/span&gt;&lt;span style=&quot;color: #e8bf6a;&quot;&gt;&amp;lt;/&lt;/span&gt;&lt;span style=&quot;color: #e8bf6a;&quot;&gt;jkube.environment&lt;/span&gt;&lt;span style=&quot;color: #e8bf6a;&quot;&gt;&amp;gt;&lt;/span&gt;&lt;span&gt;
&lt;/span&gt;&lt;span&gt;    &lt;/span&gt;&lt;span style=&quot;color: #e8bf6a;&quot;&gt;&amp;lt;/&lt;/span&gt;&lt;span style=&quot;color: #e8bf6a;&quot;&gt;properties&lt;/span&gt;&lt;span style=&quot;color: #e8bf6a;&quot;&gt;&amp;gt;&lt;/span&gt;&lt;span&gt;
&lt;/span&gt;&lt;span&gt;  &lt;/span&gt;&lt;span style=&quot;color: #e8bf6a;&quot;&gt;&amp;lt;/&lt;/span&gt;&lt;span style=&quot;color: #e8bf6a;&quot;&gt;profile&lt;/span&gt;&lt;span style=&quot;color: #e8bf6a;&quot;&gt;&amp;gt;&lt;/span&gt;&lt;span&gt;
&lt;/span&gt;&lt;span&gt;  &lt;/span&gt;&lt;span style=&quot;color: #e8bf6a;&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span style=&quot;color: #e8bf6a;&quot;&gt;profile&lt;/span&gt;&lt;span style=&quot;color: #e8bf6a;&quot;&gt;&amp;gt;&lt;/span&gt;&lt;span&gt;
&lt;/span&gt;&lt;span&gt;    &lt;/span&gt;&lt;span style=&quot;color: #e8bf6a;&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span style=&quot;color: #e8bf6a;&quot;&gt;id&lt;/span&gt;&lt;span style=&quot;color: #e8bf6a;&quot;&gt;&amp;gt;&lt;/span&gt;&lt;span&gt;prod&lt;/span&gt;&lt;span style=&quot;color: #e8bf6a;&quot;&gt;&amp;lt;/&lt;/span&gt;&lt;span style=&quot;color: #e8bf6a;&quot;&gt;id&lt;/span&gt;&lt;span style=&quot;color: #e8bf6a;&quot;&gt;&amp;gt;&lt;/span&gt;&lt;span&gt;
&lt;/span&gt;&lt;span&gt;    &lt;/span&gt;&lt;span style=&quot;color: #e8bf6a;&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span style=&quot;color: #e8bf6a;&quot;&gt;properties&lt;/span&gt;&lt;span style=&quot;color: #e8bf6a;&quot;&gt;&amp;gt;&lt;/span&gt;&lt;span&gt;
&lt;/span&gt;&lt;span&gt;      &lt;/span&gt;&lt;span style=&quot;color: #e8bf6a;&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span style=&quot;color: #e8bf6a;&quot;&gt;jkube.environment&lt;/span&gt;&lt;span style=&quot;color: #e8bf6a;&quot;&gt;&amp;gt;&lt;/span&gt;&lt;span&gt;common,prod&lt;/span&gt;&lt;span style=&quot;color: #e8bf6a;&quot;&gt;&amp;lt;/&lt;/span&gt;&lt;span style=&quot;color: #e8bf6a;&quot;&gt;jkube.environment&lt;/span&gt;&lt;span style=&quot;color: #e8bf6a;&quot;&gt;&amp;gt;&lt;/span&gt;&lt;span&gt;
&lt;/span&gt;&lt;span&gt;    &lt;/span&gt;&lt;span style=&quot;color: #e8bf6a;&quot;&gt;&amp;lt;/&lt;/span&gt;&lt;span style=&quot;color: #e8bf6a;&quot;&gt;properties&lt;/span&gt;&lt;span style=&quot;color: #e8bf6a;&quot;&gt;&amp;gt;&lt;/span&gt;&lt;span&gt;
&lt;/span&gt;&lt;span&gt;  &lt;/span&gt;&lt;span style=&quot;color: #e8bf6a;&quot;&gt;&amp;lt;/&lt;/span&gt;&lt;span style=&quot;color: #e8bf6a;&quot;&gt;profile&lt;/span&gt;&lt;span style=&quot;color: #e8bf6a;&quot;&gt;&amp;gt;&lt;/span&gt;&lt;span&gt;
&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span style=&quot;color: #e8bf6a;&quot;&gt;&amp;lt;/&lt;/span&gt;&lt;span style=&quot;color: #e8bf6a;&quot;&gt;profiles&lt;/span&gt;&lt;span style=&quot;color: #e8bf6a;&quot;&gt;&amp;gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h3 class=&quot;heading&quot;&gt;&lt;a class=&quot;anchor&quot; href=&quot;https://blog.marcnuri.com/eclipse-jkube-1-8-0/#jakartaee-javaee-support&quot;&gt;&lt;i class=&quot;anchor__link fas fa-link&quot;&gt;&lt;/i&gt;&lt;/a&gt;&lt;span id=&quot;jakartaee-javaee-support&quot;&gt;&lt;/span&gt;Support for JakartaEE and JavaEE based projects with our WebApp generator&lt;/h3&gt;&lt;p&gt;The base image for our &lt;a href=&quot;https://www.eclipse.org/jkube/docs/kubernetes-maven-plugin#generator-webapp&quot; rel=&quot;noopener&quot; target=&quot;_blank&quot; title=&quot;Link to https://www.eclipse.org/jkube/docs/kubernetes-maven-plugin#generator-webapp&quot;&gt;WebApp generator&lt;/a&gt; is now using Tomcat 10 by default. Tomcat 10 supports JakartaEE based projects. However, we deploy the project in the &lt;code&gt;webapps-javaee&lt;/code&gt; directory, which automatically migrates any JavaEE project to JakartaEE if necessary. You can read more about this in the &lt;a href=&quot;https://tomcat.apache.org/migration-10.html&quot; rel=&quot;noopener&quot; target=&quot;_blank&quot; title=&quot;Link to https://tomcat.apache.org/migration-10.html&quot;&gt;Tomcat 10 migration guide&lt;/a&gt;.&lt;/p&gt;&lt;p&gt;Check the following video for a live demo and additional details:&lt;/p&gt;&lt;div&gt;&lt;/div&gt;&lt;h2 class=&quot;heading&quot;&gt;&lt;a class=&quot;anchor&quot; href=&quot;https://blog.marcnuri.com/eclipse-jkube-1-8-0/#using-this-release&quot;&gt;&lt;i class=&quot;anchor__link fas fa-link&quot;&gt;&lt;/i&gt;&lt;/a&gt;&lt;span id=&quot;using-this-release&quot;&gt;&lt;/span&gt;Using this release&lt;/h2&gt;&lt;p&gt;If your project is based on Maven, you just need to add the Kubernetes Maven plugin or the OpenShift Maven plugin to your plugin dependencies:&lt;/p&gt;&lt;div class=&quot;code&quot; style=&quot;background: #232323;&quot;&gt;&lt;pre style=&quot;display: block; padding: 0.5em; background: #232323; color: #e6e1dc;&quot;&gt;&lt;code class=&quot;language-xml&quot; style=&quot;white-space: pre;&quot;&gt;&lt;span style=&quot;color: #e8bf6a;&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span style=&quot;color: #e8bf6a;&quot;&gt;plugin&lt;/span&gt;&lt;span style=&quot;color: #e8bf6a;&quot;&gt;&amp;gt;&lt;/span&gt;&lt;span&gt;
&lt;/span&gt;&lt;span&gt;  &lt;/span&gt;&lt;span style=&quot;color: #e8bf6a;&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span style=&quot;color: #e8bf6a;&quot;&gt;groupId&lt;/span&gt;&lt;span style=&quot;color: #e8bf6a;&quot;&gt;&amp;gt;&lt;/span&gt;&lt;span&gt;org.eclipse.jkube&lt;/span&gt;&lt;span style=&quot;color: #e8bf6a;&quot;&gt;&amp;lt;/&lt;/span&gt;&lt;span style=&quot;color: #e8bf6a;&quot;&gt;groupId&lt;/span&gt;&lt;span style=&quot;color: #e8bf6a;&quot;&gt;&amp;gt;&lt;/span&gt;&lt;span&gt;
&lt;/span&gt;&lt;span&gt;  &lt;/span&gt;&lt;span style=&quot;color: #e8bf6a;&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span style=&quot;color: #e8bf6a;&quot;&gt;artifactId&lt;/span&gt;&lt;span style=&quot;color: #e8bf6a;&quot;&gt;&amp;gt;&lt;/span&gt;&lt;span&gt;kubernetes-maven-plugin&lt;/span&gt;&lt;span style=&quot;color: #e8bf6a;&quot;&gt;&amp;lt;/&lt;/span&gt;&lt;span style=&quot;color: #e8bf6a;&quot;&gt;artifactId&lt;/span&gt;&lt;span style=&quot;color: #e8bf6a;&quot;&gt;&amp;gt;&lt;/span&gt;&lt;span&gt;
&lt;/span&gt;&lt;span&gt;  &lt;/span&gt;&lt;span style=&quot;color: #e8bf6a;&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span style=&quot;color: #e8bf6a;&quot;&gt;version&lt;/span&gt;&lt;span style=&quot;color: #e8bf6a;&quot;&gt;&amp;gt;&lt;/span&gt;&lt;span&gt;1.8.0&lt;/span&gt;&lt;span style=&quot;color: #e8bf6a;&quot;&gt;&amp;lt;/&lt;/span&gt;&lt;span style=&quot;color: #e8bf6a;&quot;&gt;version&lt;/span&gt;&lt;span style=&quot;color: #e8bf6a;&quot;&gt;&amp;gt;&lt;/span&gt;&lt;span&gt;
&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span style=&quot;color: #e8bf6a;&quot;&gt;&amp;lt;/&lt;/span&gt;&lt;span style=&quot;color: #e8bf6a;&quot;&gt;plugin&lt;/span&gt;&lt;span style=&quot;color: #e8bf6a;&quot;&gt;&amp;gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;If your project is based on Gradle, you just need to add the Kubernetes Gradle plugin or the OpenShift Gradle plugin to your plugin dependencies:&lt;/p&gt;&lt;div class=&quot;code&quot; style=&quot;background: #232323;&quot;&gt;&lt;pre style=&quot;display: block; padding: 0.5em; background: #232323; color: #e6e1dc;&quot;&gt;&lt;code class=&quot;language-groovy&quot; style=&quot;white-space: pre;&quot;&gt;&lt;span&gt;plugins {
&lt;/span&gt;&lt;span&gt;  id &lt;/span&gt;&lt;span style=&quot;color: #a5c261;&quot;&gt;'org.eclipse.jkube.kubernetes'&lt;/span&gt;&lt;span&gt; version &lt;/span&gt;&lt;span style=&quot;color: #a5c261;&quot;&gt;'1.8.0'&lt;/span&gt;&lt;span&gt;
&lt;/span&gt;}&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h2 class=&quot;heading&quot;&gt;&lt;a class=&quot;anchor&quot; href=&quot;https://blog.marcnuri.com/eclipse-jkube-1-8-0/#how-can-you-help&quot;&gt;&lt;i class=&quot;anchor__link fas fa-link&quot;&gt;&lt;/i&gt;&lt;/a&gt;&lt;span id=&quot;how-can-you-help&quot;&gt;&lt;/span&gt;How can you help?&lt;/h2&gt;&lt;p&gt;If you're interested in helping out and are a first-time contributor, check out the &lt;a href=&quot;https://github.com/eclipse/jkube/labels/first-timers-only&quot; rel=&quot;noopener&quot; target=&quot;_blank&quot; title=&quot;Link to https://github.com/eclipse/jkube/labels/first-timers-only&quot;&gt;&quot;first-timers-only&quot;&lt;/a&gt; tag in the issue repository. We've tagged extremely easy issues so that you can get started contributing to Open Source and the Eclipse organization.&lt;/p&gt;&lt;p&gt;If you are a more experienced developer or have already contributed to JKube, check the &lt;a href=&quot;https://github.com/eclipse/jkube/labels/help%20wanted&quot; rel=&quot;noopener&quot; target=&quot;_blank&quot; title=&quot;Link to https://github.com/eclipse/jkube/labels/help%20wanted&quot;&gt;&quot;help wanted&quot;&lt;/a&gt; tag.&lt;/p&gt;&lt;p&gt;We're also excited to read articles and posts mentioning our project and sharing the user experience. Feedback is the only way to improve.&lt;/p&gt;&lt;p&gt;&lt;a href=&quot;https://www.eclipse.org/jkube&quot; rel=&quot;noopener&quot; target=&quot;_blank&quot; title=&quot;Link to https://www.eclipse.org/jkube&quot;&gt;Project Page&lt;/a&gt; | &lt;a href=&quot;https://github.com/eclipse/jkube&quot; rel=&quot;noopener&quot; target=&quot;_blank&quot; title=&quot;Link to https://github.com/eclipse/jkube&quot;&gt;GitHub&lt;/a&gt; | &lt;a href=&quot;https://github.com/eclipse/jkube/issues&quot; rel=&quot;noopener&quot; target=&quot;_blank&quot; title=&quot;Link to https://github.com/eclipse/jkube/issues&quot;&gt;Issues&lt;/a&gt; | &lt;a href=&quot;https://gitter.im/eclipse/jkube&quot; rel=&quot;noopener&quot; target=&quot;_blank&quot; title=&quot;Link to https://gitter.im/eclipse/jkube&quot;&gt;Gitter&lt;/a&gt; | &lt;a href=&quot;https://accounts.eclipse.org/mailing-list/jkube-dev&quot; rel=&quot;noopener&quot; target=&quot;_blank&quot; title=&quot;Link to https://accounts.eclipse.org/mailing-list/jkube-dev&quot;&gt;Mailing list&lt;/a&gt; | &lt;a href=&quot;https://stackoverflow.com/questions/tagged/jkube&quot; rel=&quot;noopener&quot; target=&quot;_blank&quot; title=&quot;Link to https://stackoverflow.com/questions/tagged/jkube&quot;&gt;Stack Overflow&lt;/a&gt;&lt;/p&gt;&lt;span class=&quot;post-image__pusher aligncenter&quot;&gt;&lt;/span&gt;&lt;figure class=&quot;post-image &quot;&gt;&lt;span class=&quot;post-image__scrim&quot;&gt;&lt;/span&gt;&lt;a class=&quot;post-image__link&quot; href=&quot;https://blog.marcnuri.com/static/af6673438e09cd98812665335c800cbf/e5189/JKube-blog-banner.jpg&quot; title=&quot;Eclipse JKube Logo&quot;&gt;&lt;span class=&quot;post-image__image-container&quot;&gt;&lt;div class=&quot;gatsby-image-wrapper gatsby-image-wrapper-constrained post-image__image aligncenter&quot;&gt;&lt;source type=&quot;image/webp&quot; /&gt;&lt;img alt=&quot;Eclipse JKube Logo&quot; src=&quot;https://blog.marcnuri.com/static/af6673438e09cd98812665335c800cbf/e5189/JKube-blog-banner.jpg&quot; /&gt;&lt;/div&gt;&lt;/span&gt;&lt;/a&gt;&lt;/figure&gt;</description>
	<pubDate>Tue, 24 May 2022 12:00:00 +0000</pubDate>
        <enclosure url="https://blog.marcnuri.com/static/af6673438e09cd98812665335c800cbf/e5189/JKube-blog-banner.jpg" length="0" type="image/jpg"/>
</item>
<item>
	<title>Jonas, Maximilian and Philip: Diagram Editors in Cloud IDEs</title>
	<guid isPermaLink="false">https://eclipsesource.com/?p=46051</guid>
	<link>https://eclipsesource.com/blogs/2022/05/24/diagram-editors-in-cloud-ides/</link>
	<description>&lt;p&gt;The support for textual programming languages is excellent in modern, web-based IDEs, such as Eclipse Theia and VS Code. The hugely...&lt;/p&gt;
&lt;p&gt;The post &lt;a href=&quot;https://eclipsesource.com/blogs/2022/05/24/diagram-editors-in-cloud-ides/&quot; rel=&quot;nofollow&quot;&gt;Diagram Editors in Cloud IDEs&lt;/a&gt; appeared first on &lt;a href=&quot;https://eclipsesource.com&quot; rel=&quot;nofollow&quot;&gt;EclipseSource&lt;/a&gt;.&lt;/p&gt;</description>
	<pubDate>Tue, 24 May 2022 08:44:12 +0000</pubDate>
</item>
<item>
	<title>Donald Raab: Smalltalk or Java? Why not both!</title>
	<guid isPermaLink="false">https://medium.com/p/5564abd17f1a</guid>
	<link>https://medium.com/javarevisited/smalltalk-or-java-why-not-both-5564abd17f1a?source=rss-df39b86e9f04------2</link>
	<description>&lt;p&gt;Learn how Smalltalk and Java both influenced &lt;a href=&quot;https://github.com/eclipse/eclipse-collections&quot;&gt;Eclipse Collections&lt;/a&gt; and can help you grow as a developer.&lt;/p&gt;&lt;figure&gt;&lt;img alt=&quot;Pharo 10.0 and Intellij IDEA 2022.1&quot; src=&quot;https://cdn-images-1.medium.com/max/1024/1*3dyZR94ih0Vo0LKhsd75nA.png&quot; /&gt;&lt;figcaption&gt;Pharo 10.0 and Intellij IDEA 2022.1&lt;/figcaption&gt;&lt;/figure&gt;&lt;h3&gt;Taking a walk with Smalltalk&lt;/h3&gt;&lt;p&gt;On May 12, 2022, I gave a talk titled “Smalltalk or Java? Why not both!” at the Pittsburgh Java User Group. The meetup was hosted by &lt;a href=&quot;https://medium.com/u/8fe7c47c374f&quot;&gt;Sirisha Pratha&lt;/a&gt; and &lt;a href=&quot;https://medium.com/u/6578859a4ea6&quot;&gt;Rinat Gatyatullin&lt;/a&gt;. The talk was recorded and is available now on the Pittsburgh JUG YouTube channel(video linked below). I demoed some language and library features switching back and forth between Smalltalk and Java/&lt;a href=&quot;https://github.com/eclipse/eclipse-collections&quot;&gt;Eclipse Collections&lt;/a&gt; code examples using &lt;a href=&quot;https://pharo.org/&quot;&gt;Pharo 10.0&lt;/a&gt; and &lt;a href=&quot;https://www.jetbrains.com/idea/&quot;&gt;IntelliJ IDEA 2022.1&lt;/a&gt;.&lt;/p&gt;&lt;p&gt;The talk was a lot of fun for me. It’s been 22 years since I programmed in &lt;a href=&quot;https://en.wikipedia.org/wiki/Smalltalk&quot;&gt;Smalltalk&lt;/a&gt; professionally. I was asked by an attendee which Smalltalk I used previously. I answered that I programmed in IBM &lt;a href=&quot;https://en.wikipedia.org/wiki/VisualAge&quot;&gt;VisualAge&lt;/a&gt; for Smalltalk. I also mentioned that I started learning Java using IBM VisualAge for Java, which was implemented in VisualAge for Smalltalk. VisualAge for Java would eventually evolve into the &lt;a href=&quot;https://en.wikipedia.org/wiki/Eclipse_(software)&quot;&gt;Eclipse IDE&lt;/a&gt;, which was open sourced by IBM over 20 years ago.&lt;/p&gt;&lt;h3&gt;Four decades and counting as a developer&lt;/h3&gt;&lt;p&gt;I’ve been programming for 40 years. Here’s a list of most of the languages I have programmed in.&lt;/p&gt;&lt;figure&gt;&lt;a href=&quot;https://javarevisited.blogspot.com/2018/08/5-programming-language-every-programmer-learn.html&quot;&gt;&lt;img alt=&quot;40 years of programming language experience&quot; src=&quot;https://cdn-images-1.medium.com/max/896/1*i-Rg2f-wI9uLtJ7elyjsMg.png&quot; /&gt;&lt;/a&gt;&lt;figcaption&gt;Programming experience from the early 1980s to the early 2020s&lt;/figcaption&gt;&lt;/figure&gt;&lt;h3&gt;3 Decades, 3 Languages and 3 Lambda Syntaxes&lt;/h3&gt;&lt;p&gt;Over the past 30 years, I have programmed professionally in three different languages that have had a lasting impact in my thought process as a developer. All three of these languages have support for lambdas.&lt;/p&gt;&lt;figure&gt;&lt;a href=&quot;https://javarevisited.blogspot.com/2018/08/top-5-java-8-courses-to-learn-online.html&quot;&gt;&lt;img alt=&quot;Lambda syntax for Clipper 5.x, Smalltalk and Java 8+&quot; src=&quot;https://cdn-images-1.medium.com/max/923/1*hEt-FN-gD8xVet80yp7AUQ.png&quot; /&gt;&lt;/a&gt;&lt;figcaption&gt;Lambda syntax for Clipper 5.x, Smalltalk and Java 8+&lt;/figcaption&gt;&lt;/figure&gt;&lt;p&gt;During the talk, I explained I could never see myself programming in a language without support for lambdas again.&lt;/p&gt;&lt;h3&gt;Blog References&lt;/h3&gt;&lt;p&gt;I referenced the following blog links during the talk. The code I shared in the live coding sessions are available in the blogs. I also explain in some detail how to get up and running using the Pharo Smalltalk IDE.&lt;/p&gt;&lt;h4&gt;Smalltalk&lt;/h4&gt;&lt;ul&gt;&lt;li&gt;&lt;a href=&quot;https://blog.devgenius.io/a-little-smalltalk-for-the-soul-b12051b709d1&quot;&gt;A little Smalltalk for the soul&lt;/a&gt;&lt;/li&gt;&lt;li&gt;&lt;a href=&quot;https://donraab.medium.com/exploring-the-smalltalk-collections-api-in-unit-tests-using-pharo-8-0-2f62cfc8410d&quot;&gt;Exploring the Smalltalk Collections API in unit tests using Pharo 8.0&lt;/a&gt;&lt;/li&gt;&lt;/ul&gt;&lt;h4&gt;Java with Eclipse Collections&lt;/h4&gt;&lt;ul&gt;&lt;li&gt;&lt;a href=&quot;https://medium.com/javarevisited/blog-series-the-missing-java-data-structures-no-one-ever-told-you-about-17f34cc4b7e2&quot;&gt;Blog Series: The missing Java data structures no one ever told you about&lt;/a&gt;&lt;/li&gt;&lt;li&gt;&lt;a href=&quot;https://medium.com/javarevisited/my-25-favorite-eclipse-collections-apis-a51589ee5c4a&quot;&gt;My 25 favorite methods from the Eclipse Collections API&lt;/a&gt;&lt;/li&gt;&lt;/ul&gt;&lt;h4&gt;Both Smalltalk and Java&lt;/h4&gt;&lt;ul&gt;&lt;li&gt;&lt;a href=&quot;https://medium.com/javarevisited/java-streams-are-great-but-its-time-for-better-java-collections-42d2c04235d1&quot;&gt;Java Streams are great but it’s time for better Java Collections&lt;/a&gt;&lt;/li&gt;&lt;li&gt;&lt;a href=&quot;https://donraab.medium.com/comparing-my-smalltalk-and-eclipse-collections-wordle-kata-solutions-4058ac7d8ca0&quot;&gt;Comparing my Smalltalk and Eclipse Collections Wordle Kata Solutions&lt;/a&gt;&lt;/li&gt;&lt;/ul&gt;&lt;h3&gt;Eclipse Collections = Smalltalk + Java&lt;/h3&gt;&lt;p&gt;Eclipse Collections is a bridge built between two amazing programming worlds. Here’s a table that explains the influence both programming languages have had on the evolution of the now 18 year old open source Java library.&lt;/p&gt;&lt;figure&gt;&lt;img alt=&quot;Smalltalk and Java influences on Eclipse Collections&quot; src=&quot;https://cdn-images-1.medium.com/max/1024/1*FSyHY08uvAQt9QPf6BloRw.png&quot; /&gt;&lt;figcaption&gt;The best of both worlds in Eclipse Collections&lt;/figcaption&gt;&lt;/figure&gt;&lt;h3&gt;My Pharo Playground from the talk&lt;/h3&gt;&lt;p&gt;The following is a snapshot of the Pharo playground I used as a REPL to highlight and execute code. The output in the Transcipt in the image is the result of executing the highlighted code. I noted how Interval is inclusive in Smalltalk, and when you use a fractional step by, Smalltalk automatically reduces fractions when it can. I mentioned that we have Interval, IntInterval and LongInterval in &lt;a href=&quot;https://github.com/eclipse/eclipse-collections&quot;&gt;Eclipse Collections&lt;/a&gt;.&lt;/p&gt;&lt;figure&gt;&lt;img alt=&quot;Pharo Smalltalk Playground code examples from talk&quot; src=&quot;https://cdn-images-1.medium.com/max/1024/1*1ND082MbjiEnOpuNF2HuGA.png&quot; /&gt;&lt;figcaption&gt;Pharo Smalltalk Playground&lt;/figcaption&gt;&lt;/figure&gt;&lt;h3&gt;Learn Multiple Languages&lt;/h3&gt;&lt;p&gt;Learning multiple languages can help us grow as developers. There are a lot of programming languages to learn out there. I believe there is as much value, if not more, in learning classic languages like Lisp and Smalltalk as there is in learning the shiny new programming languages. The classic languages like Lisp and Smalltalk continue to evolve and solve new problems. In preparing for this talk, I learned some new things I didn’t know about Smalltalk as well as some cool features in the Pharo Smalltalk IDE. The Collections API in Pharo Smalltalk seems to be continuing to evolve. I hope by giving more talks like this, the Java and Smalltalk communities can learn about new things that we have implemented in Eclipse Collections.&lt;/p&gt;&lt;p&gt;I hope to implement a Lazy Iterable library for Pharo Smalltalk in the future. I will open source the library of course, once I get around to it.&lt;/p&gt;&lt;p&gt;Sharing is caring.&lt;/p&gt;&lt;p&gt;I will post a link to the video from the talk here once it is available on YouTube. Stay tuned!&lt;/p&gt;&lt;h3&gt;Update: The Video&lt;/h3&gt;&lt;a href=&quot;https://medium.com/media/81986ef43e898eecda4cabb8d6803535/href&quot;&gt;https://medium.com/media/81986ef43e898eecda4cabb8d6803535/href&lt;/a&gt;&lt;p&gt;&lt;em&gt;I am a Project Lead and Committer for the &lt;/em&gt;&lt;a href=&quot;https://github.com/eclipse/eclipse-collections&quot;&gt;&lt;em&gt;Eclipse Collections&lt;/em&gt;&lt;/a&gt;&lt;em&gt; OSS project at the &lt;/em&gt;&lt;a href=&quot;https://projects.eclipse.org/projects/technology.collections&quot;&gt;&lt;em&gt;Eclipse Foundation&lt;/em&gt;&lt;/a&gt;&lt;em&gt;. &lt;/em&gt;&lt;a href=&quot;https://github.com/eclipse/eclipse-collections&quot;&gt;&lt;em&gt;Eclipse Collections&lt;/em&gt;&lt;/a&gt;&lt;em&gt; is open for &lt;/em&gt;&lt;a href=&quot;https://github.com/eclipse/eclipse-collections/blob/master/CONTRIBUTING.md&quot;&gt;&lt;em&gt;contributions&lt;/em&gt;&lt;/a&gt;&lt;em&gt;. If you like the library, you can let us know by starring it on GitHub.&lt;/em&gt;&lt;/p&gt;&lt;img alt=&quot;&quot; height=&quot;1&quot; src=&quot;https://medium.com/_/stat?event=post.clientViewed&amp;amp;referrerSource=full_rss&amp;amp;postId=5564abd17f1a&quot; width=&quot;1&quot; /&gt;&lt;hr /&gt;&lt;p&gt;&lt;a href=&quot;https://medium.com/javarevisited/smalltalk-or-java-why-not-both-5564abd17f1a&quot;&gt;Smalltalk or Java? Why not both!&lt;/a&gt; was originally published in &lt;a href=&quot;https://medium.com/javarevisited&quot;&gt;Javarevisited&lt;/a&gt; on Medium, where people are continuing the conversation by highlighting and responding to this story.&lt;/p&gt;</description>
	<pubDate>Sat, 21 May 2022 20:36:37 +0000</pubDate>
</item>
<item>
	<title>John Kellerman: Eclipse Cloud DevTools Contributor Award: Internationalization for Eclipse Theia</title>
	<guid isPermaLink="false">7158 at https://blogs.eclipse.org</guid>
	<link>https://blogs.eclipse.org/post/john-kellerman/eclipse-cloud-devtools-contributor-award-internationalization-eclipse-theia</link>
	<description>&lt;div class=&quot;field field-name-body field-type-text-with-summary field-label-hidden&quot;&gt;&lt;div class=&quot;field-items&quot;&gt;&lt;div class=&quot;field-item even&quot;&gt;&lt;p&gt;The Eclipse Cloud DevTools contributor award this month goes to the Arduino team, led by Stefano Visconti, for contributing internationalization capabilities to Eclipse Theia. Congratulations and thank you for this and other great contributions!&lt;/p&gt;

&lt;p&gt;As you might know, the new &lt;a href=&quot;https://blog.arduino.cc/2022/04/20/the-arduino-ide-2-0-now-speaks-your-language/&quot;&gt;Arduino IDE 2.0 is based on Eclipse Theia&lt;/a&gt;. As highlighted in &lt;a href=&quot;https://blogs.eclipse.org/post/john-kellerman/theia-adopter-story-new-arduino-ide-20&quot;&gt;this adopter story&lt;/a&gt;, Arduino does not only benefit from Eclipse Theia, but they also regularly and strategically contribute to it as &lt;a href=&quot;https://blogs.eclipse.org/post/mike-milinkovich/eclipse-theia-next-generation-eclipse#:~:text=For%20over%2020%20years%20the,%2C%20Mac%2C%20and%20Linux%20desktops.&quot;&gt;the next generation of Eclipse&lt;/a&gt;. One recent contribution was the &lt;a href=&quot;https://ecdtools.eclipse.org/resources/blogs/2021-12-16-theia-i18n/&quot;&gt;full support for internationalization in Eclipse Theia&lt;/a&gt;, provided by Mark Sujew at &lt;a href=&quot;https://www.typefox.io/&quot;&gt;TypeFox&lt;/a&gt;. As companies from all around the globe adopt Theia to build custom IDEs and tools, the ability to localize them is a critical feature for the platform.&lt;/p&gt;

&lt;p&gt;&lt;img alt=&quot;&quot; class=&quot;center-block&quot; src=&quot;https://blogs.eclipse.org/sites/default/files/custom_uploads/image6.png&quot; style=&quot;width: 480px; height: 354px;&quot; /&gt;&lt;/p&gt;

&lt;p class=&quot;rtecenter&quot;&gt;&lt;em&gt;Theia with a partial Chinese locale&lt;/em&gt;&lt;/p&gt;

&lt;p&gt;Theia does not only provide the mechanism for translating the UI, it also provides language packs for a &lt;a href=&quot;https://github.com/eclipse-theia/theia/tree/master/packages/core/i18n&quot;&gt;growing number of languages&lt;/a&gt;. If you’re missing a language, we are happy for contributions!&lt;/p&gt;

&lt;p&gt;We want to thank Arduino for this great addition to the Theia ecosystem and congratulations for winning the award!&lt;/p&gt;

&lt;p&gt;This Eclipse Cloud DevTools contributor award is sponsored by &lt;a href=&quot;https://eclipsesource.com/&quot;&gt;EclipseSource&lt;/a&gt;, providing &lt;a href=&quot;https://eclipsesource.com/services/tools/&quot;&gt;consulting and implementation services&lt;/a&gt; for &lt;a href=&quot;https://eclipsesource.com/web-and-cloud-based-tools/&quot;&gt;web-based tools&lt;/a&gt;, &lt;a href=&quot;https://eclipsesource.com/technology/eclipse-glsp/&quot;&gt;Eclipse GLSP&lt;/a&gt;,  &lt;a href=&quot;https://eclipsesource.com/technology/eclipse-theia/&quot;&gt;Eclipse Theia&lt;/a&gt;, and &lt;a href=&quot;https://eclipsesource.com/technology/vs-code/&quot;&gt;VS Code&lt;/a&gt;.&lt;/p&gt;
&lt;/div&gt;&lt;/div&gt;&lt;/div&gt;</description>
	<pubDate>Mon, 16 May 2022 19:20:57 +0000</pubDate>
</item>
<item>
	<title>Edmundo López B.: Xtext Tip: Adding importURI support</title>
	<guid isPermaLink="true">https://idiomaticsoft.com/post/2022-05-16-xtext-importuri/</guid>
	<link>https://idiomaticsoft.com/post/2022-05-16-xtext-importuri/</link>
	<description>&lt;p&gt;In a &lt;a href=&quot;https://idiomaticsoft.com/post/2022-04-01-xtext-namespaces/&quot;&gt;previous post&lt;/a&gt; I showed how to use the import namespace feature of Xtext. This feature helps to easily implement java like imports. However, Xtext also supports imports more in a C-like style, i.e. imports where a whole file imported, and its definitions made available to the current file.&lt;/p&gt;
&lt;p&gt;For example, in our &lt;a href=&quot;https://idiomaticsoft.com/post/2022-03-18-fully-qualified-name/&quot;&gt;block language&lt;/a&gt;, it should be possible to import the name space from another Block and then use in our alias. We can for example define Block3 in file &lt;code&gt;Block3.block&lt;/code&gt;&lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre tabindex=&quot;0&quot;&gt;&lt;code class=&quot;language-java&quot;&gt;block Block3 &lt;span style=&quot;color: #f92672;&quot;&gt;{&lt;/span&gt;
		field myField1
		field myField2
&lt;span style=&quot;color: #f92672;&quot;&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;And then use it in the file &lt;code&gt;Block1.block&lt;/code&gt; as follows:&lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre tabindex=&quot;0&quot;&gt;&lt;code class=&quot;language-java&quot;&gt; &lt;span style=&quot;color: #f92672;&quot;&gt;import&lt;/span&gt; &lt;span style=&quot;color: #960050; background-color: #1e0010;&quot;&gt;&quot;&lt;/span&gt;Block3.block&lt;span style=&quot;color: #960050; background-color: #1e0010;&quot;&gt;&quot;&lt;/span&gt;

block Block1 &lt;span style=&quot;color: #f92672;&quot;&gt;{&lt;/span&gt;

	alias myAlias1 aliases Block3&lt;span style=&quot;color: #f92672;&quot;&gt;.&lt;/span&gt;&lt;span style=&quot;color: #a6e22e;&quot;&gt;myField1&lt;/span&gt;
&lt;span style=&quot;color: #f92672;&quot;&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h3 id=&quot;the-block-language-with-import-name-space-support&quot;&gt;The block language with import name space support&lt;/h3&gt;
&lt;p&gt;First, we modify the grammar to include an import statement:&lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre tabindex=&quot;0&quot;&gt;&lt;code class=&quot;language-java&quot;&gt;grammar com&lt;span style=&quot;color: #f92672;&quot;&gt;.&lt;/span&gt;&lt;span style=&quot;color: #a6e22e;&quot;&gt;idiomaticsoft&lt;/span&gt;&lt;span style=&quot;color: #f92672;&quot;&gt;.&lt;/span&gt;&lt;span style=&quot;color: #a6e22e;&quot;&gt;dsl&lt;/span&gt;&lt;span style=&quot;color: #f92672;&quot;&gt;.&lt;/span&gt;&lt;span style=&quot;color: #a6e22e;&quot;&gt;block&lt;/span&gt;&lt;span style=&quot;color: #f92672;&quot;&gt;.&lt;/span&gt;&lt;span style=&quot;color: #a6e22e;&quot;&gt;Block&lt;/span&gt; with org&lt;span style=&quot;color: #f92672;&quot;&gt;.&lt;/span&gt;&lt;span style=&quot;color: #a6e22e;&quot;&gt;eclipse&lt;/span&gt;&lt;span style=&quot;color: #f92672;&quot;&gt;.&lt;/span&gt;&lt;span style=&quot;color: #a6e22e;&quot;&gt;xtext&lt;/span&gt;&lt;span style=&quot;color: #f92672;&quot;&gt;.&lt;/span&gt;&lt;span style=&quot;color: #a6e22e;&quot;&gt;common&lt;/span&gt;&lt;span style=&quot;color: #f92672;&quot;&gt;.&lt;/span&gt;&lt;span style=&quot;color: #a6e22e;&quot;&gt;Terminals&lt;/span&gt;

generate block &lt;span style=&quot;color: #e6db74;&quot;&gt;&quot;http://www.idiomaticsoft.com/dsl/block/Block&quot;&lt;/span&gt;

Model:
	&lt;span style=&quot;color: #f92672;&quot;&gt;(&lt;/span&gt;imports&lt;span style=&quot;color: #f92672;&quot;&gt;+=&lt;/span&gt;Import&lt;span style=&quot;color: #f92672;&quot;&gt;)*&lt;/span&gt;
	blocks&lt;span style=&quot;color: #f92672;&quot;&gt;+=&lt;/span&gt;Block&lt;span style=&quot;color: #f92672;&quot;&gt;*;&lt;/span&gt;

Import:
	&lt;span style=&quot;color: #960050; background-color: #1e0010;&quot;&gt;'&lt;/span&gt;import&lt;span style=&quot;color: #960050; background-color: #1e0010;&quot;&gt;'&lt;/span&gt; importURI&lt;span style=&quot;color: #f92672;&quot;&gt;=&lt;/span&gt;STRING
&lt;span style=&quot;color: #f92672;&quot;&gt;;&lt;/span&gt;

Block:
	&lt;span style=&quot;color: #960050; background-color: #1e0010;&quot;&gt;'&lt;/span&gt;block&lt;span style=&quot;color: #960050; background-color: #1e0010;&quot;&gt;'&lt;/span&gt; name&lt;span style=&quot;color: #f92672;&quot;&gt;=&lt;/span&gt;ID&lt;span style=&quot;color: #e6db74;&quot;&gt;'{'&lt;/span&gt; &lt;span style=&quot;color: #f92672;&quot;&gt;(&lt;/span&gt;members&lt;span style=&quot;color: #f92672;&quot;&gt;+=&lt;/span&gt;Member&lt;span style=&quot;color: #f92672;&quot;&gt;)*&lt;/span&gt; &lt;span style=&quot;color: #e6db74;&quot;&gt;'}'&lt;/span&gt;&lt;span style=&quot;color: #f92672;&quot;&gt;;&lt;/span&gt;

Member:
	Block &lt;span style=&quot;color: #f92672;&quot;&gt;|&lt;/span&gt; Field &lt;span style=&quot;color: #f92672;&quot;&gt;|&lt;/span&gt; Alias&lt;span style=&quot;color: #f92672;&quot;&gt;;&lt;/span&gt;

Field:
	&lt;span style=&quot;color: #960050; background-color: #1e0010;&quot;&gt;'&lt;/span&gt;field&lt;span style=&quot;color: #960050; background-color: #1e0010;&quot;&gt;'&lt;/span&gt; name&lt;span style=&quot;color: #f92672;&quot;&gt;=&lt;/span&gt;ID&lt;span style=&quot;color: #f92672;&quot;&gt;;&lt;/span&gt;

Alias:
	&lt;span style=&quot;color: #960050; background-color: #1e0010;&quot;&gt;'&lt;/span&gt;alias&lt;span style=&quot;color: #960050; background-color: #1e0010;&quot;&gt;'&lt;/span&gt; name&lt;span style=&quot;color: #f92672;&quot;&gt;=&lt;/span&gt;ID &lt;span style=&quot;color: #960050; background-color: #1e0010;&quot;&gt;'&lt;/span&gt;aliases&lt;span style=&quot;color: #960050; background-color: #1e0010;&quot;&gt;'&lt;/span&gt; alias&lt;span style=&quot;color: #f92672;&quot;&gt;=[&lt;/span&gt;Member&lt;span style=&quot;color: #f92672;&quot;&gt;|&lt;/span&gt;MemberFQN&lt;span style=&quot;color: #f92672;&quot;&gt;];&lt;/span&gt;

MemberFQN:
	ID &lt;span style=&quot;color: #f92672;&quot;&gt;(&lt;/span&gt;&lt;span style=&quot;color: #e6db74;&quot;&gt;&quot;.&quot;&lt;/span&gt; ID&lt;span style=&quot;color: #f92672;&quot;&gt;)*;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;This grammar includes a new &lt;code&gt;Import&lt;/code&gt; rule that has &lt;code&gt;importURI&lt;/code&gt; attribute. This attribute is one of those Xtext defaults, and to make the infrastructure work, you need to name your attribute like that.&lt;/p&gt;
&lt;p&gt;The next step is to modify the runtime module to bind the right global scope provider. To do this, we modify the file as follows:&lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre tabindex=&quot;0&quot;&gt;&lt;code class=&quot;language-java&quot;&gt;&lt;span style=&quot;color: #f92672;&quot;&gt;package&lt;/span&gt; com.idiomaticsoft.dsl.block&lt;span style=&quot;color: #f92672;&quot;&gt;;&lt;/span&gt;

&lt;span style=&quot;color: #f92672;&quot;&gt;import&lt;/span&gt; org.eclipse.xtext.scoping.IGlobalScopeProvider&lt;span style=&quot;color: #f92672;&quot;&gt;;&lt;/span&gt;
&lt;span style=&quot;color: #f92672;&quot;&gt;import&lt;/span&gt; org.eclipse.xtext.scoping.impl.ImportUriGlobalScopeProvider&lt;span style=&quot;color: #f92672;&quot;&gt;;&lt;/span&gt;

&lt;span style=&quot;color: #75715e;&quot;&gt;/**
&lt;/span&gt;&lt;span style=&quot;color: #75715e;&quot;&gt; * Use this class to register components to be used at runtime / without the
&lt;/span&gt;&lt;span style=&quot;color: #75715e;&quot;&gt; * Equinox extension registry.
&lt;/span&gt;&lt;span style=&quot;color: #75715e;&quot;&gt; */&lt;/span&gt;
&lt;span style=&quot;color: #66d9ef;&quot;&gt;public&lt;/span&gt; &lt;span style=&quot;color: #66d9ef;&quot;&gt;class&lt;/span&gt; &lt;span style=&quot;color: #a6e22e;&quot;&gt;BlockRuntimeModule&lt;/span&gt; &lt;span style=&quot;color: #66d9ef;&quot;&gt;extends&lt;/span&gt; AbstractBlockRuntimeModule &lt;span style=&quot;color: #f92672;&quot;&gt;{&lt;/span&gt;

	&lt;span style=&quot;color: #a6e22e;&quot;&gt;@Override&lt;/span&gt;
	&lt;span style=&quot;color: #66d9ef;&quot;&gt;public&lt;/span&gt; Class&lt;span style=&quot;color: #f92672;&quot;&gt;&amp;lt;?&lt;/span&gt; &lt;span style=&quot;color: #66d9ef;&quot;&gt;extends&lt;/span&gt; IGlobalScopeProvider&lt;span style=&quot;color: #f92672;&quot;&gt;&amp;gt;&lt;/span&gt; &lt;span style=&quot;color: #a6e22e;&quot;&gt;bindIGlobalScopeProvider&lt;/span&gt;&lt;span style=&quot;color: #f92672;&quot;&gt;()&lt;/span&gt; &lt;span style=&quot;color: #f92672;&quot;&gt;{&lt;/span&gt;
		&lt;span style=&quot;color: #66d9ef;&quot;&gt;return&lt;/span&gt; ImportUriGlobalScopeProvider&lt;span style=&quot;color: #f92672;&quot;&gt;.&lt;/span&gt;&lt;span style=&quot;color: #a6e22e;&quot;&gt;class&lt;/span&gt;&lt;span style=&quot;color: #f92672;&quot;&gt;;&lt;/span&gt;
	&lt;span style=&quot;color: #f92672;&quot;&gt;}&lt;/span&gt;

&lt;span style=&quot;color: #f92672;&quot;&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;With theses two modifications, the scoping will work. Nevertheless, the import will not show an error when the file is not found. This can be corrected by modifying the  MWE file to enable the use the  &lt;code&gt;ImportUriValidator&lt;/code&gt;, this is done as follows:&lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre tabindex=&quot;0&quot;&gt;&lt;code class=&quot;language-java&quot;&gt;module com&lt;span style=&quot;color: #f92672;&quot;&gt;.&lt;/span&gt;&lt;span style=&quot;color: #a6e22e;&quot;&gt;idiomaticsoft&lt;/span&gt;&lt;span style=&quot;color: #f92672;&quot;&gt;.&lt;/span&gt;&lt;span style=&quot;color: #a6e22e;&quot;&gt;dsl&lt;/span&gt;&lt;span style=&quot;color: #f92672;&quot;&gt;.&lt;/span&gt;&lt;span style=&quot;color: #a6e22e;&quot;&gt;block&lt;/span&gt;&lt;span style=&quot;color: #f92672;&quot;&gt;.&lt;/span&gt;&lt;span style=&quot;color: #a6e22e;&quot;&gt;GenerateBlock&lt;/span&gt;

&lt;span style=&quot;color: #f92672;&quot;&gt;import&lt;/span&gt; org.eclipse.xtext.xtext.generator.*
&lt;span style=&quot;color: #f92672;&quot;&gt;import&lt;/span&gt; org.eclipse.xtext.xtext.generator.model.project.*

var rootPath &lt;span style=&quot;color: #f92672;&quot;&gt;=&lt;/span&gt; &lt;span style=&quot;color: #e6db74;&quot;&gt;&quot;..&quot;&lt;/span&gt;

Workflow &lt;span style=&quot;color: #f92672;&quot;&gt;{&lt;/span&gt;
	
	component &lt;span style=&quot;color: #f92672;&quot;&gt;=&lt;/span&gt; XtextGenerator &lt;span style=&quot;color: #f92672;&quot;&gt;{&lt;/span&gt;
		configuration &lt;span style=&quot;color: #f92672;&quot;&gt;=&lt;/span&gt; &lt;span style=&quot;color: #f92672;&quot;&gt;{&lt;/span&gt;
			project &lt;span style=&quot;color: #f92672;&quot;&gt;=&lt;/span&gt; StandardProjectConfig &lt;span style=&quot;color: #f92672;&quot;&gt;{&lt;/span&gt;
				baseName &lt;span style=&quot;color: #f92672;&quot;&gt;=&lt;/span&gt; &lt;span style=&quot;color: #e6db74;&quot;&gt;&quot;com.idiomaticsoft.dsl.block&quot;&lt;/span&gt;
				rootPath &lt;span style=&quot;color: #f92672;&quot;&gt;=&lt;/span&gt; rootPath
				runtimeTest &lt;span style=&quot;color: #f92672;&quot;&gt;=&lt;/span&gt; &lt;span style=&quot;color: #f92672;&quot;&gt;{&lt;/span&gt;
					enabled &lt;span style=&quot;color: #f92672;&quot;&gt;=&lt;/span&gt; &lt;span style=&quot;color: #66d9ef;&quot;&gt;true&lt;/span&gt;
				&lt;span style=&quot;color: #f92672;&quot;&gt;}&lt;/span&gt;
				eclipsePlugin &lt;span style=&quot;color: #f92672;&quot;&gt;=&lt;/span&gt; &lt;span style=&quot;color: #f92672;&quot;&gt;{&lt;/span&gt;
					enabled &lt;span style=&quot;color: #f92672;&quot;&gt;=&lt;/span&gt; &lt;span style=&quot;color: #66d9ef;&quot;&gt;true&lt;/span&gt;
				&lt;span style=&quot;color: #f92672;&quot;&gt;}&lt;/span&gt;
				eclipsePluginTest &lt;span style=&quot;color: #f92672;&quot;&gt;=&lt;/span&gt; &lt;span style=&quot;color: #f92672;&quot;&gt;{&lt;/span&gt;
					enabled &lt;span style=&quot;color: #f92672;&quot;&gt;=&lt;/span&gt; &lt;span style=&quot;color: #66d9ef;&quot;&gt;true&lt;/span&gt;
				&lt;span style=&quot;color: #f92672;&quot;&gt;}&lt;/span&gt;
				createEclipseMetaData &lt;span style=&quot;color: #f92672;&quot;&gt;=&lt;/span&gt; &lt;span style=&quot;color: #66d9ef;&quot;&gt;true&lt;/span&gt;
			&lt;span style=&quot;color: #f92672;&quot;&gt;}&lt;/span&gt;
			code &lt;span style=&quot;color: #f92672;&quot;&gt;=&lt;/span&gt; &lt;span style=&quot;color: #f92672;&quot;&gt;{&lt;/span&gt;
				encoding &lt;span style=&quot;color: #f92672;&quot;&gt;=&lt;/span&gt; &lt;span style=&quot;color: #e6db74;&quot;&gt;&quot;UTF-8&quot;&lt;/span&gt;
				lineDelimiter &lt;span style=&quot;color: #f92672;&quot;&gt;=&lt;/span&gt; &lt;span style=&quot;color: #e6db74;&quot;&gt;&quot;\n&quot;&lt;/span&gt;
				fileHeader &lt;span style=&quot;color: #f92672;&quot;&gt;=&lt;/span&gt; &lt;span style=&quot;color: #e6db74;&quot;&gt;&quot;/*\n * generated by Xtext \${version}\n */&quot;&lt;/span&gt;
				preferXtendStubs &lt;span style=&quot;color: #f92672;&quot;&gt;=&lt;/span&gt; &lt;span style=&quot;color: #66d9ef;&quot;&gt;false&lt;/span&gt;
			&lt;span style=&quot;color: #f92672;&quot;&gt;}&lt;/span&gt;
		&lt;span style=&quot;color: #f92672;&quot;&gt;}&lt;/span&gt;
		
		
		
		language &lt;span style=&quot;color: #f92672;&quot;&gt;=&lt;/span&gt; StandardLanguage &lt;span style=&quot;color: #f92672;&quot;&gt;{&lt;/span&gt;
			name &lt;span style=&quot;color: #f92672;&quot;&gt;=&lt;/span&gt; &lt;span style=&quot;color: #e6db74;&quot;&gt;&quot;com.idiomaticsoft.dsl.block.Block&quot;&lt;/span&gt;
			fileExtensions &lt;span style=&quot;color: #f92672;&quot;&gt;=&lt;/span&gt; &lt;span style=&quot;color: #e6db74;&quot;&gt;&quot;block&quot;&lt;/span&gt;
			serializer &lt;span style=&quot;color: #f92672;&quot;&gt;=&lt;/span&gt; &lt;span style=&quot;color: #f92672;&quot;&gt;{&lt;/span&gt;
				generateStub &lt;span style=&quot;color: #f92672;&quot;&gt;=&lt;/span&gt; &lt;span style=&quot;color: #66d9ef;&quot;&gt;false&lt;/span&gt;
			&lt;span style=&quot;color: #f92672;&quot;&gt;}&lt;/span&gt;
			validator &lt;span style=&quot;color: #f92672;&quot;&gt;=&lt;/span&gt; &lt;span style=&quot;color: #f92672;&quot;&gt;{&lt;/span&gt;
				composedCheck &lt;span style=&quot;color: #f92672;&quot;&gt;=&lt;/span&gt; &lt;span style=&quot;color: #e6db74;&quot;&gt;&quot;org.eclipse.xtext.validation.NamesAreUniqueValidator&quot;&lt;/span&gt;
				composedCheck &lt;span style=&quot;color: #f92672;&quot;&gt;=&lt;/span&gt; &lt;span style=&quot;color: #e6db74;&quot;&gt;&quot;org.eclipse.xtext.validation.ImportUriValidator&quot;&lt;/span&gt;
				generateDeprecationValidation &lt;span style=&quot;color: #f92672;&quot;&gt;=&lt;/span&gt; &lt;span style=&quot;color: #66d9ef;&quot;&gt;true&lt;/span&gt;
			&lt;span style=&quot;color: #f92672;&quot;&gt;}&lt;/span&gt;
			generator &lt;span style=&quot;color: #f92672;&quot;&gt;=&lt;/span&gt; &lt;span style=&quot;color: #f92672;&quot;&gt;{&lt;/span&gt;
				generateXtendStub &lt;span style=&quot;color: #f92672;&quot;&gt;=&lt;/span&gt; &lt;span style=&quot;color: #66d9ef;&quot;&gt;true&lt;/span&gt;
			&lt;span style=&quot;color: #f92672;&quot;&gt;}&lt;/span&gt;
			junitSupport &lt;span style=&quot;color: #f92672;&quot;&gt;=&lt;/span&gt; &lt;span style=&quot;color: #f92672;&quot;&gt;{&lt;/span&gt;
				junitVersion &lt;span style=&quot;color: #f92672;&quot;&gt;=&lt;/span&gt; &lt;span style=&quot;color: #e6db74;&quot;&gt;&quot;5&quot;&lt;/span&gt;
			&lt;span style=&quot;color: #f92672;&quot;&gt;}&lt;/span&gt;
		&lt;span style=&quot;color: #f92672;&quot;&gt;}&lt;/span&gt;
	&lt;span style=&quot;color: #f92672;&quot;&gt;}&lt;/span&gt;
&lt;span style=&quot;color: #f92672;&quot;&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h4 id=&quot;things-to-consider&quot;&gt;Things to consider&lt;/h4&gt;
&lt;p&gt;The default for this feature are the following:&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;If you want to have several &lt;code&gt;importURI&lt;/code&gt;, then you need to use several &lt;code&gt;Import&lt;/code&gt; rules. You cannot have a rule like &lt;code&gt;importedNamespace+=ImportFQN&lt;/code&gt;. The default implementation expects this attribute to be a string, not a list.&lt;/li&gt;
&lt;li&gt;The imports of the rules are valid for all elements in the container and its children.&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;The full code for this example can be found &lt;a href=&quot;https://github.com/idiomaticsoft/xtext-tips/tree/master/imported-namespaces&quot; target=&quot;_blank&quot;&gt;here&lt;/a&gt;.&lt;/p&gt;</description>
	<pubDate>Mon, 16 May 2022 00:00:00 +0000</pubDate>
</item>
<item>
	<title>Mike Milinkovich: Security Leadership at the Eclipse Foundation</title>
	<guid isPermaLink="false">http://eclipse-foundation.blog/?p=1681</guid>
	<link>https://eclipse-foundation.blog/2022/05/12/security-leadership-at-the-eclipse-foundation/</link>
	<description>&lt;p&gt;As everyone who is involved in the software industry is well aware, security is a significant topic these days. In particular, open source supply chain security is top of mind across the entire ICT industry. The Eclipse Foundation, its community, its projects, and its working groups all have a strong motivation to be leaders in advocating and implementing security best practices. Our members, adopters, users, and stakeholders all desire that their security risks be mitigated to the degree possible. &lt;/p&gt;



&lt;p&gt;One thing that is clear, however, is that simply putting the burden of added security work on the shoulders of our committers and project leaders is not an option. This topic needs to be addressed by services provided by the Eclipse Foundation to our project community or it will fail. Without strong support in terms of release and build engineering, tooling, and education, developers simply do not have the time, interest, or skills necessary to be responsible for implementing security best practices. It is equally true that security, and particularly supply chain security, requires a programmatic approach. Security is not an attribute that you simply add to existing software.&lt;/p&gt;



&lt;p&gt;So we need to provide services to our projects to implement our &lt;a href=&quot;https://github.com/eclipse-cbi/best-practices/blob/main/software-supply-chain/osssc-best-practices.md&quot;&gt;Open Source Software Supply Chain Best Practices&lt;/a&gt;. We envisage this as a collection of services provided to our projects by staff to protect our code repositories, secure third party artifacts, provide security audits, secure build pipelines, and protect build outputs. &lt;/p&gt;



&lt;p&gt;The Eclipse Foundation has long had a &lt;a href=&quot;https://www.eclipse.org/security/policy.php&quot;&gt;security policy&lt;/a&gt;, and is a CVE numbering authority. We have a long track record of taking security seriously. However, we are not going to be able to accomplish more without leadership. So, to that end, I am very pleased to announce that we have recently promoted Mikaël Barbero as our new Head of Security. Mikaël is well known to our community as having led our Common Build Infrastructure for many years, as well as having authored the best practices document referenced above. Mikaël will be providing leadership to our security initiatives, and will be working closely with our projects and our IT staff to steadily improve security across the Eclipse community. Some of this work will complement or leverage related efforts to improve our IP processes and provide software bill of materials (SBOMs) for all of our projects. We expect to make a number of program announcements over the coming months, so stay tuned. Please join me in welcoming Mikaël in his new role.&lt;/p&gt;</description>
	<pubDate>Thu, 12 May 2022 11:41:00 +0000</pubDate>
</item>
<item>
	<title>Wayne Beaton: Community Awards are Back</title>
	<guid isPermaLink="true">http://blog.waynebeaton.ca/posts/eclipsecon/community-awards-2022/</guid>
	<link>http://blog.waynebeaton.ca/posts/eclipsecon/community-awards-2022/</link>
	<description>The Eclipse Foundation community awards are returning once again! The Eclipse Foundation has a vibrant community of many dedicated individuals, who deserve to be recognized for their contributions.
To recognize our community members, we will be presenting awards for Top Committer, Top Newcomer Evangelist, Top Contributor, and Lifetime Achievement at EclipseCon 2022.
As these are community awards, we are asking the community to get involved by nominating someone they think is deserving of an award, and voting to select the winners.</description>
	<pubDate>Thu, 12 May 2022 00:00:00 +0000</pubDate>
</item>
<item>
	<title>Donald Raab: Comparing my Smalltalk and Eclipse Collections Wordle Kata Solutions</title>
	<guid isPermaLink="false">https://medium.com/p/4058ac7d8ca0</guid>
	<link>https://donraab.medium.com/comparing-my-smalltalk-and-eclipse-collections-wordle-kata-solutions-4058ac7d8ca0?source=rss-df39b86e9f04------2</link>
	<description>&lt;p&gt;Solving a problem with multiple languages and libraries can sometimes bring new insights.&lt;/p&gt;&lt;figure&gt;&lt;img alt=&quot;&quot; src=&quot;https://cdn-images-1.medium.com/max/1023/1*EMuK2EKpoLAQljhIAvJuLw.png&quot; /&gt;&lt;/figure&gt;&lt;h3&gt;Challenge Yourself and Others to Learn&lt;/h3&gt;&lt;p&gt;I accepted a JLDD (Jet Lag Driven Development) challenge recently to implement a Wordle Checker Kata in Java. My friend &lt;a href=&quot;https://medium.com/u/18673d5e2e01&quot;&gt;José Paumard&lt;/a&gt; sent me this challenge and I set out to solve it using my favorite Java collections framework — &lt;a href=&quot;https://github.com/eclipse/eclipse-collections&quot;&gt;Eclipse Collections&lt;/a&gt;. I wrote a blog about the challenge and my Java / Eclipse Collections solution.&lt;/p&gt;&lt;p&gt;&lt;a href=&quot;https://medium.com/oracledevs/a-wordle-jldd-kata-challenge-b6fb1c89d8eb&quot;&gt;A Wordle JLDD Kata Challenge&lt;/a&gt;&lt;/p&gt;&lt;p&gt;José then published his response in a great JEP Café tutorial video which he tweeted about.&lt;/p&gt;&lt;blockquote class=&quot;twitter-tweet&quot;&gt;&lt;p&gt; — &lt;a href=&quot;https://twitter.com/JosePaumard/status/1496168337650470914&quot;&gt;@JosePaumard&lt;/a&gt;&lt;/p&gt;&lt;/blockquote&gt;&lt;p&gt;I really enjoyed the video and learned an approach to solving this problem using pattern matching that I wouldn’t have thought of on my own.&lt;/p&gt;&lt;p&gt;I had come up with three slight variations on the same solution using Java with Eclipse Collections, and thought it might be interesting to try and build a solution using Pharo Smalltalk. So of course I built one, and tweeted about it.&lt;/p&gt;&lt;blockquote class=&quot;twitter-tweet&quot;&gt;&lt;p&gt; — &lt;a href=&quot;https://twitter.com/TheDonRaab/status/1496281456137678860&quot;&gt;@TheDonRaab&lt;/a&gt;&lt;/p&gt;&lt;/blockquote&gt;&lt;p&gt;Smalltalkers will hopefully recognize the emoji picture I used. It is the basic syntax of a lambda in Smalltalk — [|]. Parameters go on the left side of the pipe, and statements/expressions go on the right.&lt;/p&gt;&lt;p&gt;A few days after posting this, I posted a slight variation on the Smalltalk solution. I have included both Smalltalk solutions in the blog along with three Java / Eclipse Collections solutions.&lt;/p&gt;&lt;h3&gt;My Smalltalk Solutions&lt;/h3&gt;&lt;p&gt;I used Pharo 8.0 to implement my Smalltalk solution. First, I wrote the set of test assertions in a WordleTest class. Each assertion creates an instance of a Wordle class with a hidden word, and then calls a method named guess: which will output the expected result of the two words matched.&lt;/p&gt;&lt;figure&gt;&lt;img alt=&quot;SUnit Test assertions for the Smalltalk version of the Wordle Checker Kata&quot; src=&quot;https://cdn-images-1.medium.com/max/936/1*WrT7V4dgX01H0EMsFBfghw.png&quot; /&gt;&lt;figcaption&gt;SUnit Test assertions for the Smalltalk version of the Wordle Checker Kata&lt;/figcaption&gt;&lt;/figure&gt;&lt;p&gt;I created a Wordle class with an instance variable named hidden, and then added a method named guess: which takes a String parameter.&lt;/p&gt;&lt;figure&gt;&lt;img alt=&quot;&quot; src=&quot;https://cdn-images-1.medium.com/max/819/1*O1KLm6u4apRgELKABjhQ-Q.png&quot; /&gt;&lt;/figure&gt;&lt;p&gt;As you read my Smalltalk solutions, I would note the following. Smalltalk has a very simple and powerful programming paradigm which leads to a very minimal syntax with only five reserved words (true, false, nil, self, super) in the language. There are no control statements (if, for, while) in Smalltalk , and everything is accomplished by sending messages to objects. The equivalent of if statements, for loops, while loops, etc. in other languages are accomplished by sending messages to different objects. Much of this is accomplished by passing lambdas around to methods as parameters, or calling appropriate methods on lambdas.&lt;/p&gt;&lt;h4&gt;Smalltalk Solution #1&lt;/h4&gt;&lt;p&gt;I wrote my first Smalltalk solution for guess: using with:do: and with:collect: methods. This solution passes all of the tests above.&lt;/p&gt;&lt;figure&gt;&lt;img alt=&quot;Smalltalk implementation of the guess method on a Wordle class&quot; src=&quot;https://cdn-images-1.medium.com/max/1024/1*ZJO4LkbZTcFhJ3EPZ20z2A.png&quot; /&gt;&lt;figcaption&gt;Smalltalk implementation of the guess method on a Wordle class&lt;/figcaption&gt;&lt;/figure&gt;&lt;p&gt;The with:do: and with:collect: methods are available on the SequenceableCollection class in Smalltalk. In Smalltalk, a String is a SequenceableCollection. The following is a view of the Smalltalk Collection hierarchy.&lt;/p&gt;&lt;figure&gt;&lt;img alt=&quot;&quot; src=&quot;https://cdn-images-1.medium.com/max/1024/1*BloF-IiQVMxYbUU_dUERQg.png&quot; /&gt;&lt;figcaption&gt;Smalltalk Collection hierarchy&lt;/figcaption&gt;&lt;/figure&gt;&lt;p&gt;The method named with:do: lets you iterate over two String instances at the same time. The first argument passed is the the String that you want to iterate over with this String, and the second argument is a two argument lambda which doesn’t return anything (equivalent of a Procedure2 or BiConsumer in Java). This let me compare letters at the same index, exclude all of those that were equal and add the remaining letters to the Bag named remaining, which I initialized on the first line of the method. For anyone unfamiliar with the Bag data structure, a Bag is an &lt;em&gt;unordered&lt;/em&gt; collection that allows &lt;em&gt;duplicates&lt;/em&gt;. &lt;a href=&quot;https://medium.com/u/4285d8a2ca86&quot;&gt;Nikhil Nanivadekar&lt;/a&gt; &lt;a href=&quot;https://medium.com/oracledevs/bag-the-counter-2689e901aadb&quot;&gt;wrote a blog about the Bag data structure in Eclipse Collections&lt;/a&gt; which explains how it is implemented.&lt;/p&gt;&lt;p&gt;The second method, with:collect:, is similar to with:do: in that it iterates over both String instances together. The difference is that the two argument lambda that is passed as the second argument is used as a Function2 (a two argument Function or BiFunction in Java) to transform the characters to a new String. The transformation will result in either an uppercase letter, a lowercase letter or a “.” being returned for each combination of letters.&lt;/p&gt;&lt;p&gt;The ifTrue:ifFalse: method is a method on the Boolean class in Smalltalk and is overridden by the True and False subclasses. The method takes two lambdas as arguments. Depending on whether the Boolean is true or false, one of the two lambdas will be evaluated. The = method tests for equality and will return true or false. The literal true is the single instance of the class True , and false is an instance of False. I always thought it was kind of clever how Smalltalk implemented if control flow logic without using statements.&lt;/p&gt;&lt;p&gt;Finally, the remove:ifAbsent: method is available on most Collection classes in Smalltalk, and in this instance I am calling this method on a Bag. The result of the method is to return the object that is removed, or if the object is not in the collection, evaluate and return the result of the lambda.&lt;/p&gt;&lt;h4&gt;Smalltalk Solution #2&lt;/h4&gt;&lt;p&gt;For the second Smalltalk solution, I had hoped to find a method named with:reject:, but unfortunately, no such method exists today. I could have added the myself, but instead I decided to use a method that was already implemented. I used withIndexSelect: as a somewhat more awkward alternative to with:reject: but at least more terse alternative to using with:do:. I also formatted the code for with:collect: using the recommended auto-formatting in Pharo. It should make it easier to read and is a good way to break up the ifTrue:ifFalse: message send with the nested lambdas.&lt;/p&gt;&lt;figure&gt;&lt;img alt=&quot;&quot; src=&quot;https://cdn-images-1.medium.com/max/1024/1*FwRI3JiDancDp9wxaBL8DA.png&quot; /&gt;&lt;figcaption&gt;Smalltalk implementation of the guessWithIndex method on a Wordle class&lt;/figcaption&gt;&lt;/figure&gt;&lt;p&gt;The withIndexSelect: method is passed each character in the hidden String along with its corresponding index in the String. Indexes in Smalltalk are one based, so start at 1, not 0. This can’t be seen in this particular code example, but I think it’s an interesting difference between Smalltalk and Java. I look up the character at the same index position in the guess String using the at: method. Because I am using select: (inclusive filter) and not reject:(exclusive filter), I have to negate the comparison. I use ~= to compare the two letters, which translates to “not equal” in Smalltalk. Finally, I convert the resulting String instance from the call to withIndexSelect: to a mutable Bag. The rest of the solution is identical to my first Smalltalk solution.&lt;/p&gt;&lt;h4&gt;Update: May 10, 2022&lt;/h4&gt;&lt;p&gt;I upgraded my Pharo IDE to version 10.0. I also refactored my test cases to use a shared data set. This reduced a lot of duplication, and made the test cases much more pleasant to read.&lt;/p&gt;&lt;p&gt;I put the shared test data in a method named hiddenGuessExpectedData.&lt;/p&gt;&lt;figure&gt;&lt;img alt=&quot;&quot; src=&quot;https://cdn-images-1.medium.com/max/1024/1*pTzj3ZZCsswiB9-nqZKqyA.png&quot; /&gt;&lt;figcaption&gt;Two dimensional array containing the test data and expected results&lt;/figcaption&gt;&lt;/figure&gt;&lt;p&gt;I renamed the test methods to testGuess and testGuessWithIndexSelect.&lt;/p&gt;&lt;figure&gt;&lt;img alt=&quot;&quot; src=&quot;https://cdn-images-1.medium.com/max/1024/1*a7sI-9PBJsj0hEboBM6G9g.png&quot; /&gt;&lt;figcaption&gt;The testGuess method&lt;/figcaption&gt;&lt;/figure&gt;&lt;figure&gt;&lt;img alt=&quot;&quot; src=&quot;https://cdn-images-1.medium.com/max/1024/1*k6zXtAdHlbRFYsqFwkZrWA.png&quot; /&gt;&lt;figcaption&gt;The testGuessWithIndexSelect method&lt;/figcaption&gt;&lt;/figure&gt;&lt;p&gt;A neat side effect of renaming the test methods to better match the name of the methods on the class, is the class now displays green spheres next to each method and allow you to run the tests for the methods in the class itself.&lt;/p&gt;&lt;figure&gt;&lt;img alt=&quot;&quot; src=&quot;https://cdn-images-1.medium.com/max/1024/1*6oRxm045qlwLLYfyhtK09w.png&quot; /&gt;&lt;figcaption&gt;Running tests for methods from the domain class&lt;/figcaption&gt;&lt;/figure&gt;&lt;h3&gt;My Eclipse Collections Solutions&lt;/h3&gt;&lt;p&gt;All of my Java solutions used features of the &lt;a href=&quot;https://github.com/eclipse/eclipse-collections&quot;&gt;Eclipse Collections&lt;/a&gt; library. All three solutions used Strings.asChars(string) to provide access to the primitive collection API. In Eclipse Collections, this static method returns a CharAdapter instance wrapping the String.&lt;/p&gt;&lt;p&gt;Two of the three Eclipse Collections solutions use methods that end in WithIndex. The third solution uses a method named zipChar which allows two primitive collections to be zipped together into char pairs. The basic strategy is pretty much the same between my three solutions, with minor differences in implementation.&lt;/p&gt;&lt;ul&gt;&lt;li&gt;Create a Bag of characters that do not have direct positional matches between both String instances (hidden and guess)&lt;/li&gt;&lt;li&gt;Collect up one of three possible states for each character as a result String. Convert exact positional letter matches to uppercase, letter match in different position to lowercase, and no letter match to a “.”&lt;/li&gt;&lt;/ul&gt;&lt;h4&gt;Eclipse Collections Solution # 1&lt;/h4&gt;&lt;p&gt;The first solution I wrote using injectIntoWithIndex and collectWithIndex. I wrote the original &lt;a href=&quot;https://medium.com/oracledevs/a-wordle-jldd-kata-challenge-b6fb1c89d8eb?source=friends_link&amp;amp;sk=0a8b6f949515cdc36fe7a7fff24097c6&quot;&gt;Wordle JLDD Kata Challenge blog&lt;/a&gt; with this solution included. You can read the blog for more details on the solution.&lt;/p&gt;&lt;figure&gt;&lt;img alt=&quot;&quot; src=&quot;https://cdn-images-1.medium.com/max/1024/1*6HPj60Y4SMST8PLrUnOwPw.png&quot; /&gt;&lt;figcaption&gt;Eclipse Collections solution using injectIntoWithIndex and collectWithIndex&lt;/figcaption&gt;&lt;/figure&gt;&lt;p&gt;The thing that bothered me most about this solution is that Eclipse Collections did not yet have rejectWithIndex available on primitive collections. The solution using injectIntoWithIndex is really implementing the rejectWithIndex pattern.&lt;/p&gt;&lt;h4&gt;Eclipse Collections Solution #2&lt;/h4&gt;&lt;p&gt;I have recently contributed selectWithIndex and rejectWithIndex methods to primitive collections in Eclipse Collections. The same methods existed on the object collection API in Eclipse Collections since the &lt;a href=&quot;https://donraab.medium.com/eclipse-collections-11-0-released-d14df63f5d1d?source=friends_link&amp;amp;sk=74bad1fcf0f384fba241041c8383502b&quot;&gt;11.0 release&lt;/a&gt;. I used rejectWithIndex in my second solution, along with the collectWithIndex approach used in Eclipse Collections Solution #1.&lt;/p&gt;&lt;figure&gt;&lt;img alt=&quot;&quot; src=&quot;https://cdn-images-1.medium.com/max/1024/1*C4hbv9HNLiBlD-rvWhHDLA.png&quot; /&gt;&lt;figcaption&gt;Eclipse Collections solution using rejectWithIndex and collectWithIndex&lt;/figcaption&gt;&lt;/figure&gt;&lt;p&gt;The rejectWithIndex method here takes a target collection to store the results in.&lt;/p&gt;&lt;h4&gt;Eclipse Collections Solution #3&lt;/h4&gt;&lt;p&gt;My third Eclipse Collections solution using zipChar and collectChar was inspired by an alternative zipChar solution written by &lt;a href=&quot;https://medium.com/u/7db07b72520d&quot;&gt;Vladimir Zakharov&lt;/a&gt;.&lt;/p&gt;&lt;figure&gt;&lt;img alt=&quot;&quot; src=&quot;https://cdn-images-1.medium.com/max/1024/1*eP6tmp5O_3Cfr0yYljkU6w.png&quot; /&gt;&lt;/figure&gt;&lt;p&gt;The method zipChar creates a List of character pairs between both String instances. I reject the exact positional matches between char pairs and collect those char values into a MutableCharBag. Then I collect char values into a String based on the algorithm described above.&lt;/p&gt;&lt;h3&gt;From Wordle Kata Solutions to EC Integration Test&lt;/h3&gt;&lt;p&gt;The Eclipse Collections Wordle Kata solutions I came up with are good examples of using some of the String iteration patterns available in the library. Because I am leveraging multiple String iteration patterns, I thought it made sense to turn the kata solutions into an integration level test for Eclipse Collections. I committed a new WordleTest class into Eclipse Collections along with my contribution of the primitive versions of selectWithIndex and rejectWithIndex. Below is the source code for the test.&lt;/p&gt;&lt;p&gt;&lt;a href=&quot;https://github.com/eclipse/eclipse-collections/blob/master/unit-tests/src/test/java/org/eclipse/collections/impl/WordleTest.java&quot;&gt;eclipse-collections/WordleTest.java at master · eclipse/eclipse-collections&lt;/a&gt;&lt;/p&gt;&lt;h3&gt;Comparing the solutions&lt;/h3&gt;&lt;p&gt;Here is a visualization of the intersection and set of differences between the methods available in Smalltalk and Eclipse Collections to solve this particular kata challenge.&lt;/p&gt;&lt;figure&gt;&lt;img alt=&quot;&quot; src=&quot;https://cdn-images-1.medium.com/max/689/1*EHwssD0En1cFZDSc7SpwiA.png&quot; /&gt;&lt;figcaption&gt;Intersection and Differences between Smalltalk and Eclipse Collections methods&lt;/figcaption&gt;&lt;/figure&gt;&lt;p&gt;I quite liked the with:do: and with:collect: methods in Smalltalk. I would have preferred to have a with:reject: method for this particular use case. While I could have added this method on my own to SequenceableCollection, it would be nice if it was part of the standard library. However, I doubt that this particular use case will be incentive enough to have it added. The following are the methods using with: as a prefix that are available on SequenceableCollection.&lt;/p&gt;&lt;figure&gt;&lt;img alt=&quot;&quot; src=&quot;https://cdn-images-1.medium.com/max/856/1*P569Jf8bSMalp3jEhY6jAQ.png&quot; /&gt;&lt;/figure&gt;&lt;p&gt;It was interesting to see that there is a withIndexSelect: method in Smalltalk which is a slight difference in name to the equivalent of the selectWithIndex method in Eclipse Collections. There is no equivalent of rejectWithIndex, which is my preference in this use case. The methods collectWithIndex: and withIndexCollect: both exist in Pharo Smalltalk and are synonyms. It appears the naming preference is now in favor of withIndex as a prefix for these methods.&lt;/p&gt;&lt;figure&gt;&lt;img alt=&quot;&quot; src=&quot;https://cdn-images-1.medium.com/max/856/1*e9Ncv8_ZsAuX-eKfkTdozQ.png&quot; /&gt;&lt;figcaption&gt;The preference for withIndexCollect: over collectWithIndex: in Pharo Smalltalk&lt;/figcaption&gt;&lt;/figure&gt;&lt;p&gt;The method zipChar in Eclipse Collections has no equivalent in Pharo Smalltalk today. There is also no equivalent of asLazy either. Most iteration methods on the Smalltalk Collection classes are eager.&lt;/p&gt;&lt;p&gt;In terms of elegance, I think the with:do and with:collect: methods worked the best for this use case. Again, it would have been slightly simpler and clearer if there was a with:reject: method.&lt;/p&gt;&lt;p&gt;In terms of flexibility, I think the withIndex solutions are better than both the other solutions. Since you have the index, you can do whatever you need with it. For example, this would allow you to iterate over as many collections simultaneously as you need.&lt;/p&gt;&lt;p&gt;In terms of fluency and ease of writing, I really liked the asLazy plus zipChar solution which could then just use reject, collectChar and toBag.&lt;/p&gt;&lt;p&gt;Here’s a link to the tweet where &lt;a href=&quot;https://medium.com/u/7db07b72520d&quot;&gt;Vladimir Zakharov&lt;/a&gt; shared his zipChar solution using Eclipse Collections.&lt;/p&gt;&lt;blockquote class=&quot;twitter-tweet&quot;&gt;&lt;p&gt; — &lt;a href=&quot;https://twitter.com/zakhav/status/1493438380159426566&quot;&gt;@zakhav&lt;/a&gt;&lt;/p&gt;&lt;/blockquote&gt;&lt;h3&gt;Summary&lt;/h3&gt;&lt;p&gt;Learning multiple programming languages and libraries and using them to solve various coding katas can help you improve as a programmer. I think it’s interesting to see how languages and libraries compare and how they evolve over time. I don’t recall the methods I used in Pharo Smalltalk being available in VisualAge for Smalltalk when I programmed in it in the 1990s. This is a good sign, as it means the language and core libraries are still evolving. Similarly, the Eclipse Collections library continues to evolve as Java does, and new methods like selectWithIndex and rejectWithIndex now available on both object and primitive collections are a good example of this.&lt;/p&gt;&lt;p&gt;Thank you for reading! I hope you enjoyed this Wordle JLDD Kata Challenge comparison with Smalltalk and Eclipse Collections.&lt;/p&gt;&lt;p&gt;&lt;em&gt;I am a Project Lead and Committer for the &lt;/em&gt;&lt;a href=&quot;https://github.com/eclipse/eclipse-collections&quot;&gt;&lt;em&gt;Eclipse Collections&lt;/em&gt;&lt;/a&gt;&lt;em&gt; OSS project at the &lt;/em&gt;&lt;a href=&quot;https://projects.eclipse.org/projects/technology.collections&quot;&gt;&lt;em&gt;Eclipse Foundation&lt;/em&gt;&lt;/a&gt;&lt;em&gt;. &lt;/em&gt;&lt;a href=&quot;https://github.com/eclipse/eclipse-collections&quot;&gt;&lt;em&gt;Eclipse Collections&lt;/em&gt;&lt;/a&gt;&lt;em&gt; is open for &lt;/em&gt;&lt;a href=&quot;https://github.com/eclipse/eclipse-collections/blob/master/CONTRIBUTING.md&quot;&gt;&lt;em&gt;contributions&lt;/em&gt;&lt;/a&gt;&lt;em&gt;. If you like the library, you can let us know by starring it on GitHub.&lt;/em&gt;&lt;/p&gt;&lt;img alt=&quot;&quot; height=&quot;1&quot; src=&quot;https://medium.com/_/stat?event=post.clientViewed&amp;amp;referrerSource=full_rss&amp;amp;postId=4058ac7d8ca0&quot; width=&quot;1&quot; /&gt;</description>
	<pubDate>Tue, 10 May 2022 06:17:50 +0000</pubDate>
</item>
<item>
	<title>John Kellerman: Eclipse Cloud DevTools Digest - April, 2022</title>
	<guid isPermaLink="false">7159 at https://blogs.eclipse.org</guid>
	<link>https://blogs.eclipse.org/post/john-kellerman/eclipse-cloud-devtools-digest-april-2022</link>
	<description>&lt;div class=&quot;field field-name-body field-type-text-with-summary field-label-hidden&quot;&gt;&lt;div class=&quot;field-items&quot;&gt;&lt;div class=&quot;field-item even&quot;&gt;&lt;p&gt;Eclipse Cloud Dev Tools Working Group happenings for April, 2022; Arduino, Theia, and EclipseCon 2022&lt;/p&gt;

&lt;h3&gt;Eclipse Theia is the next generation of Eclipse!&lt;/h3&gt;

&lt;p&gt;In two articles on &lt;a href=&quot;http://eclipsesource.com/blogs/2022/03/16/eclipse-theia-is-the-next-generation-eclipse-rcp/&quot;&gt;March 16&lt;/a&gt; and &lt;a href=&quot;http://eclipsesource.com/blogs/2022/03/09/eclipse-theia-is-the-next-generation-eclipse-platform-for-ides-and-tools/&quot;&gt;March 23&lt;/a&gt;, &lt;a class=&quot;url&quot; href=&quot;https://eclipsesource.com/blogs/author/helming_koegel/&quot;&gt;Jonas, Maximilian &amp;amp; Philip&lt;/a&gt; take a close look at Eclipse Theia and its modern web-based technology stack. They make a compelling case fot it to be a worthy  successor of both Eclipse desktop and Eclipse RCP. Mike Milinkovich, in his &lt;a href=&quot;https://eclipse-foundation.blog/2022/04/19/eclipse-theia-is-the-next-generation-of-eclipse/&quot;&gt;blog&lt;/a&gt; in April joined the discussion and reached a similar conclusion&lt;/p&gt;

&lt;h3&gt;EclipseCon 2022 Call for Proposals&lt;/h3&gt;

&lt;p&gt;We are back in person in for EclipseCon 2022. &lt;a href=&quot;https://www.eclipsecon.org/2022/cfp&quot;&gt;Call for proposals &lt;/a&gt;in now open. We'd love to hear from you. Mark your calendars for this October and hope to see you in Ludwigsburg.&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;https://www.eclipsecon.org/2022&quot;&gt;&lt;img alt=&quot;&quot; class=&quot;center-block&quot; src=&quot;https://blogs.eclipse.org/sites/default/files/custom_uploads/Screen%20Shot%202022-05-04%20at%202.47.50%20PM.png&quot; style=&quot;width: 480px; height: 215px;&quot; /&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h3&gt;Eclipse Cloud DevTools Contributor Award: Improving the VS Code Integration of Eclipse GLSP&lt;/h3&gt;

&lt;p&gt;The &lt;a href=&quot;https://blogs.eclipse.org/post/john-kellerman/eclipse-cloud-devtools-contributor-award-improving-vs-code-integration-eclipse&quot;&gt;April 2022 Eclipse Cloud DevTools contributor award &lt;/a&gt;goes to Luca Forstner for his work towards improving the VS Code integration of Eclipse GLSP. Luca Forstner, as part of his &lt;a href=&quot;https://model-engineering.info/publications/theses/thesis-forstner.pdf&quot;&gt;bachelor’s thesis&lt;/a&gt;, significantly contributed to the GLSP integration in VS Code. Luca's contribution is a great example of how academic work and an open source ecosystem mutually benefit from each other.&lt;/p&gt;

&lt;h3&gt;Cloud IDE Days 2022&lt;/h3&gt;

&lt;p&gt;&lt;img alt=&quot;&quot; class=&quot;center-block&quot; src=&quot;https://blogs.eclipse.org/sites/default/files/custom_uploads/Screen%20Shot%202022-05-04%20at%202.55.22%20PM.png&quot; style=&quot;width: 480px; height: 146px;&quot; /&gt;&lt;/p&gt;

&lt;p&gt;What a great two days! Close to 300 registrations this year, up from 215 last year. Thanks to all who participated this year, speakers and attendees. If you missed the sessions, stay tuned, they're be available soon on the &lt;a href=&quot;https://www.youtube.com/user/EclipseFdn&quot; target=&quot;_blank&quot;&gt;Eclipse Foundation YouTube channel&lt;/a&gt;.&lt;/p&gt;

&lt;h3&gt;Theia Adopter Story: The new Arduino IDE 2.0&lt;/h3&gt;

&lt;p&gt;The new Arduino IDE 2.0 is based on &lt;a href=&quot;https://theia-ide.org/&quot;&gt;Eclipse Theia&lt;/a&gt;. In an earlier &lt;a href=&quot;https://blogs.eclipse.org/post/john-kellerman/theia-adopter-story-new-arduino-ide-20&quot;&gt;article&lt;/a&gt;, we take a closer look at the new Arduino IDE and its relationship to the Theia ecosystem. It is a great example of how the flexibility and adaptability of Theia enables building a modern tool with a truly great user experience.&lt;/p&gt;

&lt;p&gt;&lt;img alt=&quot;&quot; class=&quot;center-block&quot; src=&quot;https://blogs.eclipse.org/sites/default/files/custom_uploads/Arduino-IDE.gif&quot; style=&quot;width: 480px; height: 215px;&quot; /&gt;&lt;/p&gt;

&lt;h3&gt;Eclipse Theia 1.24 Release: News and Noteworthy&lt;/h3&gt;

&lt;p&gt;Release 1.24 of Eclipse Theia is out.  &lt;a class=&quot;url&quot; href=&quot;https://eclipsesource.com/blogs/author/helming_koegel/&quot;&gt;Jonas, Maximilian &amp;amp; Philip&lt;/a&gt; review what's &lt;a href=&quot;http://eclipsesource.com/blogs/2022/04/14/eclipse-theia-1-24-release-news-and-noteworthy/&quot;&gt;new and noteworthy&lt;/a&gt;, including a major upgrade to the Monaco code editor.&lt;/p&gt;

&lt;h3&gt;Eclipse Cloud DevTools Projects&lt;/h3&gt;

&lt;p&gt;&lt;img class=&quot;center-block&quot; src=&quot;https://lh4.googleusercontent.com/NF_blJTT1qIp49qCS68YUefG-Q6tjbtdanHV3cngR609-XKN63n6yIYFdcIhrPseyCPqoff4Qyu2Gakb3KQ1UwP9nxwbr4k0HS9DOOnntAAvABwDDU_wKNTr6PTriImESgtrB8J3&quot; style=&quot;height: 117px; width: 371px;&quot; /&gt;&lt;/p&gt;

&lt;p&gt;Explore the &lt;a href=&quot;https://ecdtools.eclipse.org/projects/&quot;&gt;Eclipse Cloud DevTools ecosystem&lt;/a&gt;! Check out our projects page to find out more about open source innovation for cloud IDEs,extension marketplaces, frameworks and more.&lt;/p&gt;

&lt;h3&gt;Getting Listed on the Cloud DevTools Blog&lt;/h3&gt;

&lt;p&gt;If you are working with, or on, anything in the Cloud DevTools space, &lt;a href=&quot;https://blogs.eclipse.org/post/brian-king/getting-listed-cloud-devtools-blog&quot;&gt;learn how to get your writings posted&lt;/a&gt; in our &lt;a href=&quot;https://ecdtools.eclipse.org/resources/blogs/&quot;&gt;blog section&lt;/a&gt;.&lt;/p&gt;
&lt;/div&gt;&lt;/div&gt;&lt;/div&gt;</description>
	<pubDate>Mon, 09 May 2022 19:40:56 +0000</pubDate>
</item>
<item>
	<title>Jonas, Maximilian and Philip: Eclipse Theia 1.25 Release: News and Noteworthy</title>
	<guid isPermaLink="false">https://eclipsesource.com/?p=45979</guid>
	<link>https://eclipsesource.com/blogs/2022/05/09/eclipse-theia-1-25-release-news-and-noteworthy/</link>
	<description>&lt;p&gt;We are happy to announce the Eclipse Theia 1.25 release! This release contains 48 merged pull requests and we welcome eight...&lt;/p&gt;
&lt;p&gt;The post &lt;a href=&quot;https://eclipsesource.com/blogs/2022/05/09/eclipse-theia-1-25-release-news-and-noteworthy/&quot; rel=&quot;nofollow&quot;&gt;Eclipse Theia 1.25 Release: News and Noteworthy&lt;/a&gt; appeared first on &lt;a href=&quot;https://eclipsesource.com&quot; rel=&quot;nofollow&quot;&gt;EclipseSource&lt;/a&gt;.&lt;/p&gt;</description>
	<pubDate>Mon, 09 May 2022 07:39:48 +0000</pubDate>
</item>
<item>
	<title>Tanja Obradovic: Getting really close to Jakarta EE 10!</title>
	<guid isPermaLink="false">7156 at https://blogs.eclipse.org</guid>
	<link>https://blogs.eclipse.org/post/tanja-obradovic/getting-really-close-jakarta-ee-10</link>
	<description>&lt;div class=&quot;field field-name-body field-type-text-with-summary field-label-hidden&quot;&gt;&lt;div class=&quot;field-items&quot;&gt;&lt;div class=&quot;field-item even&quot;&gt;&lt;p&gt;&lt;span style=&quot;font-family: Arial, Helvetica, sans-serif; background-color: rgb(249, 249, 249); white-space: pre-wrap;&quot;&gt;&lt;span style=&quot;color: #000000;&quot;&gt;The Jakarta EE community teamwork is amazing!  They are completely focused on &lt;/span&gt;&lt;/span&gt;&lt;a href=&quot;https://eclipse-ee4j.github.io/jakartaee-platform/jakartaee10/JakartaEE10ReleasePlan&quot; style=&quot;font-family: Arial, Helvetica, sans-serif; background-color: rgb(249, 249, 249);&quot;&gt;&lt;span style=&quot;white-space: pre-wrap;&quot;&gt;&lt;span style=&quot;color: #1155cc;&quot;&gt;&lt;span&gt;&lt;span&gt;Jakarta EE 10 release plan&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/a&gt;&lt;span style=&quot;font-family: Arial, Helvetica, sans-serif; background-color: rgb(249, 249, 249); white-space: pre-wrap;&quot;&gt;&lt;span style=&quot;color: #000000;&quot;&gt; and following the &lt;/span&gt;&lt;/span&gt;&lt;a href=&quot;https://jakarta.ee/about/jesp/&quot; style=&quot;font-family: Arial, Helvetica, sans-serif; background-color: rgb(249, 249, 249);&quot;&gt;&lt;span style=&quot;white-space: pre-wrap;&quot;&gt;&lt;span style=&quot;color: #1155cc;&quot;&gt;&lt;span&gt;&lt;span&gt;Jakarta EE Specification Process&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/a&gt;&lt;span style=&quot;font-family: Arial, Helvetica, sans-serif; background-color: rgb(249, 249, 249); white-space: pre-wrap;&quot;&gt;&lt;span style=&quot;color: #000000;&quot;&gt; we have more progress on the individual specifications.&lt;br /&gt;
The Release Review is now completed for the following specifications:&lt;/span&gt;&lt;/span&gt;&lt;/p&gt;

&lt;ul&gt;
	&lt;li style=&quot;line-height: 1.38; background-color: rgb(249, 249, 249); padding: 0pt 0pt 8pt;&quot;&gt;&lt;span style=&quot;font-family: Arial,Helvetica,sans-serif;&quot;&gt;&lt;span style=&quot;font-variant: normal; white-space: pre-wrap;&quot;&gt;&lt;span style=&quot;color: #000000;&quot;&gt;&lt;span style=&quot;font-weight: 400;&quot;&gt;&lt;span style=&quot;font-style: normal;&quot;&gt;&lt;span style=&quot;text-decoration: none;&quot;&gt;Jakarta Persistence 3.1 - &lt;a href=&quot;https://github.com/jakartaee/specifications/pull/442&quot;&gt;https://github.com/jakartaee/specifications/pull/442&lt;/a&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/li&gt;
	&lt;li style=&quot;line-height: 1.38; background-color: rgb(249, 249, 249); padding: 0pt 0pt 8pt;&quot;&gt;&lt;span style=&quot;font-family: Arial,Helvetica,sans-serif;&quot;&gt;&lt;span style=&quot;font-variant: normal; white-space: pre-wrap;&quot;&gt;&lt;span style=&quot;color: #000000;&quot;&gt;&lt;span style=&quot;font-weight: 400;&quot;&gt;&lt;span style=&quot;font-style: normal;&quot;&gt;&lt;span style=&quot;text-decoration: none;&quot;&gt;Jakarta Interceptors 2.1 - &lt;a href=&quot;https://github.com/jakartaee/specifications/pull/450&quot;&gt;https://github.com/jakartaee/specifications/pull/450&lt;/a&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/li&gt;
	&lt;li style=&quot;line-height: 1.38; background-color: rgb(249, 249, 249); padding: 0pt 0pt 8pt;&quot;&gt;&lt;span style=&quot;font-family: Arial,Helvetica,sans-serif;&quot;&gt;&lt;span style=&quot;font-variant: normal; white-space: pre-wrap;&quot;&gt;&lt;span style=&quot;color: #000000;&quot;&gt;&lt;span style=&quot;font-weight: 400;&quot;&gt;&lt;span style=&quot;font-style: normal;&quot;&gt;&lt;span style=&quot;text-decoration: none;&quot;&gt;Jakarta JSON Processing 2.1 - &lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;a href=&quot;https://github.com/jakartaee/specifications/pull/432&quot; style=&quot;text-decoration: none;&quot;&gt;&lt;span style=&quot;font-variant: normal; white-space: pre-wrap;&quot;&gt;&lt;span style=&quot;color: #1155cc;&quot;&gt;&lt;span style=&quot;font-weight: 400;&quot;&gt;&lt;span style=&quot;font-style: normal;&quot;&gt;&lt;span style=&quot;text-decoration: underline;&quot;&gt;&lt;span&gt;https://github.com/jakartaee/specifications/pull/432&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/a&gt;&lt;/span&gt;&lt;/li&gt;
	&lt;li style=&quot;line-height: 1.38; background-color: rgb(249, 249, 249); padding: 0pt 0pt 8pt;&quot;&gt;&lt;span style=&quot;font-family: Arial,Helvetica,sans-serif;&quot;&gt;&lt;span style=&quot;font-variant: normal; white-space: pre-wrap;&quot;&gt;&lt;span style=&quot;color: #000000;&quot;&gt;&lt;span style=&quot;font-weight: 400;&quot;&gt;&lt;span style=&quot;font-style: normal;&quot;&gt;&lt;span style=&quot;text-decoration: none;&quot;&gt;Jakarta XML Binding 4.0 - &lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;a href=&quot;https://github.com/jakartaee/specifications/pull/443&quot; style=&quot;text-decoration: none;&quot;&gt;&lt;span style=&quot;font-variant: normal; white-space: pre-wrap;&quot;&gt;&lt;span style=&quot;color: #1155cc;&quot;&gt;&lt;span style=&quot;font-weight: 400;&quot;&gt;&lt;span style=&quot;font-style: normal;&quot;&gt;&lt;span style=&quot;text-decoration: underline;&quot;&gt;&lt;span&gt;https://github.com/jakartaee/specifications/pull/443&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/a&gt;&lt;/span&gt;&lt;/li&gt;
	&lt;li style=&quot;line-height: 1.38; background-color: rgb(249, 249, 249); padding: 0pt 0pt 8pt;&quot;&gt;&lt;span style=&quot;font-family: Arial,Helvetica,sans-serif;&quot;&gt;&lt;span style=&quot;font-variant: normal; white-space: pre-wrap;&quot;&gt;&lt;span style=&quot;color: #000000;&quot;&gt;&lt;span style=&quot;font-weight: 400;&quot;&gt;&lt;span style=&quot;font-style: normal;&quot;&gt;&lt;span style=&quot;text-decoration: none;&quot;&gt;Jakarta CDI 4.0 - &lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;a href=&quot;https://github.com/jakartaee/specifications/pull/439&quot; style=&quot;text-decoration: none;&quot;&gt;&lt;span style=&quot;font-variant: normal; white-space: pre-wrap;&quot;&gt;&lt;span style=&quot;color: #1155cc;&quot;&gt;&lt;span style=&quot;font-weight: 400;&quot;&gt;&lt;span style=&quot;font-style: normal;&quot;&gt;&lt;span style=&quot;text-decoration: underline;&quot;&gt;&lt;span&gt;https://github.com/jakartaee/specifications/pull/439&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/a&gt;&lt;/span&gt;&lt;/li&gt;
	&lt;li style=&quot;line-height: 1.38; background-color: rgb(249, 249, 249); padding: 0pt 0pt 8pt;&quot;&gt;&lt;span style=&quot;font-family: Arial,Helvetica,sans-serif;&quot;&gt;&lt;span style=&quot;font-variant: normal; white-space: pre-wrap;&quot;&gt;&lt;span style=&quot;color: #000000;&quot;&gt;&lt;span style=&quot;font-weight: 400;&quot;&gt;&lt;span style=&quot;font-style: normal;&quot;&gt;&lt;span style=&quot;text-decoration: none;&quot;&gt;Jakarta XML Web Services 4.0 - &lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;a href=&quot;https://github.com/jakartaee/specifications/pull/445&quot; style=&quot;text-decoration: none;&quot;&gt;&lt;span style=&quot;font-variant: normal; white-space: pre-wrap;&quot;&gt;&lt;span style=&quot;color: #1155cc;&quot;&gt;&lt;span style=&quot;font-weight: 400;&quot;&gt;&lt;span style=&quot;font-style: normal;&quot;&gt;&lt;span style=&quot;text-decoration: underline;&quot;&gt;&lt;span&gt;https://github.com/jakartaee/specifications/pull/445&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/a&gt;&lt;/span&gt;&lt;/li&gt;
	&lt;li style=&quot;line-height: 1.38; background-color: rgb(249, 249, 249); padding: 0pt 0pt 8pt;&quot;&gt;&lt;span style=&quot;font-family: Arial,Helvetica,sans-serif;&quot;&gt;&lt;span style=&quot;font-variant: normal; white-space: pre-wrap;&quot;&gt;&lt;span style=&quot;color: #000000;&quot;&gt;&lt;span style=&quot;font-weight: 400;&quot;&gt;&lt;span style=&quot;font-style: normal;&quot;&gt;&lt;span style=&quot;text-decoration: none;&quot;&gt;Jakarta RESTful Web Services 3.1 - &lt;a href=&quot;https://github.com/jakartaee/specifications/pull/430&quot;&gt;https://github.com/jakartaee/specifications/pull/430&lt;/a&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p style=&quot;line-height: 1.38; background-color: #f9f9f9; padding: 0pt 0pt 8pt 0pt;&quot;&gt;&lt;span style=&quot;font-family: Arial, Helvetica, sans-serif; background-color: rgb(255, 255, 255); white-space: pre-wrap;&quot;&gt;&lt;span style=&quot;color: #000000;&quot;&gt;Stay tuned for  more progress in the upcoming weeks or monitor&lt;/span&gt;&lt;/span&gt;&lt;a href=&quot;https://github.com/jakartaee/specifications/pulls?q=is%3Apr+is%3Aopen&quot; style=&quot;font-family: Arial, Helvetica, sans-serif; background-color: rgb(255, 255, 255);&quot;&gt;&lt;span style=&quot;white-space: pre-wrap;&quot;&gt;&lt;span style=&quot;color: #1155cc;&quot;&gt;&lt;span&gt;&lt;span&gt; progress on individual specifications release reviews&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/a&gt;&lt;span style=&quot;font-family: Arial, Helvetica, sans-serif; background-color: rgb(255, 255, 255); white-space: pre-wrap;&quot;&gt;&lt;span style=&quot;color: #000000;&quot;&gt;!&lt;/span&gt;&lt;/span&gt;&lt;br /&gt;
&lt;br /&gt;
Please see the other posts specifications with already completed Release Review:&lt;/p&gt;

&lt;ul&gt;
	&lt;li style=&quot;line-height: 1.38; background-color: rgb(249, 249, 249); padding: 0pt 0pt 8pt;&quot;&gt;&lt;a href=&quot;https://blogs.eclipse.org/post/tanja-obradovic/even-closer-jakarta-ee-10&quot;&gt;Even closer to Jakarta EE 10!&lt;/a&gt;&lt;/li&gt;
	&lt;li style=&quot;line-height: 1.38; background-color: rgb(249, 249, 249); padding: 0pt 0pt 8pt;&quot;&gt;&lt;a href=&quot;https://blogs.eclipse.org/post/tanja-obradovic/getting-closer-jakarta-ee-10-release&quot;&gt;Getting closer to the Jakarta EE 10 release!&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;&lt;/div&gt;&lt;/div&gt;</description>
	<pubDate>Wed, 27 Apr 2022 17:51:44 +0000</pubDate>
</item>
<item>
	<title>Donald Raab: Map vs. Bag</title>
	<guid isPermaLink="false">https://medium.com/p/f4120623a6e3</guid>
	<link>https://medium.com/javarevisited/map-vs-bag-f4120623a6e3?source=rss-df39b86e9f04------2</link>
	<description>&lt;p&gt;Discover a better way to count things in Java.&lt;/p&gt;&lt;figure&gt;&lt;img alt=&quot;&quot; src=&quot;https://cdn-images-1.medium.com/max/1024/0*G4tFfBtnfSIiCAwR&quot; /&gt;&lt;figcaption&gt;Photo by &lt;a href=&quot;https://unsplash.com/@crissyjarvis?utm_source=medium&amp;amp;utm_medium=referral&quot;&gt;Crissy Jarvis&lt;/a&gt; on &lt;a href=&quot;https://unsplash.com?utm_source=medium&amp;amp;utm_medium=referral&quot;&gt;Unsplash&lt;/a&gt;&lt;/figcaption&gt;&lt;/figure&gt;&lt;h3&gt;&lt;strong&gt;Using Map to count the beads on an abacus&lt;/strong&gt;&lt;/h3&gt;&lt;p&gt;Here’s a simple problem to solve using a Map. How can we count the number of beads tallied on an abacus by color? First, I will define an enum for Color.&lt;/p&gt;&lt;figure&gt;&lt;img alt=&quot;&quot; src=&quot;https://cdn-images-1.medium.com/max/537/1*eG8M8UE4BeaKAEs31b5ddg.png&quot; /&gt;&lt;figcaption&gt;Enum for different Color beads on an Abacus&lt;/figcaption&gt;&lt;/figure&gt;&lt;p&gt;Next, I will create a HashMap&amp;lt;Color, Integer&amp;gt; and use the merge method to add and subtract values for a specific colors. I will leave one color bead (Color.RED) out from the counting. Then I will assert the result of querying the Map for the counts of the colors using Map.get.&lt;/p&gt;&lt;figure&gt;&lt;img alt=&quot;&quot; src=&quot;https://cdn-images-1.medium.com/max/829/1*kihSHBf4OuDRpk5m9nRLbA.png&quot; /&gt;&lt;figcaption&gt;Using a Map as an abacus&lt;/figcaption&gt;&lt;/figure&gt;&lt;p&gt;I use the same merge operation for adding and subtracting. I use negative Integer values to subtract. I use the method reference Integer::sum for the BiFunction parameter the merge method takes to determine how to merge values. Note, that even though I am using primitive literal int values here, they are auto-boxed as Integer objects in the Map., and the Integer::sum call will result in more unboxing and boxing of Integer objects.&lt;/p&gt;&lt;p&gt;In the final assertion in the test, the call to get with the Color.RED instance returns null. I would have to explicitly set the value to 0 for it to come back as 0 when calling get. One way to address the null return problem with get, is to use getOrDefault instead. This will allow you to return a default value in the case that the key does not exist in the Map.&lt;/p&gt;&lt;figure&gt;&lt;img alt=&quot;&quot; src=&quot;https://cdn-images-1.medium.com/max/994/1*euerI9nic5IXPa7LMQFodA.png&quot; /&gt;&lt;figcaption&gt;Using a Map as an abacus, handling null cases using getOrDefault&lt;/figcaption&gt;&lt;/figure&gt;&lt;p&gt;The merge and getOrDefault methods were both added in Java 8, and are useful methods for developers to understand on Map.&lt;/p&gt;&lt;h3&gt;Using a primitive Map instead of a Map&lt;/h3&gt;&lt;p&gt;In &lt;a href=&quot;https://github.com/eclipse/eclipse-collections&quot;&gt;Eclipse Collections&lt;/a&gt;, there is support for primitive Maps. There is an ObjectIntMap type and corresponding implementation that can be used to count the beads. I will use a MutableObjectIntMap so I can mutate the map and create the implementation using the ObjectIntMaps factory class.&lt;/p&gt;&lt;figure&gt;&lt;img alt=&quot;&quot; src=&quot;https://cdn-images-1.medium.com/max/1016/1*8EDsarxqkz81eRRgRJPv4A.png&quot; /&gt;&lt;figcaption&gt;Using a MutableObjectIntMap as an abacus&lt;/figcaption&gt;&lt;/figure&gt;&lt;p&gt;A MutableObjectIntMap has an addToValue method that can be used to put a new value in the map, or add to an existing value in a map. The method getIfAbsent can be used to look up the values. The 0 value is an int, not an Integer object, and none of the calls to addToValue result in any boxing.&lt;/p&gt;&lt;p&gt;&lt;strong&gt;Note&lt;/strong&gt;: Eclipse Collections HashBag class leverages a MutableObjectIntMap.&lt;/p&gt;&lt;h3&gt;Using Bag to count the beads on an abacus&lt;/h3&gt;&lt;p&gt;So how would I solve this problem using a MutableBag from &lt;a href=&quot;https://github.com/eclipse/eclipse-collections&quot;&gt;Eclipse Collections&lt;/a&gt;? A MutableBag is a Collection, not a Map. It has add and remove methods which I can use to add single items. MutableBag also has addOccurrences and removeOccurrences methods which allow adding a specific number of items at once.&lt;/p&gt;&lt;figure&gt;&lt;img alt=&quot;&quot; src=&quot;https://cdn-images-1.medium.com/max/964/1*oiQ-OE9-Q8gmKfjfinrrqQ.png&quot; /&gt;&lt;figcaption&gt;Using a Bag as an abacus&lt;/figcaption&gt;&lt;/figure&gt;&lt;p&gt;The individually named methods on Bag are more intention revealing than the single method named merge for this use case. Notice that in the case of Color.RED, the Bag will return 0 from the call to occurrencesOf. Bag does not suffer from the null problem that Map.get does. If a value does not exist in the Bag, the occurrencesOf method always returns 0.&lt;/p&gt;&lt;h3&gt;More Information&lt;/h3&gt;&lt;p&gt;There are a few more blogs which provide more details on the Bag type and supporting methods like countBy in Eclipse Collections. The following blog was written by &lt;a href=&quot;https://medium.com/u/4285d8a2ca86&quot;&gt;Nikhil Nanivadekar&lt;/a&gt;. It describes many of the implementation details of the Bag type in Eclipse Collections, that can result in both memory and performance benefits.&lt;/p&gt;&lt;p&gt;&lt;a href=&quot;https://medium.com/oracledevs/bag-the-counter-2689e901aadb&quot;&gt;Bag — The Counter&lt;/a&gt;&lt;/p&gt;&lt;p&gt;I also wrote a separate blog describing the countBy method in Eclipse Collections which provides Bag as its return type.&lt;/p&gt;&lt;p&gt;&lt;a href=&quot;https://medium.com/oracledevs/ec-by-example-countby-a2d6411e95e1&quot;&gt;EC by Example: CountBy&lt;/a&gt;&lt;/p&gt;&lt;p&gt;I hope you enjoyed reading this blog and learned something useful about Map and Bag types in the process!&lt;/p&gt;&lt;p&gt;&lt;em&gt;I am a Project Lead and Committer for the &lt;/em&gt;&lt;a href=&quot;https://github.com/eclipse/eclipse-collections&quot;&gt;&lt;em&gt;Eclipse Collections&lt;/em&gt;&lt;/a&gt;&lt;em&gt; OSS project at the &lt;/em&gt;&lt;a href=&quot;https://projects.eclipse.org/projects/technology.collections&quot;&gt;&lt;em&gt;Eclipse Foundation&lt;/em&gt;&lt;/a&gt;&lt;em&gt;. &lt;/em&gt;&lt;a href=&quot;https://github.com/eclipse/eclipse-collections&quot;&gt;&lt;em&gt;Eclipse Collections&lt;/em&gt;&lt;/a&gt;&lt;em&gt; is open for &lt;/em&gt;&lt;a href=&quot;https://github.com/eclipse/eclipse-collections/blob/master/CONTRIBUTING.md&quot;&gt;&lt;em&gt;contributions&lt;/em&gt;&lt;/a&gt;&lt;em&gt;. If you like the library, you can let us know by starring it on GitHub.&lt;/em&gt;&lt;/p&gt;&lt;p&gt;Other &lt;strong&gt;Java Articles&lt;/strong&gt; you may like&lt;/p&gt;&lt;ul&gt;&lt;li&gt;&lt;a href=&quot;https://medium.com/javarevisited/the-java-programmer-roadmap-f9db163ef2c2&quot;&gt;The 2022 Java Programmer RoadMap&lt;/a&gt;&lt;/li&gt;&lt;li&gt;&lt;a href=&quot;https://medium.com/javarevisited/10-best-places-to-learn-java-online-for-free-ce5e713ab5b2&quot;&gt;10 Best Places to Learn Java Online for Free in 2022&lt;/a&gt;&lt;/li&gt;&lt;li&gt;&lt;a href=&quot;https://medium.com/javarevisited/13-topics-you-should-prepare-for-your-next-spring-boot-interview-5f2993a04ff5&quot;&gt;13 Topics You Should Prepare for Your Next Spring Boot Interview in 2022&lt;/a&gt;&lt;/li&gt;&lt;/ul&gt;&lt;img alt=&quot;&quot; height=&quot;1&quot; src=&quot;https://medium.com/_/stat?event=post.clientViewed&amp;amp;referrerSource=full_rss&amp;amp;postId=f4120623a6e3&quot; width=&quot;1&quot; /&gt;&lt;hr /&gt;&lt;p&gt;&lt;a href=&quot;https://medium.com/javarevisited/map-vs-bag-f4120623a6e3&quot;&gt;Map vs. Bag&lt;/a&gt; was originally published in &lt;a href=&quot;https://medium.com/javarevisited&quot;&gt;Javarevisited&lt;/a&gt; on Medium, where people are continuing the conversation by highlighting and responding to this story.&lt;/p&gt;</description>
	<pubDate>Wed, 27 Apr 2022 02:42:42 +0000</pubDate>
</item>
<item>
	<title>Mike Milinkovich: The Eclipse IDE Working Group Celebrates Its First Anniversary</title>
	<guid isPermaLink="false">http://eclipse-foundation.blog/?p=1675</guid>
	<link>https://eclipse-foundation.blog/2022/04/26/the-eclipse-ide-working-group-celebrates-its-first-anniversary/</link>
	<description>&lt;p&gt;Today we celebrate the one year anniversary of the &lt;a href=&quot;https://ide-wg.eclipse.org/&quot;&gt;Eclipse IDE Working Group&lt;/a&gt;. A year ago, the Eclipse Foundation launched this Working Group focused on the Eclipse IDE and the Eclipse Simultaneous Release (SimRel). We would like to share some of our successes since the launch of the Working Group in April 2021. &lt;/p&gt;



&lt;p&gt;&lt;strong&gt;Highlights&lt;/strong&gt;&lt;/p&gt;



&lt;ul&gt;&lt;li&gt;&lt;strong&gt;20 Years of the Eclipse IDE: &lt;/strong&gt;2021 was a momentous year for the Eclipse IDE, as we celebrated its&lt;a href=&quot;https://newsroom.eclipse.org/news/announcements/celebrating-eclipse-20&quot;&gt; 20 year anniversary&lt;/a&gt;!&lt;/li&gt;&lt;li&gt;&lt;strong&gt;Welcome Ed!&lt;/strong&gt; Ed Merks joined us as a SimRel Architect and Release Engineer. Ed’s first set of tasks included preparing PGP signing support for the 2022-06 release and mapping out the project dependencies.&lt;/li&gt;&lt;li&gt;&lt;strong&gt;Productive collaboration&lt;/strong&gt; Our collaboration with the Planning Council has been very effective. We have identified the top issues as outlined by the Planning Council and have a plan to address them.&lt;/li&gt;&lt;/ul&gt;



&lt;p&gt;&lt;strong&gt;PGP: A Community Success Story&lt;/strong&gt;&lt;/p&gt;



&lt;p&gt;A great community success story for the Eclipse IDE Working Group is the delivery of a fully-functional, secure&lt;a href=&quot;https://en.wikipedia.org/wiki/Pretty_Good_Privacy&quot;&gt; PGP&lt;/a&gt; implementation for Eclipse 4.23 (SimRel 2022-03). This enhancement augments Eclipse’s existing security support which is based on&lt;a href=&quot;https://en.wikipedia.org/wiki/JAR_(file_format)#Security&quot;&gt; jar signing&lt;/a&gt;. Jar signing has the significant drawback that artifacts originating from external dependencies must be modified in order to sign them, i.e., jar signatures are intrinsic to the artifact. In contrast, PGP signatures are extrinsic to the artifact and have long been used in Maven repositories to provide certification of origin. Eclipse’s PGP support facilitates significantly streamlined consumption of Maven-based artifacts by Eclipse projects, making it easier for our community to exploit and deliver the latest and greatest libraries with each quarterly simultaneous release.&lt;/p&gt;



&lt;p&gt;The initial proof-of-concept PGP implementation was contributed by Mickael Istria. In combination with Mickael’s on-going participation, along with Christoph Läubrich’s technical insights, the working group has helped to harden the PGP implementation to industrial-strength quality for the SimRel 2022-03 delivery. Even the existing support for jar signing has been improved, as users can now easily save trusted X.509 certificates to avoid repeated trust prompts as is typical with self-signed certificates.&lt;a href=&quot;https://gitlab.eclipse.org/eclipse-wg/ide-wg/ide-wg.eclipse.org/-/issues/11&quot;&gt; Issue 11&lt;/a&gt; provides a detailed track record of all the activities around PGP signing during the 2022-03 release cycle as well as additional background information.&lt;/p&gt;



&lt;p&gt;With this groundwork in place, our community as a whole can exploit PGP signing for broader adoption in the Eclipse 4.24 (SimRel 2022-06) delivery this coming June.&lt;/p&gt;



&lt;p&gt;&lt;strong&gt;Planning Council’s Top 3 Items&lt;/strong&gt;&lt;/p&gt;



&lt;p&gt;The Planning Council plays an important role in the Eclipse IDE WG. The&lt;a href=&quot;https://www.eclipse.org/org/workinggroups/eclipse-ide-charter.php#:~:text=The%20Planning%20Council%20is%20responsible%20for%20establishing%20a%20roadmap%20and%20coordinated%20release%20plan%20that%20balances%20the%20many%20competing%20requirements.%20The%20release%20plan%20describes%20the%20themes%20and%20priorities%20that%20focus%20these%20releases,%20and%20orchestrates%20the%20dependencies%20among%20project%20plans.&quot;&gt; Planning Council&lt;/a&gt; can be seen as the “technical” arm of the WG. At the beginning of the first year, under the leadership of&lt;a href=&quot;https://youtu.be/COByiCuPsDc?t=800&quot;&gt; Mélanie Bats&lt;/a&gt;, the Planning Council was tasked by the Steering Committee to identify the top issues affecting the successful release and adoption of the Eclipse IDE as a platform and a product.&lt;/p&gt;



&lt;p&gt;After much brainstorming and debate the Planning Council recommended the “top three” items to the Steering Committee to focus on:&lt;/p&gt;



&lt;ul&gt;&lt;li&gt;The “&lt;a href=&quot;https://en.wikipedia.org/wiki/Bus_factor&quot;&gt;Bus Factor&lt;/a&gt;“, particularly of the release engineering processes of the Simultaneous Release (&lt;a href=&quot;https://wiki.eclipse.org/SimRel/Overview&quot;&gt;SimRel&lt;/a&gt;).&lt;/li&gt;&lt;li&gt;Identifying individual project risks, for example identifying which projects contributing to the SimRel are under-resourced and understanding which downstream projects are affected.&lt;/li&gt;&lt;li&gt;Updating the graphical layer Eclipse where it is lagging behind operating system changes, for example improving dark mode, better operating system and web browser integration.&lt;/li&gt;&lt;/ul&gt;



&lt;p&gt;The Steering Committee took these items and translated them to action points that are now being carried out and has allocated a substantial portion of the IDE WG’s budget to improving these common parts of the Eclipse IDE. The highlights of this work include:&lt;/p&gt;



&lt;ul&gt;&lt;li&gt;&lt;a href=&quot;https://blogs.eclipse.org/post/paul-buck/welcome-ed&quot;&gt;Hiring Ed Merks&lt;/a&gt; as the SimRel release engineer.&lt;/li&gt;&lt;li&gt;Ed has also found time to start mapping out the incredibly complicated dependency graphs between the dozens of different projects contributing to the SimRel to better understand the impact of any particular project discontinuing participation and to fully understand the dependency chain of each bundle in the SimRel repository.&lt;/li&gt;&lt;li&gt;The Eclipse Foundation has created new&lt;a href=&quot;https://www.eclipse.org/org/workinggroups/wgfi_program.php&quot;&gt; guidelines&lt;/a&gt; for funding work such as the graphical layer improvements. This is the most recent action point and already some bugs are being fixed under this program.&lt;/li&gt;&lt;/ul&gt;



&lt;p&gt;One year into the Eclipse IDE WG and Jonah Graham is now the chair of  the Planning Council. The Planning Council is pleased to see some concrete actions taking place under the new Working Group. The structures and processes in the Working Group have progressed well and additional funding of the IDE WG will see direct improvements in the quality, stability and adoption of the Eclipse IDE.&lt;/p&gt;



&lt;p&gt;&lt;strong&gt;Engage in the Working Group&lt;/strong&gt;&lt;/p&gt;



&lt;p&gt;We still have much to do! If you are interested in joining us and supporting the development of the Eclipse IDE technology stack, improving the user experience of the platform, and making it more attractive for organisations, let us know. We welcome the opportunity to speak with everyone who wants to help shape the future of the Eclipse IDE.&lt;/p&gt;



&lt;p&gt;The resources funded by the IDE Working Group members are really paying dividends for our community, both for the producers and for the consumers. If you’re a consumer, please consider investing in our community’s ongoing success by supporting the Eclipse IDE with funding, contributions, new ideas, new points of view, and by getting directly involved in development efforts. Better funding enables us to achieve more, and more hands make the work lighter.&lt;/p&gt;



&lt;p&gt;If you are interested in becoming a Working Group member, you can get in touch with us by completing the&lt;a href=&quot;https://ide-wg.eclipse.org/membership&quot;&gt; membership form&lt;/a&gt; or by sending an email to the Membership Coordination Team. If you are interested in becoming a sponsor,&lt;a href=&quot;https://outreach.eclipse.foundation/ide-wg-sponsor&quot;&gt; let us know&lt;/a&gt;.&lt;/p&gt;



&lt;p&gt;&lt;strong&gt;Stay In Touch&lt;/strong&gt;&lt;/p&gt;



&lt;p&gt;We love exchanging ideas, so if you have any questions or would like to know more about what we do here, &lt;a href=&quot;mailto:eclipse-ide-wg@eclipse.org?subject=Interested in Eclipse IDE Working Group&quot;&gt;connect with us&lt;/a&gt;!  You can also join our meetings to find out more about what we’re up to. They are open to the community and take place every 2 weeks from 2:30pm to 3:30pm (CET) on Tuesdays. Or you can contact a member of the steering committee, we’re always happy to talk to you.&lt;/p&gt;</description>
	<pubDate>Tue, 26 Apr 2022 12:01:00 +0000</pubDate>
</item>
<item>
	<title>Lorenzo Bettini: Mirror Eclipse p2 repositories with Tycho</title>
	<guid isPermaLink="false">https://www.lorenzobettini.it/?p=1652</guid>
	<link>https://www.lorenzobettini.it/2022/04/mirror-eclipse-p2-repositories-with-tycho/</link>
	<description>&lt;p&gt;I had previously written about mirroring Eclipse p2 repositories (&lt;a href=&quot;https://www.lorenzobettini.it/tag/eclipse/feed/tag/mirror/&quot; rel=&quot;noopener&quot; target=&quot;_blank&quot;&gt;see this blog tag&lt;/a&gt;), but I’ll show how to do that with Tycho and &lt;a href=&quot;https://www.eclipse.org/tycho/sitedocs/tycho-extras/tycho-p2-extras-plugin/mirror-mojo.html&quot; rel=&quot;noopener&quot; target=&quot;_blank&quot;&gt;one of its plugins&lt;/a&gt; in this post.&lt;/p&gt;
&lt;p&gt;The goal is always the same: speed up my Maven/Tycho builds that depend on target platforms and insulate me from external servers.&lt;/p&gt;
&lt;p&gt;The source code of this example can be found here: &lt;a href=&quot;https://github.com/LorenzoBettini/tycho-mirror-example&quot; rel=&quot;noopener&quot; target=&quot;_blank&quot;&gt;https://github.com/LorenzoBettini/tycho-mirror-example&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;I will show how to create a mirror of a few features and bundles from a few p2 repositories so that I can then resolve a target definition file against the mirror. In the POM, I will also create a version of the target definition file modified to use the local mirror (using Ant). Moreover, I will also use a Tycho goal to validate such a modified target definition file against the local mirror. The overall procedure is also automatized in the CI (GitHub Actions). This way, we are confident that we will create a mirror that can be used locally for our builds.&lt;/p&gt;
&lt;p&gt;First of all, let’s see the target platform I want to use during my Maven/Tycho builds. The target platform definition file is taken from my project &lt;a href=&quot;https://github.com/LorenzoBettini/edelta&quot; rel=&quot;noopener&quot; target=&quot;_blank&quot;&gt;Edelta&lt;/a&gt;, based on Xtext.&lt;/p&gt;&lt;pre class=&quot;urvanov-syntax-highlighter-plain-tag&quot;&gt;&amp;lt;?xml version=&quot;1.0&quot; encoding=&quot;UTF-8&quot; standalone=&quot;no&quot;?&amp;gt;
&amp;lt;?pde version=&quot;3.8&quot;?&amp;gt;
&amp;lt;target name=&quot;edelta.target&quot; sequenceNumber=&quot;13&quot;&amp;gt;
&amp;lt;locations&amp;gt;
&amp;lt;location includeAllPlatforms=&quot;false&quot; includeConfigurePhase=&quot;false&quot; includeMode=&quot;planner&quot; includeSource=&quot;true&quot; type=&quot;InstallableUnit&quot;&amp;gt;
&amp;lt;unit id=&quot;org.eclipse.equinox.executable.feature.group&quot; version=&quot;0.0.0&quot;/&amp;gt;
&amp;lt;unit id=&quot;org.eclipse.jdt.feature.group&quot; version=&quot;0.0.0&quot;/&amp;gt;
&amp;lt;unit id=&quot;org.eclipse.platform.feature.group&quot; version=&quot;0.0.0&quot;/&amp;gt;
&amp;lt;unit id=&quot;org.eclipse.pde.feature.group&quot; version=&quot;0.0.0&quot;/&amp;gt;
&amp;lt;unit id=&quot;org.eclipse.sdk&quot; version=&quot;0.0.0&quot;/&amp;gt;
&amp;lt;unit id=&quot;org.eclipse.emf.sdk.feature.group&quot; version=&quot;0.0.0&quot;/&amp;gt;
&amp;lt;unit id=&quot;org.eclipse.swtbot.forms.feature.group&quot; version=&quot;0.0.0&quot;/&amp;gt;
&amp;lt;unit id=&quot;org.eclipse.swtbot.ide.feature.group&quot; version=&quot;0.0.0&quot;/&amp;gt;
&amp;lt;unit id=&quot;org.eclipse.swtbot.eclipse.feature.group&quot; version=&quot;0.0.0&quot;/&amp;gt;
&amp;lt;repository location=&quot;https://download.eclipse.org/releases/2022-03&quot;/&amp;gt;
&amp;lt;/location&amp;gt;
&amp;lt;location includeAllPlatforms=&quot;false&quot; includeConfigurePhase=&quot;false&quot; includeMode=&quot;planner&quot; includeSource=&quot;true&quot; type=&quot;InstallableUnit&quot;&amp;gt;
&amp;lt;unit id=&quot;org.eclipse.emf.mwe2.launcher.feature.group&quot; version=&quot;0.0.0&quot;/&amp;gt;
&amp;lt;repository location=&quot;https://download.eclipse.org/modeling/emft/mwe/updates/releases/2.12.2/&quot;/&amp;gt;
&amp;lt;/location&amp;gt;
&amp;lt;location includeAllPlatforms=&quot;false&quot; includeConfigurePhase=&quot;false&quot; includeMode=&quot;planner&quot; includeSource=&quot;true&quot; type=&quot;InstallableUnit&quot;&amp;gt;
&amp;lt;unit id=&quot;org.eclipse.xtext.sdk.feature.group&quot; version=&quot;0.0.0&quot;/&amp;gt;
&amp;lt;repository location=&quot;https://download.eclipse.org/modeling/tmf/xtext/updates/releases/2.26.0/&quot;/&amp;gt;
&amp;lt;/location&amp;gt;
&amp;lt;location includeAllPlatforms=&quot;false&quot; includeConfigurePhase=&quot;true&quot; includeMode=&quot;planner&quot; includeSource=&quot;true&quot; type=&quot;InstallableUnit&quot;&amp;gt;
&amp;lt;unit id=&quot;de.itemis.xtext.antlr.feature.feature.group&quot; version=&quot;2.1.1.v201405091103&quot;/&amp;gt;
&amp;lt;repository location=&quot;https://download.itemis.com/updates/releases/2.1.1/&quot;/&amp;gt;
&amp;lt;/location&amp;gt;
&amp;lt;location includeAllPlatforms=&quot;false&quot; includeConfigurePhase=&quot;true&quot; includeMode=&quot;planner&quot; includeSource=&quot;true&quot; type=&quot;InstallableUnit&quot;&amp;gt;
&amp;lt;unit id=&quot;org.eclipse.epsilon.picto.feature.feature.group&quot; version=&quot;0.0.0&quot;/&amp;gt;
&amp;lt;unit id=&quot;org.eclipse.epsilon.emf.feature.feature.group&quot; version=&quot;0.0.0&quot;/&amp;gt;
&amp;lt;repository location=&quot;https://download.eclipse.org/epsilon/updates/2.4/&quot;/&amp;gt;
&amp;lt;/location&amp;gt;
&amp;lt;location includeAllPlatforms=&quot;false&quot; includeConfigurePhase=&quot;true&quot; includeMode=&quot;planner&quot; includeSource=&quot;true&quot; type=&quot;InstallableUnit&quot;&amp;gt;
&amp;lt;repository location=&quot;https://download.eclipse.org/tools/orbit/downloads/2022-03/&quot;/&amp;gt;
&amp;lt;/location&amp;gt;
&amp;lt;/locations&amp;gt;
&amp;lt;/target&amp;gt;&lt;/pre&gt;&lt;p&gt;As you see, it’s rather complex and relies on several p2 repositories. The last repository is the Orbit repository; although it does not list any installable units, that is still required to resolve dependencies of Epsilon (see the last but one location). We have to consider this when defining our mirroring strategy.&lt;/p&gt;
&lt;p&gt;As usual, we define a few properties at the beginning of the POM for specifying the versions of the plugin and the parts of the p2 update site we will mirror from:&lt;/p&gt;&lt;pre class=&quot;urvanov-syntax-highlighter-plain-tag&quot;&gt;&amp;lt;properties&amp;gt;
    &amp;lt;tycho-version&amp;gt;2.7.1&amp;lt;/tycho-version&amp;gt;
    &amp;lt;project.build.sourceEncoding&amp;gt;UTF-8&amp;lt;/project.build.sourceEncoding&amp;gt;
    &amp;lt;eclipse-version&amp;gt;2022-03&amp;lt;/eclipse-version&amp;gt;
    &amp;lt;xtext-version&amp;gt;2.26.0&amp;lt;/xtext-version&amp;gt;
  &amp;lt;/properties&amp;gt;&lt;/pre&gt;&lt;p&gt;Let’s configure the Tycho plugin for mirroring (see the &lt;a href=&quot;https://www.eclipse.org/tycho/sitedocs/tycho-extras/tycho-p2-extras-plugin/mirror-mojo.html&quot; rel=&quot;noopener&quot; target=&quot;_blank&quot;&gt;documentation of the plugin&lt;/a&gt; for all the details of the configuration):&lt;/p&gt;&lt;pre class=&quot;urvanov-syntax-highlighter-plain-tag&quot;&gt;&amp;lt;plugin&amp;gt;
  &amp;lt;groupId&amp;gt;org.eclipse.tycho.extras&amp;lt;/groupId&amp;gt;
  &amp;lt;artifactId&amp;gt;tycho-p2-extras-plugin&amp;lt;/artifactId&amp;gt;
  &amp;lt;version&amp;gt;${tycho-version}&amp;lt;/version&amp;gt;
  &amp;lt;executions&amp;gt;
    &amp;lt;execution&amp;gt;
      &amp;lt;phase&amp;gt;package&amp;lt;/phase&amp;gt;
      &amp;lt;goals&amp;gt;
        &amp;lt;goal&amp;gt;mirror&amp;lt;/goal&amp;gt;
      &amp;lt;/goals&amp;gt;
    &amp;lt;/execution&amp;gt;
  &amp;lt;/executions&amp;gt;
  &amp;lt;configuration&amp;gt;
    &amp;lt;source&amp;gt;
      &amp;lt;repository&amp;gt;
        &amp;lt;id&amp;gt;${eclipse-version}&amp;lt;/id&amp;gt;
        &amp;lt;layout&amp;gt;p2&amp;lt;/layout&amp;gt;
        &amp;lt;url&amp;gt;https://download.eclipse.org/releases/${eclipse-version}&amp;lt;/url&amp;gt;
      &amp;lt;/repository&amp;gt;
      &amp;lt;repository&amp;gt;
        &amp;lt;id&amp;gt;${xtext-version}&amp;lt;/id&amp;gt;
        &amp;lt;layout&amp;gt;p2&amp;lt;/layout&amp;gt;
        &amp;lt;url&amp;gt;https://download.eclipse.org/modeling/tmf/xtext/updates/releases/${xtext-version}&amp;lt;/url&amp;gt;
      &amp;lt;/repository&amp;gt;
      &amp;lt;repository&amp;gt;
        &amp;lt;id&amp;gt;itemis&amp;lt;/id&amp;gt;
        &amp;lt;layout&amp;gt;p2&amp;lt;/layout&amp;gt;
        &amp;lt;url&amp;gt;https://download.itemis.com/updates/releases/2.1.1/&amp;lt;/url&amp;gt;
      &amp;lt;/repository&amp;gt;
      &amp;lt;repository&amp;gt;
        &amp;lt;id&amp;gt;Epsilon&amp;lt;/id&amp;gt;
        &amp;lt;layout&amp;gt;p2&amp;lt;/layout&amp;gt;
        &amp;lt;url&amp;gt;https://download.eclipse.org/epsilon/updates/2.4/&amp;lt;/url&amp;gt;
      &amp;lt;/repository&amp;gt;
      &amp;lt;repository&amp;gt;
        &amp;lt;id&amp;gt;Orbit ${eclipse-version}&amp;lt;/id&amp;gt;
        &amp;lt;layout&amp;gt;p2&amp;lt;/layout&amp;gt;
        &amp;lt;url&amp;gt;https://download.eclipse.org/tools/orbit/downloads/${eclipse-version}&amp;lt;/url&amp;gt;
      &amp;lt;/repository&amp;gt;
    &amp;lt;/source&amp;gt;

    &amp;lt;!-- List of IUs to mirror. If omitted, allIUs will be mirrored. --&amp;gt;
    &amp;lt;!-- Omitted IU version element means latest version of the IU --&amp;gt;
    &amp;lt;ius&amp;gt;
      &amp;lt;iu&amp;gt;
        &amp;lt;id&amp;gt;org.eclipse.equinox.executable.feature.group&amp;lt;/id&amp;gt;
      &amp;lt;/iu&amp;gt;
      &amp;lt;iu&amp;gt;
        &amp;lt;id&amp;gt;org.eclipse.sdk.feature.group&amp;lt;/id&amp;gt;
      &amp;lt;/iu&amp;gt;
      &amp;lt;iu&amp;gt;
        &amp;lt;id&amp;gt;org.eclipse.swtbot.eclipse.feature.group&amp;lt;/id&amp;gt;
      &amp;lt;/iu&amp;gt;
      &amp;lt;iu&amp;gt;
        &amp;lt;id&amp;gt;org.eclipse.swtbot.ide.feature.group&amp;lt;/id&amp;gt;
      &amp;lt;/iu&amp;gt;
      &amp;lt;iu&amp;gt;
        &amp;lt;id&amp;gt;org.eclipse.xtext.sdk.feature.group&amp;lt;/id&amp;gt;
      &amp;lt;/iu&amp;gt;
      &amp;lt;iu&amp;gt;
        &amp;lt;id&amp;gt;org.eclipse.emf.sdk.feature.group&amp;lt;/id&amp;gt;
      &amp;lt;/iu&amp;gt;
      &amp;lt;iu&amp;gt;
        &amp;lt;id&amp;gt;de.itemis.xtext.antlr.feature.feature.group&amp;lt;/id&amp;gt;
      &amp;lt;/iu&amp;gt;
      &amp;lt;iu&amp;gt;
        &amp;lt;id&amp;gt;org.eclipse.epsilon.picto.feature.feature.group&amp;lt;/id&amp;gt;
      &amp;lt;/iu&amp;gt;
      &amp;lt;iu&amp;gt;
        &amp;lt;id&amp;gt;org.eclipse.epsilon.emf.feature.feature.group&amp;lt;/id&amp;gt;
      &amp;lt;/iu&amp;gt;
    &amp;lt;/ius&amp;gt;
    &amp;lt;!-- The destination directory to mirror to. --&amp;gt;
    &amp;lt;destination&amp;gt;${user.home}/eclipse-mirrors&amp;lt;/destination&amp;gt;
    &amp;lt;includePacked&amp;gt;false&amp;lt;/includePacked&amp;gt;
    &amp;lt;includeOptional&amp;gt;false&amp;lt;/includeOptional&amp;gt;
    &amp;lt;!--
      because some features, like epsilon, require an old version of org.antlr.runtime:
      org.eclipse.epsilon.common 2.4.0.202203041826
      requires 'osgi.bundle; org.antlr.runtime [3.1.1,3.5.3)'
    --&amp;gt;
    &amp;lt;latestVersionOnly&amp;gt;false&amp;lt;/latestVersionOnly&amp;gt;
  &amp;lt;/configuration&amp;gt;
&amp;lt;/plugin&amp;gt;&lt;/pre&gt;&lt;p&gt;The mirror will be generated in the user home subdirectory “eclipse-mirrors” (&lt;em&gt;&amp;lt;destination&amp;gt;&lt;/em&gt; tag); we also define a few other mirroring options. Note that in this example, we cannot mirror only the latest versions of bundles (&lt;em&gt;&amp;lt;latestVersionOnly&amp;gt;&lt;/em&gt;), as detailed in the comment in the POM. We also avoid mirroring the entire contents of the update sites (it would be too much). That’s why we specify single installable units. Remember that also dependencies of the listed installable units will be mirrored, so it is enough to list the main ones. You might note differences between the installable units specified in the target platform definition and those listed in the plugin configuration. Indeed, the target platform file could also be simplified accordingly, but I just wanted to have slight differences to experiment with.&lt;/p&gt;
&lt;p&gt;If you write the above configuration in a POM file (a &lt;em&gt;&amp;lt;packaging&amp;gt;pom&amp;lt;/packaging&amp;gt;&lt;/em&gt; will be enough), you can already build the mirror running:&lt;/p&gt;&lt;pre class=&quot;urvanov-syntax-highlighter-plain-tag&quot;&gt;mvn package&lt;/pre&gt;&lt;p&gt;Remember that the mirroring process will take several minutes depending on your Internet connection speed since it will have to download about 500 Mb of data.&lt;/p&gt;
&lt;p&gt;You can verify that all the specified repositories are needed to create the mirror correctly. For example, try to remove this part from the POM:&lt;/p&gt;&lt;pre class=&quot;urvanov-syntax-highlighter-plain-tag&quot;&gt;&amp;lt;repository&amp;gt;
  &amp;lt;id&amp;gt;Orbit ${eclipse-version}&amp;lt;/id&amp;gt;
  &amp;lt;layout&amp;gt;p2&amp;lt;/layout&amp;gt;
  &amp;lt;url&amp;gt;https://download.eclipse.org/tools/orbit/downloads/${eclipse-version}&amp;lt;/url&amp;gt;
&amp;lt;/repository&amp;gt;&lt;/pre&gt;&lt;p&gt;Try to create the mirror, and you should see this warning message because some requirements of Epsilon bundles cannot be resolved:&lt;/p&gt;&lt;pre class=&quot;urvanov-syntax-highlighter-plain-tag&quot;&gt;[WARNING] Mirror tool: Problems resolving provisioning plan.:
[Unable to satisfy dependency from org.eclipse.epsilon.picto 2.3.0.202104221823
to osgi.bundle; com.atlassian.commonmark 0.0.0.;
Unable to satisfy dependency from org.eclipse.epsilon.picto 2.3.0.202104221823
to osgi.bundle; com.atlassian.commonmark-gfm-strikethrough 0.0.0.;
Unable to satisfy dependency from org.eclipse.epsilon.picto 2.3.0.202104221823
to osgi.bundle; com.atlassian.commonmark-gfm-tables 0.0.0.;
Unable to satisfy dependency from org.eclipse.epsilon.picto 2.3.0.202104221823
to osgi.bundle; com.atlassian.commonmark-heading-anchor 0.0.0.;
Unable to satisfy dependency from org.eclipse.epsilon.picto 2.3.0.202104221823
to osgi.bundle; com.atlassian.commonmark-image-attributes 0.0.0.;
Unable to satisfy dependency from org.eclipse.epsilon.picto 2.3.0.202104221823
to osgi.bundle; com.atlassian.commonmark-ins 0.0.0.;
Unable to satisfy dependency from org.eclipse.epsilon.picto 2.3.0.202104221823
to osgi.bundle; com.atlassian.commonmark-task-list-items 0.0.0.;
Unable to satisfy dependency from org.eclipse.epsilon.picto 2.3.0.202104221823
to osgi.bundle; com.atlassian.commonmark-yaml 0.0.0.;
Unable to satisfy dependency from org.eclipse.epsilon.picto 2.3.0.202104221823
to osgi.bundle; net.sourceforge.plantuml 0.0.0.;
Unable to satisfy dependency from org.eclipse.epsilon.picto 2.3.0.202104221823
to osgi.bundle; org.apache.commons.csv 0.0.0.;
Unable to satisfy dependency from org.eclipse.epsilon.emg.engine 2.3.0.202104221823
to osgi.bundle; org.apache.commons.math3 0.0.0.]&lt;/pre&gt;&lt;p&gt;Those requirements are found in the Orbit p2 repository, which we have just removed for testing purposes.&lt;/p&gt;
&lt;p&gt;Unfortunately, I found no way to make the build fail in such cases, even because it’s just a warning, not an error. I guess this is a limitation of the Eclipse mirroring mechanism. However, we will now see how to verify that the mirror contains all the needed software using another mechanism.&lt;/p&gt;
&lt;p&gt;We create a modified version of our target definition file pointing to our local mirror. To do that, we create an Ant file (&lt;em&gt;create_local_target.ant&lt;/em&gt;):&lt;/p&gt;&lt;pre class=&quot;urvanov-syntax-highlighter-plain-tag&quot;&gt;&amp;lt;?xml version=&quot;1.0&quot; encoding=&quot;ISO-8859-1&quot;?&amp;gt;
&amp;lt;project name=&quot;CreateLocalTargetDefinitionFile&quot; basedir=&quot;.&quot; default=&quot;create-target-file&quot;&amp;gt;

	&amp;lt;!--
		Replaces all the repository location elements of a .target file with
		a location pointing to a local file system directory where the
		mirror has to be already created
	--&amp;gt;
	&amp;lt;property name=&quot;local.target&quot; value=&quot;local.target&quot; /&amp;gt;
	&amp;lt;property name=&quot;orig.target&quot; location=&quot;./example.target&quot; /&amp;gt;
	&amp;lt;property name=&quot;local.mirror.path.input&quot; location=&quot;${user.home}/eclipse-mirrors&quot; /&amp;gt;
	&amp;lt;property name=&quot;local.mirror.url.input&quot; value=&quot;file:${local.mirror.path}&quot; /&amp;gt;

	&amp;lt;macrodef name=&quot;replace_win_slashes&quot;&amp;gt;
		&amp;lt;attribute name=&quot;property.to.process&quot; /&amp;gt;
		&amp;lt;attribute name=&quot;output.property&quot; /&amp;gt;
		&amp;lt;sequential&amp;gt;
			&amp;lt;loadresource property=&quot;@{output.property}&quot;&amp;gt;
				&amp;lt;string value=&quot;@{property.to.process}&quot; /&amp;gt;
				&amp;lt;filterchain&amp;gt;
					&amp;lt;replaceregex pattern=&quot;\\&quot; replace=&quot;/&quot; flags=&quot;gi&quot; /&amp;gt;
				&amp;lt;/filterchain&amp;gt;
			&amp;lt;/loadresource&amp;gt;
			&amp;lt;echo message=&quot;property.to.process: @{property.to.process}&quot; /&amp;gt;
			&amp;lt;echo message=&quot;output.property    : ${@{output.property}}&quot; /&amp;gt;
		&amp;lt;/sequential&amp;gt;
	&amp;lt;/macrodef&amp;gt;

	&amp;lt;replace_win_slashes property.to.process=&quot;${local.mirror.path.input}&quot; output.property=&quot;local.mirror.path&quot; /&amp;gt;
	&amp;lt;replace_win_slashes property.to.process=&quot;${local.mirror.url.input}&quot; output.property=&quot;local.mirror.url&quot; /&amp;gt;

	&amp;lt;target name=&quot;copy-target-file&quot; description=&quot;Copy the .target definition file into the local.target&quot;&amp;gt;
		&amp;lt;echo message=&quot;local.target: ${local.target}&quot; /&amp;gt;
		&amp;lt;echo message=&quot;orig.target : ${orig.target}&quot; /&amp;gt;

		&amp;lt;copy file=&quot;${orig.target}&quot; tofile=&quot;${local.target}&quot; overwrite=&quot;true&quot; verbose=&quot;true&quot; /&amp;gt;
	&amp;lt;/target&amp;gt;


	&amp;lt;target name=&quot;create-target-file&quot; depends=&quot;copy-target-file&quot; description=&quot;Creates a .target file from the original one, pointing to a local mirror&quot;&amp;gt;
		&amp;lt;echo message=&quot;local.mirror.path: ${local.mirror.path}&quot; /&amp;gt;
		&amp;lt;echo message=&quot;local.mirror.url : ${local.mirror.url}&quot; /&amp;gt;

		&amp;lt;replaceregexp&amp;gt;
			&amp;lt;regexp pattern=&quot;target name=&amp;amp;quot;(\S+)&amp;amp;quot;(\.*)&quot; /&amp;gt;
			&amp;lt;substitution expression=&quot;target name=&amp;amp;quot;local&amp;amp;quot;\2&quot; /&amp;gt;
			&amp;lt;fileset id=&quot;path.target&quot; dir=&quot;.&quot;&amp;gt;
				&amp;lt;include name=&quot;${local.target}&quot; /&amp;gt;
			&amp;lt;/fileset&amp;gt;
		&amp;lt;/replaceregexp&amp;gt;

		&amp;lt;replaceregexp byline=&quot;true&quot;&amp;gt;
			&amp;lt;regexp pattern=&quot;&amp;amp;lt;repository location=&amp;amp;quot;(\S+)&amp;amp;quot;(\.*)/&amp;amp;gt;&quot; /&amp;gt;
			&amp;lt;substitution expression=&quot;&amp;amp;lt;repository location=&amp;amp;quot;${local.mirror.url}&amp;amp;quot;\2/&amp;amp;gt;&quot; /&amp;gt;
			&amp;lt;fileset id=&quot;path.target&quot; dir=&quot;.&quot;&amp;gt;
				&amp;lt;include name=&quot;${local.target}&quot; /&amp;gt;
			&amp;lt;/fileset&amp;gt;
		&amp;lt;/replaceregexp&amp;gt;
	&amp;lt;/target&amp;gt;

&amp;lt;/project&amp;gt;&lt;/pre&gt;&lt;p&gt;Note that this also handles path separators in Windows correctly. The idea is to replace lines of the shape &amp;lt;repository location=”https://…”/&amp;gt; with &amp;lt;repository location=”file:/…/eclipse-mirrors”/&amp;gt;. This file assumes the original target file isÂ &lt;em&gt;example.target,&lt;/em&gt; and the modified file is generated into &lt;em&gt;local.target&lt;/em&gt;.&lt;/p&gt;
&lt;p&gt;Let’s call this Ant script from the POM:&lt;/p&gt;&lt;pre class=&quot;urvanov-syntax-highlighter-plain-tag&quot;&gt;&amp;lt;plugin&amp;gt;
  &amp;lt;artifactId&amp;gt;maven-antrun-plugin&amp;lt;/artifactId&amp;gt;
  &amp;lt;!-- create the local.target --&amp;gt;
  &amp;lt;executions&amp;gt;
    &amp;lt;execution&amp;gt;
      &amp;lt;id&amp;gt;create-target-file&amp;lt;/id&amp;gt;
      &amp;lt;phase&amp;gt;process-resources&amp;lt;/phase&amp;gt;
      &amp;lt;configuration&amp;gt;
        &amp;lt;target&amp;gt;
          &amp;lt;ant antfile=&quot;create_local_target.ant&quot; 
                target=&quot;create-target-file&quot;&amp;gt;
          &amp;lt;/ant&amp;gt;
        &amp;lt;/target&amp;gt;
      &amp;lt;/configuration&amp;gt;
      &amp;lt;goals&amp;gt;
        &amp;lt;goal&amp;gt;run&amp;lt;/goal&amp;gt;
      &amp;lt;/goals&amp;gt;
    &amp;lt;/execution&amp;gt;
  &amp;lt;/executions&amp;gt;
&amp;lt;/plugin&amp;gt;&lt;/pre&gt;&lt;p&gt;Finally, let’s use Tycho to validate theÂ &lt;em&gt;local.target&lt;/em&gt; file (see the &lt;a href=&quot;https://www.eclipse.org/tycho/sitedocs/tycho-extras/target-platform-validation-plugin/validate-target-platform-mojo.html&quot; rel=&quot;noopener&quot; target=&quot;_blank&quot;&gt;documentation of the goal&lt;/a&gt;):&lt;/p&gt;&lt;pre class=&quot;urvanov-syntax-highlighter-plain-tag&quot;&gt;&amp;lt;plugin&amp;gt;
  &amp;lt;groupId&amp;gt;org.eclipse.tycho.extras&amp;lt;/groupId&amp;gt;
  &amp;lt;artifactId&amp;gt;target-platform-validation-plugin&amp;lt;/artifactId&amp;gt;
  &amp;lt;version&amp;gt;${tycho-version}&amp;lt;/version&amp;gt;
  &amp;lt;executions&amp;gt;
    &amp;lt;!-- Binds by default to the lifecycle phase: validate. --&amp;gt;
    &amp;lt;execution&amp;gt;
      &amp;lt;id&amp;gt;validate-target-platform&amp;lt;/id&amp;gt;
      &amp;lt;goals&amp;gt;
        &amp;lt;goal&amp;gt;validate-target-platform&amp;lt;/goal&amp;gt;
      &amp;lt;/goals&amp;gt;
      &amp;lt;configuration&amp;gt;
        &amp;lt;targetFiles&amp;gt;
          &amp;lt;targetFile&amp;gt;local.target&amp;lt;/targetFile&amp;gt;
        &amp;lt;/targetFiles&amp;gt;
        &amp;lt;checkDependencies&amp;gt;true&amp;lt;/checkDependencies&amp;gt;
        &amp;lt;checkProvisioning&amp;gt;true&amp;lt;/checkProvisioning&amp;gt;
      &amp;lt;/configuration&amp;gt;
    &amp;lt;/execution&amp;gt;
  &amp;lt;/executions&amp;gt;
&amp;lt;/plugin&amp;gt;&lt;/pre&gt;&lt;p&gt;Now, if we run:&lt;/p&gt;&lt;pre class=&quot;urvanov-syntax-highlighter-plain-tag&quot;&gt;mvn package&lt;/pre&gt;&lt;p&gt;we build the mirror, and we create the &lt;em&gt;local.target&lt;/em&gt; file.&lt;/p&gt;
&lt;p&gt;Then, we can run the above goal explicitly to verify everything:&lt;/p&gt;&lt;pre class=&quot;urvanov-syntax-highlighter-plain-tag&quot;&gt;mvn target-platform-validation:validate-target-platform@validate-target-platform&lt;/pre&gt;&lt;p&gt;If this goal also succeeds, we managed to create a local mirror that we can use in our local builds. Of course, in the parent POM of your project, you must configure the build so that you can switch to &lt;em&gt;local.target&lt;/em&gt; instead of using your standard .target file. (You might want to look at the parent POM of my &lt;a href=&quot;https://github.com/LorenzoBettini/edelta&quot; rel=&quot;noopener&quot; target=&quot;_blank&quot;&gt;Edelta&lt;/a&gt; project to take some inspiration.)&lt;/p&gt;
&lt;p&gt;Since we should not trust a test that we never saw failing (see also my &lt;a href=&quot;https://leanpub.com/tdd-buildautomation-ci&quot; rel=&quot;noopener&quot; target=&quot;_blank&quot;&gt;TDD book&lt;/a&gt; &lt;img alt=&quot;ðŸ™‚&quot; class=&quot;wp-smiley&quot; src=&quot;https://s.w.org/images/core/emoji/14.0.0/72x72/1f642.png&quot; style=&quot;height: 1em;&quot; /&gt; let’s try to verify with the incomplete mirror that we learned to create by removing the Orbit URL. We should see that our local target platform cannot be validated:&lt;/p&gt;&lt;pre class=&quot;urvanov-syntax-highlighter-plain-tag&quot;&gt;[INFO] Validating /home/bettini/work/eclipse/tycho/tycho-mirrors/tycho-mirrors/local.target...
[ERROR] Cannot resolve target definition:
[ERROR] Software being installed: org.eclipse.epsilon.emf.feature.feature.group ...
[ERROR] Missing requirement: org.eclipse.epsilon.emg.engine ...
requires 'osgi.bundle; org.apache.commons.math3 0.0.0' but it could not be found
[ERROR] Cannot satisfy dependency: org.eclipse.epsilon.core.feature.feature.group ...
depends on: org.eclipse.equinox.p2.iu; org.eclipse.epsilon.emg.engine ...
[ERROR] Cannot satisfy dependency: org.eclipse.epsilon.emf.feature.feature.group ...
depends on: org.eclipse.equinox.p2.iu; org.eclipse.epsilon.core.feature.feature.group ...&lt;/pre&gt;&lt;p&gt;Alternatively, let’s try to build our mirror with &lt;em&gt;&amp;lt;latestVersionOnly&amp;gt;&lt;strong&gt;true&lt;/strong&gt;&amp;lt;/latestVersionOnly&amp;gt;,&lt;/em&gt; and during the validation of the target platform, we get:&lt;/p&gt;&lt;pre class=&quot;urvanov-syntax-highlighter-plain-tag&quot;&gt;Error: Cannot resolve target definition:
Error: Software being installed: org.eclipse.epsilon.picto.feature.feature.group 2.4.0.202203041826
Error: Missing requirement:
org.eclipse.epsilon.common 2.4.0.202203041826 requires
'osgi.bundle; org.antlr.runtime [3.1.1,3.5.3)' but it could not be found&lt;/pre&gt;&lt;p&gt;In fact, we mirror only the latest version of &lt;em&gt;org.antlr.runtime&lt;/em&gt; (4.7.2.v20200218-0804), which does not satisfy that requirement. That’s why we must use with &lt;em&gt;&amp;lt;latestVersionOnly&amp;gt;&lt;strong&gt;false&lt;/strong&gt;&amp;lt;/latestVersionOnly&amp;gt;&lt;/em&gt; in this example.&lt;/p&gt;
&lt;p&gt;For completeness, this is the full POM:&lt;/p&gt;&lt;pre class=&quot;urvanov-syntax-highlighter-plain-tag&quot;&gt;&amp;lt;?xml version=&quot;1.0&quot; encoding=&quot;UTF-8&quot;?&amp;gt;
&amp;lt;project xmlns=&quot;http://maven.apache.org/POM/4.0.0&quot;
  xmlns:xsi=&quot;http://www.w3.org/2001/XMLSchema-instance&quot;
  xsi:schemaLocation=&quot;http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd&quot;&amp;gt;
  &amp;lt;modelVersion&amp;gt;4.0.0&amp;lt;/modelVersion&amp;gt;
  &amp;lt;groupId&amp;gt;io.lorenzobettini&amp;lt;/groupId&amp;gt;
  &amp;lt;artifactId&amp;gt;tycho-mirrors&amp;lt;/artifactId&amp;gt;
  &amp;lt;version&amp;gt;1.0.0-SNAPSHOT&amp;lt;/version&amp;gt;
  &amp;lt;packaging&amp;gt;pom&amp;lt;/packaging&amp;gt;

  &amp;lt;properties&amp;gt;
    &amp;lt;tycho-version&amp;gt;2.7.1&amp;lt;/tycho-version&amp;gt;
    &amp;lt;project.build.sourceEncoding&amp;gt;UTF-8&amp;lt;/project.build.sourceEncoding&amp;gt;
    &amp;lt;eclipse-version&amp;gt;2022-03&amp;lt;/eclipse-version&amp;gt;
    &amp;lt;xtext-version&amp;gt;2.26.0&amp;lt;/xtext-version&amp;gt;
  &amp;lt;/properties&amp;gt;

  &amp;lt;build&amp;gt;
    &amp;lt;pluginManagement&amp;gt;
      &amp;lt;plugins&amp;gt;
        &amp;lt;plugin&amp;gt;
          &amp;lt;groupId&amp;gt;org.apache.maven.plugins&amp;lt;/groupId&amp;gt;
          &amp;lt;artifactId&amp;gt;maven-scm-plugin&amp;lt;/artifactId&amp;gt;
          &amp;lt;version&amp;gt;1.11.2&amp;lt;/version&amp;gt;
        &amp;lt;/plugin&amp;gt;
        &amp;lt;plugin&amp;gt;
          &amp;lt;groupId&amp;gt;org.apache.maven.plugins&amp;lt;/groupId&amp;gt;
          &amp;lt;artifactId&amp;gt;maven-resources-plugin&amp;lt;/artifactId&amp;gt;
          &amp;lt;version&amp;gt;3.2.0&amp;lt;/version&amp;gt;
        &amp;lt;/plugin&amp;gt;
        &amp;lt;plugin&amp;gt;
          &amp;lt;groupId&amp;gt;org.codehaus.mojo&amp;lt;/groupId&amp;gt;
          &amp;lt;artifactId&amp;gt;exec-maven-plugin&amp;lt;/artifactId&amp;gt;
          &amp;lt;version&amp;gt;3.0.0&amp;lt;/version&amp;gt;
        &amp;lt;/plugin&amp;gt;
        &amp;lt;plugin&amp;gt;
          &amp;lt;groupId&amp;gt;org.apache.maven.plugins&amp;lt;/groupId&amp;gt;
          &amp;lt;artifactId&amp;gt;maven-antrun-plugin&amp;lt;/artifactId&amp;gt;
          &amp;lt;version&amp;gt;3.0.0&amp;lt;/version&amp;gt;
        &amp;lt;/plugin&amp;gt;
        &amp;lt;plugin&amp;gt;
          &amp;lt;groupId&amp;gt;org.codehaus.mojo&amp;lt;/groupId&amp;gt;
          &amp;lt;artifactId&amp;gt;build-helper-maven-plugin&amp;lt;/artifactId&amp;gt;
          &amp;lt;version&amp;gt;3.2.0&amp;lt;/version&amp;gt;
        &amp;lt;/plugin&amp;gt;
        &amp;lt;plugin&amp;gt;
          &amp;lt;groupId&amp;gt;org.eclipse.tycho.extras&amp;lt;/groupId&amp;gt;
          &amp;lt;artifactId&amp;gt;tycho-eclipserun-plugin&amp;lt;/artifactId&amp;gt;
          &amp;lt;version&amp;gt;${tycho-version}&amp;lt;/version&amp;gt;
        &amp;lt;/plugin&amp;gt;
        &amp;lt;plugin&amp;gt;
          &amp;lt;groupId&amp;gt;org.eclipse.tycho&amp;lt;/groupId&amp;gt;
          &amp;lt;artifactId&amp;gt;tycho-p2-repository-plugin&amp;lt;/artifactId&amp;gt;
          &amp;lt;version&amp;gt;${tycho-version}&amp;lt;/version&amp;gt;
        &amp;lt;/plugin&amp;gt;
        &amp;lt;!-- Must be called explicitly in a separate invocation
          target-platform-validation:validate-target-platform@validate-target-platform
          see also https://github.com/eclipse/tycho/issues/350 --&amp;gt;
        &amp;lt;plugin&amp;gt;
          &amp;lt;groupId&amp;gt;org.eclipse.tycho.extras&amp;lt;/groupId&amp;gt;
          &amp;lt;artifactId&amp;gt;target-platform-validation-plugin&amp;lt;/artifactId&amp;gt;
          &amp;lt;version&amp;gt;${tycho-version}&amp;lt;/version&amp;gt;
          &amp;lt;executions&amp;gt;
            &amp;lt;!-- Binds by default to the lifecycle phase: validate. --&amp;gt;
            &amp;lt;execution&amp;gt;
              &amp;lt;id&amp;gt;validate-target-platform&amp;lt;/id&amp;gt;
              &amp;lt;goals&amp;gt;
                &amp;lt;goal&amp;gt;validate-target-platform&amp;lt;/goal&amp;gt;
              &amp;lt;/goals&amp;gt;
              &amp;lt;configuration&amp;gt;
                &amp;lt;targetFiles&amp;gt;
                  &amp;lt;targetFile&amp;gt;local.target&amp;lt;/targetFile&amp;gt;
                &amp;lt;/targetFiles&amp;gt;
                &amp;lt;checkDependencies&amp;gt;true&amp;lt;/checkDependencies&amp;gt;
                &amp;lt;checkProvisioning&amp;gt;true&amp;lt;/checkProvisioning&amp;gt;
              &amp;lt;/configuration&amp;gt;
            &amp;lt;/execution&amp;gt;
          &amp;lt;/executions&amp;gt;
        &amp;lt;/plugin&amp;gt;
      &amp;lt;/plugins&amp;gt;
    &amp;lt;/pluginManagement&amp;gt;

    &amp;lt;plugins&amp;gt;
      &amp;lt;plugin&amp;gt;
        &amp;lt;artifactId&amp;gt;maven-antrun-plugin&amp;lt;/artifactId&amp;gt;
        &amp;lt;!-- create the local.target --&amp;gt;
        &amp;lt;executions&amp;gt;
          &amp;lt;execution&amp;gt;
            &amp;lt;id&amp;gt;create-target-file&amp;lt;/id&amp;gt;
            &amp;lt;phase&amp;gt;process-resources&amp;lt;/phase&amp;gt;
            &amp;lt;configuration&amp;gt;
              &amp;lt;target&amp;gt;
                &amp;lt;ant antfile=&quot;create_local_target.ant&quot; 
                      target=&quot;create-target-file&quot;&amp;gt;
                &amp;lt;/ant&amp;gt;
              &amp;lt;/target&amp;gt;
            &amp;lt;/configuration&amp;gt;
            &amp;lt;goals&amp;gt;
              &amp;lt;goal&amp;gt;run&amp;lt;/goal&amp;gt;
            &amp;lt;/goals&amp;gt;
          &amp;lt;/execution&amp;gt;
        &amp;lt;/executions&amp;gt;
      &amp;lt;/plugin&amp;gt;
      &amp;lt;plugin&amp;gt;
        &amp;lt;groupId&amp;gt;org.eclipse.tycho.extras&amp;lt;/groupId&amp;gt;
        &amp;lt;artifactId&amp;gt;tycho-p2-extras-plugin&amp;lt;/artifactId&amp;gt;
        &amp;lt;version&amp;gt;${tycho-version}&amp;lt;/version&amp;gt;
        &amp;lt;executions&amp;gt;
          &amp;lt;execution&amp;gt;
            &amp;lt;phase&amp;gt;package&amp;lt;/phase&amp;gt;
            &amp;lt;goals&amp;gt;
              &amp;lt;goal&amp;gt;mirror&amp;lt;/goal&amp;gt;
            &amp;lt;/goals&amp;gt;
          &amp;lt;/execution&amp;gt;
        &amp;lt;/executions&amp;gt;
        &amp;lt;configuration&amp;gt;
          &amp;lt;source&amp;gt;
            &amp;lt;repository&amp;gt;
              &amp;lt;id&amp;gt;${eclipse-version}&amp;lt;/id&amp;gt;
              &amp;lt;layout&amp;gt;p2&amp;lt;/layout&amp;gt;
              &amp;lt;url&amp;gt;https://download.eclipse.org/releases/${eclipse-version}&amp;lt;/url&amp;gt;
            &amp;lt;/repository&amp;gt;
            &amp;lt;repository&amp;gt;
              &amp;lt;id&amp;gt;${xtext-version}&amp;lt;/id&amp;gt;
              &amp;lt;layout&amp;gt;p2&amp;lt;/layout&amp;gt;
              &amp;lt;url&amp;gt;https://download.eclipse.org/modeling/tmf/xtext/updates/releases/${xtext-version}&amp;lt;/url&amp;gt;
            &amp;lt;/repository&amp;gt;
            &amp;lt;repository&amp;gt;
              &amp;lt;id&amp;gt;itemis&amp;lt;/id&amp;gt;
              &amp;lt;layout&amp;gt;p2&amp;lt;/layout&amp;gt;
              &amp;lt;url&amp;gt;https://download.itemis.com/updates/releases/2.1.1/&amp;lt;/url&amp;gt;
            &amp;lt;/repository&amp;gt;
            &amp;lt;repository&amp;gt;
              &amp;lt;id&amp;gt;Epsilon&amp;lt;/id&amp;gt;
              &amp;lt;layout&amp;gt;p2&amp;lt;/layout&amp;gt;
              &amp;lt;url&amp;gt;https://download.eclipse.org/epsilon/updates/2.4/&amp;lt;/url&amp;gt;
            &amp;lt;/repository&amp;gt;
            &amp;lt;repository&amp;gt;
              &amp;lt;id&amp;gt;Orbit ${eclipse-version}&amp;lt;/id&amp;gt;
              &amp;lt;layout&amp;gt;p2&amp;lt;/layout&amp;gt;
              &amp;lt;url&amp;gt;https://download.eclipse.org/tools/orbit/downloads/${eclipse-version}&amp;lt;/url&amp;gt;
            &amp;lt;/repository&amp;gt;
          &amp;lt;/source&amp;gt;

          &amp;lt;!-- List of IUs to mirror. If omitted, allIUs will be mirrored. --&amp;gt;
          &amp;lt;!-- Omitted IU version element means latest version of the IU --&amp;gt;
          &amp;lt;ius&amp;gt;
            &amp;lt;iu&amp;gt;
              &amp;lt;id&amp;gt;org.eclipse.equinox.executable.feature.group&amp;lt;/id&amp;gt;
            &amp;lt;/iu&amp;gt;
            &amp;lt;iu&amp;gt;
              &amp;lt;id&amp;gt;org.eclipse.sdk.feature.group&amp;lt;/id&amp;gt;
            &amp;lt;/iu&amp;gt;
            &amp;lt;iu&amp;gt;
              &amp;lt;id&amp;gt;org.eclipse.swtbot.eclipse.feature.group&amp;lt;/id&amp;gt;
            &amp;lt;/iu&amp;gt;
            &amp;lt;iu&amp;gt;
              &amp;lt;id&amp;gt;org.eclipse.swtbot.ide.feature.group&amp;lt;/id&amp;gt;
            &amp;lt;/iu&amp;gt;
            &amp;lt;iu&amp;gt;
              &amp;lt;id&amp;gt;org.eclipse.xtext.sdk.feature.group&amp;lt;/id&amp;gt;
            &amp;lt;/iu&amp;gt;
            &amp;lt;iu&amp;gt;
              &amp;lt;id&amp;gt;org.eclipse.emf.sdk.feature.group&amp;lt;/id&amp;gt;
            &amp;lt;/iu&amp;gt;
            &amp;lt;iu&amp;gt;
              &amp;lt;id&amp;gt;de.itemis.xtext.antlr.feature.feature.group&amp;lt;/id&amp;gt;
            &amp;lt;/iu&amp;gt;
            &amp;lt;iu&amp;gt;
              &amp;lt;id&amp;gt;org.eclipse.epsilon.picto.feature.feature.group&amp;lt;/id&amp;gt;
            &amp;lt;/iu&amp;gt;
            &amp;lt;iu&amp;gt;
              &amp;lt;id&amp;gt;org.eclipse.epsilon.emf.feature.feature.group&amp;lt;/id&amp;gt;
            &amp;lt;/iu&amp;gt;
          &amp;lt;/ius&amp;gt;
          &amp;lt;!-- The destination directory to mirror to. --&amp;gt;
          &amp;lt;destination&amp;gt;${user.home}/eclipse-mirrors&amp;lt;/destination&amp;gt;
          &amp;lt;includePacked&amp;gt;false&amp;lt;/includePacked&amp;gt;
          &amp;lt;includeOptional&amp;gt;false&amp;lt;/includeOptional&amp;gt;
          &amp;lt;!--
            because some features, like epsilon, require an old version of org.antlr.runtime:
            org.eclipse.epsilon.common 2.4.0.202203041826
            requires 'osgi.bundle; org.antlr.runtime [3.1.1,3.5.3)'
          --&amp;gt;
          &amp;lt;latestVersionOnly&amp;gt;false&amp;lt;/latestVersionOnly&amp;gt;
        &amp;lt;/configuration&amp;gt;
      &amp;lt;/plugin&amp;gt;
    &amp;lt;/plugins&amp;gt;
  &amp;lt;/build&amp;gt;

&amp;lt;/project&amp;gt;&lt;/pre&gt;&lt;p&gt;And this is the YAML file to build and verify in GitHub Actions:&lt;/p&gt;&lt;pre class=&quot;urvanov-syntax-highlighter-plain-tag&quot;&gt;name: Mirror and Verify

on:
  push:
    paths-ignore:
      - 'README.md'
  pull_request:
    paths-ignore:
      - 'README.md'

jobs:
  build:
    strategy:
      matrix:
        os: ['ubuntu-latest', 'macos-latest', 'windows-latest']
      fail-fast: false
    runs-on: ${{ matrix.os }}

    steps:
    - uses: actions/checkout@v2
    - name: Set up JDK 11
      uses: actions/setup-java@v1
      with:
        java-version: 11
    - name: Cache Maven packages
      uses: actions/cache@v2
      with:
        path: ~/.m2
        key: ${{ runner.os }}-m2-${{ hashFiles('**/pom.xml', '**/*.yml', '**/*.target') }}
        restore-keys: ${{ runner.os }}-m2-
    - name: Cache Mirror
      uses: actions/cache@v2
      with:
        path: ~/eclipse-mirrors
        key: ${{ runner.os }}-p2-mirror-${{ hashFiles('**/pom.xml', '**/*.target') }}
        # the key match must be perfect:
        # if we change the mirror or the tp we invalidate the cache
    - name: Build the Mirror
      run: mvn package
      working-directory: tycho-mirrors
    - name: Verify the TP against the Mirror
      run: mvn target-platform-validation:validate-target-platform@validate-target-platform
      working-directory: tycho-mirrors
    - name: Show output contents
      run: tree ~/eclipse-mirrors
      if: runner.os == 'Linux'&lt;/pre&gt;&lt;p&gt;I hope you found this post valuable, and happy mirroring! &lt;img alt=&quot;ðŸ™‚&quot; class=&quot;wp-smiley&quot; src=&quot;https://s.w.org/images/core/emoji/14.0.0/72x72/1f642.png&quot; style=&quot;height: 1em;&quot; /&gt;&lt;/p&gt;</description>
	<pubDate>Sun, 24 Apr 2022 15:51:13 +0000</pubDate>
</item>
<item>
	<title>John Kellerman: Eclipse Cloud DevTools Contributor Award: Improving the VS Code Integration of Eclipse GLSP</title>
	<guid isPermaLink="false">7153 at https://blogs.eclipse.org</guid>
	<link>https://blogs.eclipse.org/post/john-kellerman/eclipse-cloud-devtools-contributor-award-improving-vs-code-integration-eclipse</link>
	<description>&lt;div class=&quot;field field-name-body field-type-text-with-summary field-label-hidden&quot;&gt;&lt;div class=&quot;field-items&quot;&gt;&lt;div class=&quot;field-item even&quot;&gt;&lt;p&gt;The April 2022 Eclipse Cloud DevTools contributor award goes to Luca Forstner for his work towards improving the VS Code integration of Eclipse GLSP. Congratulations and thanks for your contributions!&lt;/p&gt;

&lt;p&gt;The &lt;a href=&quot;https://www.eclipse.org/glsp/&quot;&gt;Eclipse Graphical Language Server Platform (GLSP)&lt;/a&gt; is an extensible open source framework for building custom diagram editors based on web technologies. Diagram editors developed with GLSP can be embedded into any web page or application. A common scenario is to embed diagrams into a tool or IDE, e.g. into &lt;a href=&quot;https://eclipsesource.com/de/blogs/2021/04/16/a-diagram-editor-framework-for-vs-code/&quot;&gt;VS Code&lt;/a&gt;, &lt;a href=&quot;https://eclipsesource.com/blogs/2021/03/03/building-diagram-editors-in-eclipse-theia-with-glsp/&quot;&gt;Eclipse Theia&lt;/a&gt; or the Eclipse desktop IDE.&lt;/p&gt;

&lt;p&gt;For these three common cases, GLSP provides out-of-the-box integration support. With this integration, GLSP diagram editors can, for instance, be opened by double-clicking files, be shown in a native editor tab, display their dirty state in the editor tab, and integrate with the IDE’s global save and undo/redo actions. You can find a full list of available features &lt;a href=&quot;https://github.com/eclipse-glsp/glsp#features&quot;&gt;here&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;Luca Forstner, as part of his &lt;a href=&quot;https://model-engineering.info/publications/theses/thesis-forstner.pdf&quot;&gt;bachelor’s thesis&lt;/a&gt;, significantly contributed to the GLSP integration in VS Code. By looking at the feature table, you can see that the integrations into Theia and VS Code are almost on par with each other. Some use cases of the diagram integration are still not supported in VS Code. This is mainly due to a lack of flexibility in the VS Code extension API as compared to Eclipse Theia as a platform.&lt;/p&gt;

&lt;p&gt;&lt;img alt=&quot;&quot; class=&quot;center-block&quot; src=&quot;https://blogs.eclipse.org/sites/default/files/users/user750/image4.gif&quot; style=&quot;width: 480px; height: 259px;&quot; /&gt;&lt;/p&gt;

&lt;p class=&quot;rtecenter&quot;&gt;&lt;em&gt;An Eclipse GLSP diagram editor running in VS Code&lt;/em&gt;&lt;/p&gt;

&lt;p&gt;Luca's contribution is a great example of how academic work and an open source ecosystem mutually benefit from each other. Due to his open source contribution, the practical results of his bachelor’s thesis provide a significant value to the ecosystem. The technical level of his contribution was also excellent. Therefore, this award is very well deserved. Congratulations Luca!&lt;/p&gt;

&lt;p&gt;This Eclipse Cloud DevTools contributor award is sponsored by &lt;a href=&quot;https://eclipsesource.com/&quot;&gt;EclipseSource&lt;/a&gt;, providing &lt;a href=&quot;https://eclipsesource.com/services/tools/&quot;&gt;consulting and implementation services&lt;/a&gt; for &lt;a href=&quot;https://eclipsesource.com/web-and-cloud-based-tools/&quot;&gt;web-based tools&lt;/a&gt;, &lt;a href=&quot;https://eclipsesource.com/technology/eclipse-glsp/&quot;&gt;Eclipse GLSP&lt;/a&gt;,  &lt;a href=&quot;https://eclipsesource.com/technology/eclipse-theia/&quot;&gt;Eclipse Theia&lt;/a&gt;, and &lt;a href=&quot;https://eclipsesource.com/technology/vs-code/&quot;&gt;VS Code&lt;/a&gt;.&lt;/p&gt;
&lt;/div&gt;&lt;/div&gt;&lt;/div&gt;</description>
	<pubDate>Wed, 20 Apr 2022 00:30:27 +0000</pubDate>
</item>
<item>
	<title>Donald Raab: Map vs. Multimap</title>
	<guid isPermaLink="false">https://medium.com/p/6ea2b1b79de5</guid>
	<link>https://medium.com/javarevisited/map-vs-multimap-6ea2b1b79de5?source=rss-df39b86e9f04------2</link>
	<description>&lt;p&gt;Discover a safer alternative to mapping keys to multiple values in Java.&lt;/p&gt;&lt;figure&gt;&lt;img alt=&quot;&quot; src=&quot;https://cdn-images-1.medium.com/max/1024/0*alWmuy1Bnqx8qpve&quot; /&gt;&lt;figcaption&gt;Photo by &lt;a href=&quot;https://unsplash.com/@mullyadii?utm_source=medium&amp;amp;utm_medium=referral&quot;&gt;Mulyadi&lt;/a&gt; on &lt;a href=&quot;https://unsplash.com?utm_source=medium&amp;amp;utm_medium=referral&quot;&gt;Unsplash&lt;/a&gt;&lt;/figcaption&gt;&lt;/figure&gt;&lt;h3&gt;I need a Map with multiple values&lt;/h3&gt;&lt;p&gt;At some point in your years of coding in Java, you have probably needed a Map&amp;lt;K, Collection&amp;lt;V&amp;gt;&amp;gt;. If you haven’t needed one yet, give it some time… you will. There are more convenient ways to manage the Collection part of the Map using methods available since Java 8. If you have never used computeIfAbsent before, it is a method well worth learning. The following is an example of creating a Map&amp;lt;String, List&amp;lt;String&amp;gt;&amp;gt; using computeIfAbsent.&lt;/p&gt;&lt;figure&gt;&lt;img alt=&quot;&quot; src=&quot;https://cdn-images-1.medium.com/max/1024/1*oWmVL7u4TD_ljvX5XtQ99g.png&quot; /&gt;&lt;figcaption&gt;Using computeIfAbsent to dynamically create the values in a Map&amp;lt;String, List&amp;lt;String&amp;gt;&amp;gt;&lt;/figcaption&gt;&lt;/figure&gt;&lt;p&gt;The way computeIfAbsent works is simple. First, it looks in the map for a specified key (e.g. “A”). If it doesn’t find a value at the key, it evaluates the specified Function, and stores the result in the Map. It then returns either the value it found or the value it created and stored in the Map. So basically, computeIfAbsent is a get with a put where the value put into the Map is returned by the method. This method will guarantee a value always exists for any key looked up, but can be wasteful as a replacement for get, since it will always result in a put in the cases where you are looking up a key doesn’t exist.&lt;/p&gt;&lt;h3&gt;Map has a null problem&lt;/h3&gt;&lt;p&gt;One issue with using Map is that implementations like HashMap allow null keys, values and returns. If we ignore null keys for a second, the problem with null values and returns is that if you look up a key that does not exist in the Map, you will get a null back. You can try and protect your code against the possibility of checking the Map returns a null when calling get or by using a safer method like getOrDefault which could return an empty collection in the default case of a multi-valued Map. The real solution would be to create a Map type that knows that a missing key should result in an empty Collection being returned when calling get. This is what a Multimap does.&lt;/p&gt;&lt;h3&gt;Don’t clown around with Maps w/ multi-values&lt;/h3&gt;&lt;p&gt;If you need multi-valued Map support, then consider using a Multimap type from a library like &lt;a href=&quot;https://github.com/donraab/eclipse-collections&quot;&gt;Eclipse Collections&lt;/a&gt;, &lt;a href=&quot;https://github.com/google/guava&quot;&gt;Google Guava&lt;/a&gt; or &lt;a href=&quot;https://commons.apache.org/proper/commons-collections/&quot;&gt;Apache Commons Collections&lt;/a&gt;. The method put on a Multimap will know that the values are multi-valued and should automatically call add on the value containers. The method get on a Multimap knows when a key is not contained in the Multimap, and that an empty Collection should be returned instead. The point is that a Multimap has more intimate knowledge about the value type it manages. A Map may be provided the value type via generics, but it does not know that the value type must be a type of Collection.&lt;/p&gt;&lt;h3&gt;Using a Multimap in Eclipse Collections&lt;/h3&gt;&lt;p&gt;The following code shows the equivalent solution to the Map code above using a Multimap type from &lt;a href=&quot;https://github.com/eclipse/eclipse-collections&quot;&gt;Eclipse Collections&lt;/a&gt;.&lt;/p&gt;&lt;figure&gt;&lt;img alt=&quot;&quot; src=&quot;https://cdn-images-1.medium.com/max/1024/1*FqODyL9AFyFj4yXkM55bOg.png&quot; /&gt;&lt;/figure&gt;&lt;p&gt;First, I create a specific type of Multimap, which in this case is a MutableListMultimap. Then I can simply call put with each key and value. The Multimap knows to create a backing Collection container (in this case a MutableList) for each new key. Finally, the call to multimap.get(“D”) returns an empty List. This List is not stored in the Multimap, so the Multimap will remain sparse and only contain the keys with actual values.&lt;/p&gt;&lt;h3&gt;Multimap types in Eclipse Collections&lt;/h3&gt;&lt;p&gt;There are several concrete Multimap types in Eclipse Collections. There are Readable, Mutable and Immutable interfaces. Multimap is the parent interface. MutableListMultimap is a leaf interface. The following are examples of the basic concrete Multimap types that can be created by using the Multimaps factory.&lt;/p&gt;&lt;figure&gt;&lt;img alt=&quot;&quot; src=&quot;https://cdn-images-1.medium.com/max/1024/1*Q4fsXwJS9syQ19gl2aQxpw.png&quot; /&gt;&lt;figcaption&gt;Creating Multimap types via the Multimaps factory in Eclipse Collections&lt;/figcaption&gt;&lt;/figure&gt;&lt;p&gt;With Multimap, there are specific types based on the value containers (e.g. List, Set, Bag). There are specializations and sometimes optimizations that may exist for those types.&lt;/p&gt;&lt;h3&gt;GroupBy should return a Multimap&lt;/h3&gt;&lt;p&gt;Eclipse Collections is the only Java library that I am aware of today that returns a Multimap from its groupBy methods on each of its basic Collection types. Each specific type like MutableList or MutableSet, will return the appropriate Multimap type in its groupBy method based on its type. MutableList returns a MutableListMultimap from its groupBy method, and MutableSet returns a MutableSetMultimap. The following is an example of using groupBy in Eclipse Collections.&lt;/p&gt;&lt;figure&gt;&lt;img alt=&quot;&quot; src=&quot;https://cdn-images-1.medium.com/max/1024/1*QlTTxirN-kRY8D4TCh0lWg.png&quot; /&gt;&lt;figcaption&gt;Using groupBy with a MutableList in Eclipse Collections returns a MutableListMultimap&lt;/figcaption&gt;&lt;/figure&gt;&lt;p&gt;For more examples of groupBy, you can refer to the following blog.&lt;/p&gt;&lt;p&gt;&lt;a href=&quot;https://medium.com/oracledevs/ec-by-example-groupby-7ca219358c3b&quot;&gt;EC by Example: GroupBy&lt;/a&gt;&lt;/p&gt;&lt;h3&gt;More information on Eclipse Collections Multimap&lt;/h3&gt;&lt;p&gt;&lt;a href=&quot;https://medium.com/u/4285d8a2ca86&quot;&gt;Nikhil Nanivadekar&lt;/a&gt; wrote a blog on Multimaps in Eclipse Collections a few years ago. He gives more in depth explanations on the implementations.&lt;/p&gt;&lt;p&gt;&lt;a href=&quot;https://medium.com/oracledevs/multimap-how-it-works-a3430f549d35&quot;&gt;Multimap — How it works&lt;/a&gt;&lt;/p&gt;&lt;h3&gt;Summary&lt;/h3&gt;&lt;p&gt;Do you need a Map with support for keys and multiple values? Consider using a Multimap from Eclipse Collections. If you’re already using other Collection types from Eclipse Collections, the groupBy methods will give you easy access to creating appropriate Multimap types.&lt;/p&gt;&lt;p&gt;&lt;em&gt;I am a Project Lead and Committer for the &lt;/em&gt;&lt;a href=&quot;https://github.com/eclipse/eclipse-collections&quot;&gt;&lt;em&gt;Eclipse Collections&lt;/em&gt;&lt;/a&gt;&lt;em&gt; OSS project at the &lt;/em&gt;&lt;a href=&quot;https://projects.eclipse.org/projects/technology.collections&quot;&gt;&lt;em&gt;Eclipse Foundation&lt;/em&gt;&lt;/a&gt;&lt;em&gt;. &lt;/em&gt;&lt;a href=&quot;https://github.com/eclipse/eclipse-collections&quot;&gt;&lt;em&gt;Eclipse Collections&lt;/em&gt;&lt;/a&gt;&lt;em&gt; is open for &lt;/em&gt;&lt;a href=&quot;https://github.com/eclipse/eclipse-collections/blob/master/CONTRIBUTING.md&quot;&gt;&lt;em&gt;contributions&lt;/em&gt;&lt;/a&gt;&lt;em&gt;. If you like the library, you can let us know by starring it on GitHub.&lt;/em&gt;&lt;/p&gt;&lt;h4&gt;Other Java articles you may like&lt;/h4&gt;&lt;ul&gt;&lt;li&gt;&lt;a href=&quot;https://medium.com/javarevisited/the-java-programmer-roadmap-f9db163ef2c2&quot;&gt;The 2022 Java Programmer RoadMap&lt;/a&gt;&lt;/li&gt;&lt;li&gt;&lt;a href=&quot;https://medium.com/javarevisited/20-essential-java-libraries-and-apis-every-programmer-should-learn-5ccd41812fc7&quot;&gt;Top 22 Java Libraries and APIs Every Programmer Should Learn in 2022&lt;/a&gt;&lt;/li&gt;&lt;li&gt;&lt;a href=&quot;https://medium.com/javarevisited/21-spring-mvc-rest-interview-questions-answers-for-beginners-and-experienced-developers-21ad3d4c9b82&quot;&gt;Top 10 Spring MVC + REST Interview Questions Answers for Beginners and Experienced Developers&lt;/a&gt;&lt;/li&gt;&lt;/ul&gt;&lt;img alt=&quot;&quot; height=&quot;1&quot; src=&quot;https://medium.com/_/stat?event=post.clientViewed&amp;amp;referrerSource=full_rss&amp;amp;postId=6ea2b1b79de5&quot; width=&quot;1&quot; /&gt;&lt;hr /&gt;&lt;p&gt;&lt;a href=&quot;https://medium.com/javarevisited/map-vs-multimap-6ea2b1b79de5&quot;&gt;Map vs. Multimap&lt;/a&gt; was originally published in &lt;a href=&quot;https://medium.com/javarevisited&quot;&gt;Javarevisited&lt;/a&gt; on Medium, where people are continuing the conversation by highlighting and responding to this story.&lt;/p&gt;</description>
	<pubDate>Tue, 19 Apr 2022 16:00:16 +0000</pubDate>
</item>
<item>
	<title>Mike Milinkovich: Eclipse Theia is the next generation of Eclipse!</title>
	<guid isPermaLink="false">http://eclipse-foundation.blog/?p=1672</guid>
	<link>https://eclipse-foundation.blog/2022/04/19/eclipse-theia-is-the-next-generation-of-eclipse/</link>
	<description>&lt;p&gt;For over 20 years the Eclipse IDE platform, along with the Eclipse Rich Client Platform (RCP), have provided core technologies for building richly featured language IDEs, products, and applications that are portable across Windows, Mac, and Linux desktops. However, time moves on and the next generation of desktop products and applications are now being built with web technologies. In many scenarios there is a need to support both desktop and web deployments with the same functionality, and obviously those who have this requirement would ideally like to support it using a single platform. &lt;/p&gt;



&lt;p&gt;With this shift towards web and cloud development, many Eclipse platform adopters are now evaluating how to best migrate their existing tools, IDEs and applications. One technology to consider is &lt;a href=&quot;https://theia-ide.org/&quot; rel=&quot;noreferrer noopener&quot; target=&quot;_blank&quot;&gt;Eclipse Theia&lt;/a&gt;. Theia is a platform that can be used for building both web and desktop IDEs and tools, based on modern, state-of-the-art web technologies (TypeScript, CSS, HTML). This often leads to the question: Is Eclipse Theia the next generation of Eclipse?&lt;/p&gt;



&lt;p&gt;&lt;a href=&quot;https://eclipsesource.com/&quot; rel=&quot;noreferrer noopener&quot; target=&quot;_blank&quot;&gt;EclipseSource&lt;/a&gt;, a member of the &lt;a href=&quot;https://ecdtools.eclipse.org/&quot; rel=&quot;noreferrer noopener&quot; target=&quot;_blank&quot;&gt;Eclipse Cloud DevTools Working Group&lt;/a&gt;,  recently published a &lt;a href=&quot;https://eclipsesource.com/blogs/2022/03/09/eclipse-theia-is-the-next-generation-eclipse-platform-for-ides-and-tools/&quot; rel=&quot;noreferrer noopener&quot; target=&quot;_blank&quot;&gt;blog post asking this question.&lt;/a&gt; The article discusses requirements for a tool platform and how both Eclipse desktop and Eclipse Theia address these requirements. Ultimately, they come to the conclusion that Eclipse Theia can indeed be considered the next generation platform for building portable applications. And I agree. Eclipse Theia is indeed the next generation tooling and applications platform from the Eclipse Foundation!&lt;/p&gt;



&lt;p&gt;Just to be clear, this is not an announcement of the deprecation of the Eclipse IDE, the Eclipse Tool Platform or Eclipse RCP. These projects are stable, widely used, well maintained, and will continue to be so for a long time. The timeframe of course depends on the health and activity of the ecosystem and the community, which is now the focus of the &lt;a href=&quot;https://eclipseide.org/&quot; rel=&quot;noreferrer noopener&quot; target=&quot;_blank&quot;&gt;Eclipse IDE Working Group&lt;/a&gt; created last year to ensure the long-term sustainability of the Eclipse IDE and Platform. I highly recommend any company building products or critical business applications on the Eclipse platform to join that group. At the same time, we are clearly seeing a shift of developer tools and IDEs towards web-based technology, and ultimately the cloud. As a result, many projects currently based on Eclipse desktop technologies are asking what comes next.&lt;/p&gt;



&lt;p&gt;The Eclipse ecosystem has always combined sustainability, innovation, and vendor neutral collaboration. For the last 20 years, the Eclipse desktop ecosystem has been an exemplar of this, and it will continue to be a focus of the Foundation. At the same time, we continue to innovate, e.g. with &lt;a href=&quot;https://theia-ide.org/&quot;&gt;Eclipse Theia&lt;/a&gt; and other related technologies such as &lt;a href=&quot;https://www.eclipse.org/che/&quot;&gt;Eclipse Che&lt;/a&gt;, &lt;a href=&quot;https://www.eclipse.org/glsp/&quot;&gt;Eclipse GLSP&lt;/a&gt;, and &lt;a href=&quot;https://www.eclipse.org/emfcloud/&quot;&gt;EMF.cloud&lt;/a&gt;. This is the beauty of an industry-driven open source ecosystem like Eclipse. It addresses the requirements of adopters to have a stable platform, while also providing paths to move forward and innovate.&lt;/p&gt;



&lt;p&gt;Despite not sharing a single line of code, in many ways Theia is an evolution of the Eclipse Tools Platform. Theia builds on wisdom distilled from two decades of engineering at Eclipse, in order to inspire the next generation. Besides the obvious benefit of simply offering a web-based technology stack, Theia is slimmer, and able to lean more heavily on aspects of the web technology stack. It does not, for example, provide its own UI technology (as Eclipse needed to do with SWT). It also doesn’t provide a new module system (as Eclipse did with OSGi). Instead, it is based on available technologies such as HTML/TypeScript, Node, VS Code extensions, and the Monaco Code Editor. This is great for the sustainability of the project. By maintaining less code and reusing more standard technologies, development resources can be focused more on the core capabilities of the platform.&lt;/p&gt;



&lt;p&gt;Theia also has a very healthy community of active contributors, adopters and funding organizations. It is seeing widespread and mainstream adoption, serving as the platform for notable commercial technologies, including the &lt;a href=&quot;https://docs.arduino.cc/software/ide-v2&quot; rel=&quot;noreferrer noopener&quot; target=&quot;_blank&quot;&gt;Arduino IDE&lt;/a&gt;, Arm’s &lt;a href=&quot;https://os.mbed.com/studio/&quot; rel=&quot;noreferrer noopener&quot; target=&quot;_blank&quot;&gt;mbed studio&lt;/a&gt;, and the &lt;a href=&quot;https://cloud.google.com/blog/products/application-development/introducing-cloud-shell-editor&quot; rel=&quot;noreferrer noopener&quot; target=&quot;_blank&quot;&gt;Google Cloud Shell Editor&lt;/a&gt;. There is also a wealth of extensions freely available for Theia at the &lt;a href=&quot;https://open-vsx.org/&quot; rel=&quot;noreferrer noopener&quot; target=&quot;_blank&quot;&gt;Open VSX Registry&lt;/a&gt;. &lt;/p&gt;



&lt;figure class=&quot;wp-block-image&quot;&gt;&lt;img alt=&quot;&quot; src=&quot;https://lh4.googleusercontent.com/jEiduyNCzSi-KpK6Gvq4yH0lBYXpbW8Wy9m2wKssyR-wY4QZpoefgQu6Ry1dclYfZ0WK8frbe2XgOg5VRaxVQPzmiTfoToZfLpeCtRmzC7bFBH8FoNd_9aazC5UBP_RDmjRTYJm4&quot; /&gt;&lt;/figure&gt;



&lt;p&gt;&lt;a href=&quot;https://www.openhub.net/p/theia-ide&quot;&gt;Theia on openHub&lt;/a&gt;&lt;/p&gt;



&lt;figure class=&quot;wp-block-image size-large&quot;&gt;&lt;a href=&quot;https://mmilinkov.files.wordpress.com/2022/04/theia-contributors-adopters.png&quot;&gt;&lt;img alt=&quot;&quot; class=&quot;wp-image-1678&quot; src=&quot;https://mmilinkov.files.wordpress.com/2022/04/theia-contributors-adopters.png?w=1024&quot; /&gt;&lt;/a&gt;&lt;/figure&gt;



&lt;p&gt;I should also point out that along with Theia, there are several additional technologies that help create a solid ecosystem for the next generation tool platform at the Eclipse Foundation. To mention just a few, &lt;a href=&quot;https://www.eclipse.org/che/&quot;&gt;Eclipse Che&lt;/a&gt; offers online workspace management; &lt;a href=&quot;https://www.eclipse.org/glsp/&quot;&gt;Eclipse GLSP&lt;/a&gt; provides support for building diagram editors in the browser; &lt;a href=&quot;https://projects.eclipse.org/projects/ecd.cdt.cloud&quot;&gt;Eclipse CDT.cloud&lt;/a&gt; for building customizable web-based C/C++ tools and &lt;a href=&quot;https://www.eclipse.org/emfcloud/&quot;&gt;EMF.cloud&lt;/a&gt; moves the Eclipse modeling ecosystem to the web.&lt;/p&gt;



&lt;p&gt;We are very happy to see Theia flourishing and the robustness of its community.  Theia certainly is the central building block of the new generation of tools that want to benefit from web-based technologies and cloud deployments. And so, yes, in this context, Theia and its ecosystem can be considered the next generation of Eclipse Platform.&lt;/p&gt;



&lt;p class=&quot;has-small-font-size&quot;&gt;2022-04-19: Edited to update the contributors logo graphic&lt;/p&gt;</description>
	<pubDate>Tue, 19 Apr 2022 11:57:00 +0000</pubDate>
</item>

</channel>
</rss>
